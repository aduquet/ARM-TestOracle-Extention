package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_StackTest_0_8000_2 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1001");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver10.push((java.lang.Object) stackTestDriver36);
        java.lang.Class<?> wildcardClass62 = stackTestDriver36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1002");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1003");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = stackTestDriver9.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = stackTestDriver25.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver25.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj48 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        java.lang.Object obj58 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj61 = stackTestDriver9.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj62 = stackTestDriver0.push(obj61);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass71 = stackTestDriver64.getClass();
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass74 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0d + "'", obj16, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1004");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1005");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1006");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver20.push(obj76);
        stackTestDriver20.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1007");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver46.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj59 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) stackTestDriver46);
        java.lang.Class<?> wildcardClass62 = stackTestDriver46.getClass();
        java.lang.Object obj63 = stackTestDriver17.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver17.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1008");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) 10L);
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10L + "'", obj52, 10L);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1009");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj17 = stackTestDriver6.push((java.lang.Object) (byte) -1);
        java.lang.Object obj18 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        java.lang.Object obj30 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver34.push(obj68);
        java.lang.Class<?> wildcardClass71 = stackTestDriver34.getClass();
        java.lang.Object obj72 = stackTestDriver21.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj73 = stackTestDriver6.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) -1 + "'", obj17, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) -1 + "'", obj18, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1010");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Class<?> wildcardClass15 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1011");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver10.push((java.lang.Object) stackTestDriver36);
        stackTestDriver10.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1012");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass18 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1013");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass54 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1014");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj80 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj81 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        stackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver82.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver66.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = stackTestDriver55.push(obj87);
        java.lang.Object obj89 = stackTestDriver14.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj90 = stackTestDriver55.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10.0f + "'", obj79, 10.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1015");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Object obj20 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver28.pop();
        java.lang.Object obj36 = stackTestDriver21.push((java.lang.Object) stackTestDriver28);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver37.pop();
        java.lang.Object obj54 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Class<?> wildcardClass55 = stackTestDriver28.getClass();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1L + "'", obj19, 1L);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0d + "'", obj27, 1.0d);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1016");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj77 = stackTestDriver26.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj78 = stackTestDriver0.push(obj77);
        java.lang.Object obj79 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1017");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj71 = stackTestDriver55.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj72 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver40.push((java.lang.Object) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = stackTestDriver40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1018");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) (byte) -1);
        stackTestDriver18.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        stackTestDriver18.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) -1 + "'", obj29, (byte) -1);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1019");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1020");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        java.lang.Object obj50 = stackTestDriver8.push((java.lang.Object) stackTestDriver31);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1021");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1022");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj22 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass23 = stackTestDriver15.getClass();
        java.lang.Object obj24 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj25 = stackTestDriver6.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj26 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver32.push(obj46);
        java.lang.Object obj48 = stackTestDriver27.push(obj46);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver52.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass65 = stackTestDriver57.getClass();
        java.lang.Object obj66 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj67 = stackTestDriver27.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj68 = stackTestDriver7.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj69 = stackTestDriver7.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Class<?> wildcardClass71 = stackTestDriver7.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1023");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj64 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        stackTestDriver48.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver48.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1024");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = stackTestDriver37.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1025");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        stackTestDriver66.clear();
        java.lang.Object obj76 = stackTestDriver1.push((java.lang.Object) stackTestDriver66);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1026");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver15.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (byte) 100);
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver32.push(obj43);
        java.lang.Object obj45 = stackTestDriver15.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        java.lang.Object obj65 = stackTestDriver56.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver56.push(obj70);
        java.lang.Object obj72 = stackTestDriver46.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj73 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj86 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj87 = stackTestDriver46.push(obj86);
        java.lang.Object obj88 = stackTestDriver15.push(obj87);
        java.lang.Object obj89 = stackTestDriver9.push(obj87);
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1027");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver33.push((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver0.push((java.lang.Object) wildcardClass41);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 1L);
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) 1L);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (-1L) + "'", obj40, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Long");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1L + "'", obj47, 1L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1L + "'", obj48, 1L);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1028");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver57.pop();
        java.lang.Object obj75 = stackTestDriver57.push((java.lang.Object) 10);
        java.lang.Object obj76 = stackTestDriver57.pop();
        java.lang.Object obj77 = stackTestDriver10.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10 + "'", obj75, 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10 + "'", obj76, 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1029");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver10.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver10.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver57.pop();
        java.lang.Object obj75 = stackTestDriver57.push((java.lang.Object) 10);
        java.lang.Object obj76 = stackTestDriver57.pop();
        java.lang.Object obj77 = stackTestDriver10.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj78 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10 + "'", obj75, 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10 + "'", obj76, 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1030");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1031");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver26.push(obj37);
        java.lang.Class<?> wildcardClass39 = stackTestDriver26.getClass();
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver26);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1032");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        stackTestDriver51.clear();
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        java.lang.Object obj73 = stackTestDriver51.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj75 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1033");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver3.push((java.lang.Object) 0.0f);
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 1.0d);
        stackTestDriver3.clear();
        java.lang.Class<?> wildcardClass11 = stackTestDriver3.getClass();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = stackTestDriver13.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver21.push(obj27);
        java.lang.Object obj30 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver21.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj48 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj61 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj62 = stackTestDriver21.push(obj61);
        java.lang.Object obj63 = stackTestDriver13.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass64 = stackTestDriver21.getClass();
        java.lang.Object obj65 = stackTestDriver3.push((java.lang.Object) stackTestDriver21);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0f + "'", obj7, 0.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0d + "'", obj9, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10.0f + "'", obj20, 10.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1034");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1035");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        stackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) "");
        java.lang.Object obj31 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        java.lang.Object obj34 = stackTestDriver18.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver35.push(obj46);
        java.lang.Object obj48 = stackTestDriver18.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj49 = stackTestDriver18.pop();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        java.lang.Class<?> wildcardClass51 = stackTestDriver18.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1036");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver24.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        java.lang.Class<?> wildcardClass64 = stackTestDriver36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1037");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass51 = stackTestDriver43.getClass();
        java.lang.Object obj52 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj53 = stackTestDriver34.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj55 = stackTestDriver35.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        java.lang.Object obj65 = stackTestDriver35.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver0.push(obj65);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) -1 + "'", obj55, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1038");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver0.pop();
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Object obj98 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1039");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        java.lang.Object obj37 = stackTestDriver0.pop();
        java.lang.Object obj38 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver39.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj64 = stackTestDriver48.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver55.getClass();
        java.lang.Object obj68 = stackTestDriver39.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1040");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1041");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        java.lang.Object obj34 = stackTestDriver18.push(obj33);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = stackTestDriver18.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1042");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver66.pop();
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass77 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1043");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        stackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver69.push((java.lang.Object) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1044");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver0.push((java.lang.Object) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0d + "'", obj45, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Double");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1045");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver7.push((java.lang.Object) false);
        java.lang.Object obj16 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Class<?> wildcardClass20 = stackTestDriver7.getClass();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1046");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = stackTestDriver0.push(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1047");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver41.push(obj47);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj64 = stackTestDriver41.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver66.pop();
        java.lang.Object obj86 = stackTestDriver41.push(obj85);
        java.lang.Object obj87 = stackTestDriver22.push(obj86);
        java.lang.Object obj88 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1048");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj52 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver27.push(obj60);
        java.lang.Object obj62 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver27.push(obj67);
        java.lang.Object obj69 = stackTestDriver21.push(obj68);
        java.lang.Class<?> wildcardClass70 = stackTestDriver21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1049");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1050");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj34 = stackTestDriver31.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver8.push((java.lang.Object) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "hi!" + "'", obj34, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.String");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1051");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        java.lang.Object obj58 = stackTestDriver16.push((java.lang.Object) stackTestDriver34);
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1052");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) (byte) -1);
        java.lang.Object obj58 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver25.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver62.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver76.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj89 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver67.push((java.lang.Object) stackTestDriver76);
        stackTestDriver67.clear();
        java.lang.Object obj93 = stackTestDriver25.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver67);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) -1 + "'", obj57, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1053");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1054");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Class<?> wildcardClass41 = stackTestDriver24.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1055");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj52 = stackTestDriver36.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = stackTestDriver53.push(obj64);
        java.lang.Object obj66 = stackTestDriver36.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj67 = stackTestDriver36.pop();
        java.lang.Object obj68 = stackTestDriver36.pop();
        java.lang.Object obj69 = stackTestDriver0.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1056");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) "");
        java.lang.Object obj81 = stackTestDriver70.push((java.lang.Object) stackTestDriver75);
        stackTestDriver70.clear();
        java.lang.Object obj83 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        experiment.drivers.StackTestDriver stackTestDriver84 = new experiment.drivers.StackTestDriver();
        stackTestDriver84.clear();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = stackTestDriver84.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = stackTestDriver84.pop();
        stackTestDriver84.clear();
        stackTestDriver84.clear();
        java.lang.Object obj92 = stackTestDriver70.push((java.lang.Object) stackTestDriver84);
        experiment.drivers.StackTestDriver stackTestDriver93 = new experiment.drivers.StackTestDriver();
        stackTestDriver93.clear();
        java.lang.Object obj96 = stackTestDriver93.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = stackTestDriver70.push((java.lang.Object) wildcardClass97);
        java.lang.Object obj99 = stackTestDriver0.push((java.lang.Object) wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + "hi!" + "'", obj96, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.String");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.String");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1057");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj30 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass31 = stackTestDriver23.getClass();
        java.lang.Object obj32 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj33 = stackTestDriver14.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj35 = stackTestDriver15.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj45 = stackTestDriver15.push((java.lang.Object) stackTestDriver36);
        stackTestDriver15.clear();
        java.lang.Class<?> wildcardClass47 = stackTestDriver15.getClass();
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1058");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver56.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj69 = stackTestDriver46.push(obj68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj90 = stackTestDriver71.pop();
        java.lang.Object obj91 = stackTestDriver46.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        java.lang.Object obj93 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass94 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1059");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver21.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj33 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj35 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = stackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1060");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj3 = stackTestDriver0.push((java.lang.Object) 0L);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 0L + "'", obj3, 0L);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1061");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = stackTestDriver8.push((java.lang.Object) 1.0d);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj43 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj57 = stackTestDriver16.push(obj56);
        java.lang.Object obj58 = stackTestDriver8.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        stackTestDriver59.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver59.getClass();
        java.lang.Object obj66 = stackTestDriver8.push((java.lang.Object) wildcardClass65);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver68.push(obj79);
        java.lang.Object obj81 = stackTestDriver8.push(obj80);
        java.lang.Object obj82 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass83 = stackTestDriver8.getClass();
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) 0.0f);
        java.lang.Object obj91 = stackTestDriver85.push((java.lang.Object) 1.0d);
        java.lang.Object obj92 = stackTestDriver85.pop();
        stackTestDriver85.clear();
        stackTestDriver85.clear();
        java.lang.Class<?> wildcardClass95 = stackTestDriver85.getClass();
        java.lang.Object obj96 = stackTestDriver8.push((java.lang.Object) wildcardClass95);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0d + "'", obj14, 1.0d);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 0.0f + "'", obj89, 0.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0d + "'", obj91, 1.0d);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0d + "'", obj92, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1062");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver33.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj45 = stackTestDriver38.pop();
        java.lang.Class<?> wildcardClass46 = stackTestDriver38.getClass();
        java.lang.Object obj47 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj48 = stackTestDriver29.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj49 = stackTestDriver30.pop();
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1063");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Object obj98 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0f + "'", obj96, 0.0f);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 0.0f + "'", obj97, 0.0f);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1064");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1065");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver9.pop();
        java.lang.Object obj28 = stackTestDriver0.push(obj27);
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = stackTestDriver0.push(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1066");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj56 = stackTestDriver40.push((java.lang.Object) stackTestDriver47);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver40.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj71 = stackTestDriver33.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj72 = stackTestDriver24.push(obj71);
        java.lang.Object obj73 = stackTestDriver0.push(obj71);
        java.lang.Class<?> wildcardClass74 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0d + "'", obj39, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1067");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        java.lang.Object obj49 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1068");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver60.push(obj66);
        java.lang.Object obj69 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj71 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass72 = stackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1069");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1070");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) (byte) -1);
        stackTestDriver13.clear();
        java.lang.Object obj26 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver32.push(obj46);
        java.lang.Object obj48 = stackTestDriver27.push(obj46);
        java.lang.Object obj49 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj66 = stackTestDriver50.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver67.push(obj78);
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        java.lang.Object obj83 = stackTestDriver27.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj84 = stackTestDriver27.pop();
        java.lang.Object obj85 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj87 = stackTestDriver5.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) -1 + "'", obj24, (byte) -1);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0.0f + "'", obj85, 0.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1071");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Object obj71 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1072");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1073");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1074");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        stackTestDriver61.clear();
        java.lang.Object obj75 = stackTestDriver55.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver61);
        java.lang.Class<?> wildcardClass77 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1075");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Class<?> wildcardClass42 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1076");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1077");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1078");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        java.lang.Object obj61 = stackTestDriver45.push(obj60);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj64 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass65 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1079");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) (byte) -1);
        java.lang.Object obj58 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver25.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) "");
        java.lang.Object obj73 = stackTestDriver62.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver76.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj89 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj91 = stackTestDriver67.push((java.lang.Object) stackTestDriver76);
        stackTestDriver67.clear();
        java.lang.Object obj93 = stackTestDriver25.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver67);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) -1 + "'", obj57, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) -1 + "'", obj58, (byte) -1);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + "" + "'", obj72, "");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1080");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1081");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver26.push(obj32);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj49 = stackTestDriver26.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver50.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver51.pop();
        java.lang.Object obj71 = stackTestDriver26.push(obj70);
        java.lang.Object obj72 = stackTestDriver26.pop();
        java.lang.Object obj73 = stackTestDriver21.push(obj72);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver78.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj90 = stackTestDriver83.pop();
        java.lang.Class<?> wildcardClass91 = stackTestDriver83.getClass();
        java.lang.Object obj92 = stackTestDriver75.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj93 = stackTestDriver74.push((java.lang.Object) stackTestDriver75);
        java.lang.Object obj94 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj97 = stackTestDriver75.push((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass98 = stackTestDriver75.getClass();
        java.lang.Object obj99 = stackTestDriver21.push((java.lang.Object) stackTestDriver75);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (-1L) + "'", obj97, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1082");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        java.lang.Object obj18 = stackTestDriver12.push((java.lang.Object) 100L);
        java.lang.Object obj20 = stackTestDriver12.push((java.lang.Object) false);
        java.lang.Object obj21 = stackTestDriver12.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver12.push(obj26);
        java.lang.Object obj28 = stackTestDriver7.push(obj26);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj38 = stackTestDriver7.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj39 = stackTestDriver0.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj40 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 100L + "'", obj18, 100L);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1083");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj45 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj66 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj69 = stackTestDriver47.push((java.lang.Object) (-1L));
        stackTestDriver47.clear();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj73 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass74 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1084");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1085");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Float");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1086");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj28 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver29.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver9.push((java.lang.Object) stackTestDriver29);
        stackTestDriver9.clear();
        java.lang.Object obj73 = stackTestDriver9.push((java.lang.Object) 0);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver80.pop();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver80.push(obj94);
        java.lang.Object obj96 = stackTestDriver75.push(obj94);
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) stackTestDriver75);
        stackTestDriver75.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0 + "'", obj74, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + false + "'", obj89, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1087");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass52 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1088");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver0.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0d + "'", obj45, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Double");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Double");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1089");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Class<?> wildcardClass32 = stackTestDriver24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1090");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        stackTestDriver61.clear();
        java.lang.Object obj75 = stackTestDriver55.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver61);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1091");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) 0.0f);
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass65 = stackTestDriver57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1092");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj40 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver46.push(obj60);
        java.lang.Object obj62 = stackTestDriver41.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = stackTestDriver66.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj78 = stackTestDriver71.pop();
        java.lang.Class<?> wildcardClass79 = stackTestDriver71.getClass();
        java.lang.Object obj80 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj81 = stackTestDriver41.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj82 = stackTestDriver15.push(obj81);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj84 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1093");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver55.pop();
        java.lang.Object obj97 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Class<?> wildcardClass99 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0d + "'", obj96, 0.0d);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (short) 10 + "'", obj97, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1094");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) "");
        java.lang.Object obj50 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj57 = stackTestDriver32.push(obj56);
        stackTestDriver32.clear();
        java.lang.Object obj59 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = stackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1095");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver9.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1096");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass33 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1097");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = stackTestDriver20.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj59 = stackTestDriver0.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj60 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0d + "'", obj27, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1098");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Class<?> wildcardClass56 = stackTestDriver40.getClass();
        java.lang.Object obj57 = stackTestDriver25.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj59 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1099");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1100");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj29);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass34 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1101");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj41 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) "");
        java.lang.Object obj54 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj60 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        stackTestDriver48.clear();
        java.lang.Object obj62 = stackTestDriver42.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver0.push(obj62);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1102");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj45 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1103");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver17.push(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1104");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver32.getClass();
        java.lang.Object obj39 = stackTestDriver8.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) (byte) -1);
        stackTestDriver40.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver40.getClass();
        java.lang.Object obj54 = stackTestDriver8.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver8.pop();
        java.lang.Object obj56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver8.push(obj56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) -1 + "'", obj51, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1105");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass66 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1106");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Object obj54 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0d + "'", obj54, 0.0d);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1107");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1108");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Class<?> wildcardClass27 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1109");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Object obj25 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1110");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = stackTestDriver0.push(obj55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1111");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver63.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver63.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver63.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj76 = stackTestDriver63.pop();
        java.lang.Object obj77 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj79 = stackTestDriver60.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj80 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1112");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        java.lang.Object obj31 = stackTestDriver14.push(obj30);
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj36 = stackTestDriver14.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver37.pop();
        java.lang.Object obj54 = stackTestDriver14.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj55 = stackTestDriver8.push((java.lang.Object) stackTestDriver37);
        java.lang.Class<?> wildcardClass56 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1113");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        java.lang.Object obj24 = stackTestDriver7.push(obj23);
        java.lang.Object obj25 = stackTestDriver7.pop();
        java.lang.Object obj26 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj29 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj30 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1114");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1115");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver33.push(obj47);
        java.lang.Object obj49 = stackTestDriver28.push(obj47);
        java.lang.Object obj50 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver51.push(obj62);
        java.lang.Object obj64 = stackTestDriver28.push(obj62);
        java.lang.Class<?> wildcardClass65 = stackTestDriver28.getClass();
        java.lang.Object obj66 = stackTestDriver15.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj68 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1116");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj53 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1117");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj65 = stackTestDriver14.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1118");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1119");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1120");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver17.push((java.lang.Object) stackTestDriver34);
        stackTestDriver34.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1121");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Object obj15 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver16.push(obj38);
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = stackTestDriver9.push(obj38);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = stackTestDriver42.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver42.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj55 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver42.getClass();
        java.lang.Object obj58 = stackTestDriver9.push((java.lang.Object) wildcardClass57);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Object obj88 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Class<?> wildcardClass90 = stackTestDriver74.getClass();
        java.lang.Object obj91 = stackTestDriver59.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj92 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        java.lang.Class<?> wildcardClass94 = stackTestDriver59.getClass();
        java.lang.Object obj95 = stackTestDriver9.push((java.lang.Object) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1) + "'", obj15, (-1));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1122");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1123");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver32.getClass();
        java.lang.Object obj39 = stackTestDriver8.push((java.lang.Object) stackTestDriver32);
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1124");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver66.pop();
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1125");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj41 = stackTestDriver22.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1126");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 1.0d);
        java.lang.Object obj17 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = stackTestDriver18.push((java.lang.Object) 0.0d);
        java.lang.Object obj27 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver10.push(obj27);
        stackTestDriver10.clear();
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver41.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj54 = stackTestDriver31.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver59.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver64.getClass();
        java.lang.Object obj73 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj74 = stackTestDriver55.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj75 = stackTestDriver56.pop();
        java.lang.Object obj76 = stackTestDriver31.push(obj75);
        java.lang.Object obj77 = stackTestDriver31.pop();
        java.lang.Object obj78 = stackTestDriver31.pop();
        java.lang.Object obj79 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver31.getClass();
        java.lang.Object obj81 = stackTestDriver10.push((java.lang.Object) wildcardClass80);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0d + "'", obj17, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0d + "'", obj25, 0.0d);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1127");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver44.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj57 = stackTestDriver44.pop();
        java.lang.Object obj58 = stackTestDriver44.pop();
        java.lang.Object obj59 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass60 = stackTestDriver44.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver44);
        java.lang.Class<?> wildcardClass62 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 100L + "'", obj59, 100L);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1128");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        stackTestDriver1.clear();
        java.lang.Object obj65 = stackTestDriver1.push((java.lang.Object) 0);
        java.lang.Object obj66 = stackTestDriver1.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1129");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Object obj71 = stackTestDriver54.push(obj70);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj76 = stackTestDriver54.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj83 = stackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Object obj85 = stackTestDriver77.push((java.lang.Object) false);
        java.lang.Object obj86 = stackTestDriver77.pop();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver77.push(obj91);
        java.lang.Object obj93 = stackTestDriver77.pop();
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver77.pop();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver77);
        stackTestDriver77.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = stackTestDriver77.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1130");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) '4');
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + '4' + "'", obj23, '4');
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + '4' + "'", obj24, '4');
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1131");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1132");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj35 = stackTestDriver5.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        java.lang.Object obj45 = stackTestDriver36.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver36.push(obj50);
        java.lang.Object obj52 = stackTestDriver36.pop();
        java.lang.Object obj54 = stackTestDriver36.push((java.lang.Object) 10);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10 + "'", obj54, 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10 + "'", obj55, 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1133");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = stackTestDriver24.push((java.lang.Object) 10.0f);
        java.lang.Object obj32 = stackTestDriver18.push((java.lang.Object) 10.0f);
        java.lang.Object obj33 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver18.push((java.lang.Object) wildcardClass37);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        java.lang.Object obj64 = stackTestDriver57.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Class<?> wildcardClass67 = stackTestDriver43.getClass();
        java.lang.Object obj68 = stackTestDriver18.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj69 = stackTestDriver0.push(obj68);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1134");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = stackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1135");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver19.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = stackTestDriver19.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1136");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj41 = stackTestDriver0.push(obj40);
        java.lang.Object obj42 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        stackTestDriver51.clear();
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver65.pop();
        stackTestDriver65.clear();
        stackTestDriver65.clear();
        java.lang.Object obj73 = stackTestDriver51.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj74 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = stackTestDriver0.push(obj75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1137");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj22 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass23 = stackTestDriver15.getClass();
        java.lang.Object obj24 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj25 = stackTestDriver6.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj26 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver32.push(obj46);
        java.lang.Object obj48 = stackTestDriver27.push(obj46);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver52.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass65 = stackTestDriver57.getClass();
        java.lang.Object obj66 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj67 = stackTestDriver27.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj68 = stackTestDriver7.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj69 = stackTestDriver7.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        java.lang.Class<?> wildcardClass72 = stackTestDriver7.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1138");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        java.lang.Object obj71 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) "");
        java.lang.Object obj86 = stackTestDriver75.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj87 = stackTestDriver80.pop();
        java.lang.Class<?> wildcardClass88 = stackTestDriver80.getClass();
        java.lang.Object obj89 = stackTestDriver72.push((java.lang.Object) stackTestDriver80);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver72);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1139");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) 0.0f);
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 1.0d);
        java.lang.Object obj67 = stackTestDriver60.pop();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = stackTestDriver68.push((java.lang.Object) 0.0d);
        java.lang.Object obj77 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj78 = stackTestDriver60.push(obj77);
        stackTestDriver60.clear();
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Class<?> wildcardClass82 = stackTestDriver50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0f + "'", obj64, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0d + "'", obj66, 1.0d);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0d + "'", obj67, 1.0d);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0.0d + "'", obj75, 0.0d);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + false + "'", obj78, false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1140");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver7.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (-1));
        java.lang.Object obj22 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver23.push(obj29);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        java.lang.Object obj39 = stackTestDriver33.push((java.lang.Object) 100L);
        java.lang.Object obj41 = stackTestDriver33.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver33.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj46 = stackTestDriver23.push(obj45);
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Object obj48 = stackTestDriver16.push(obj45);
        java.lang.Object obj49 = stackTestDriver0.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) 0.0f);
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver57.pop();
        java.lang.Object obj65 = stackTestDriver50.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass66 = stackTestDriver57.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1) + "'", obj21, (-1));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1) + "'", obj22, (-1));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100L + "'", obj39, 100L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0f + "'", obj54, 0.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0d + "'", obj56, 1.0d);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 100L + "'", obj64, 100L);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1141");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        java.lang.Class<?> wildcardClass97 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1142");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass33 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1143");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1144");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1145");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj64 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1146");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        stackTestDriver19.clear();
        java.lang.Object obj33 = stackTestDriver13.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver19.push((java.lang.Object) wildcardClass42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver64.getClass();
        java.lang.Object obj71 = stackTestDriver44.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver19.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1147");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1148");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver44.pop();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) stackTestDriver44);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1149");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        java.lang.Object obj56 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1150");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj72 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver50.push((java.lang.Object) stackTestDriver58);
        java.lang.Class<?> wildcardClass74 = stackTestDriver58.getClass();
        java.lang.Object obj75 = stackTestDriver43.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj76 = stackTestDriver5.push(obj75);
        java.lang.Object obj77 = stackTestDriver5.pop();
        java.lang.Class<?> wildcardClass78 = stackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1151");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        java.lang.Class<?> wildcardClass34 = stackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1152");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        java.lang.Object obj24 = stackTestDriver7.push(obj23);
        java.lang.Object obj25 = stackTestDriver7.pop();
        java.lang.Object obj26 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj29 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj33 = stackTestDriver30.push((java.lang.Object) 0L);
        java.lang.Class<?> wildcardClass34 = stackTestDriver30.getClass();
        java.lang.Object obj35 = stackTestDriver7.push((java.lang.Object) stackTestDriver30);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0L + "'", obj33, 0L);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1153");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        java.lang.Class<?> wildcardClass41 = stackTestDriver27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1154");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver20.push((java.lang.Object) wildcardClass51);
        stackTestDriver20.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Float");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1155");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        java.lang.Object obj24 = stackTestDriver7.push(obj23);
        java.lang.Object obj25 = stackTestDriver7.pop();
        java.lang.Object obj26 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj29 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1156");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver22.push(obj28);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver22.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj69 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver54.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = stackTestDriver22.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj77 = stackTestDriver54.pop();
        java.lang.Object obj78 = stackTestDriver15.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj79 = stackTestDriver0.push(obj78);
        java.lang.Object obj80 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1157");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass19 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1158");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1159");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        java.lang.Object obj15 = stackTestDriver9.pop();
        java.lang.Object obj16 = stackTestDriver9.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1160");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver26.push(obj37);
        java.lang.Class<?> wildcardClass39 = stackTestDriver26.getClass();
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver26);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass43 = stackTestDriver8.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1161");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        java.lang.Object obj33 = stackTestDriver22.push((java.lang.Object) (byte) -1);
        java.lang.Object obj34 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj37 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver52.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj65 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj67 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        stackTestDriver43.clear();
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver43);
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver73.push((java.lang.Object) 0.0f);
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 1.0d);
        java.lang.Object obj80 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (short) 10);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 0.0d);
        java.lang.Object obj90 = stackTestDriver81.push((java.lang.Object) false);
        java.lang.Object obj91 = stackTestDriver73.push(obj90);
        stackTestDriver73.clear();
        java.lang.Class<?> wildcardClass93 = stackTestDriver73.getClass();
        java.lang.Object obj94 = stackTestDriver43.push((java.lang.Object) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = stackTestDriver43.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) -1 + "'", obj33, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) -1 + "'", obj34, (byte) -1);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0f + "'", obj77, 0.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0d + "'", obj79, 1.0d);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0d + "'", obj80, 1.0d);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0.0d + "'", obj88, 0.0d);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + false + "'", obj90, false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1162");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1163");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver17.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        stackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) wildcardClass32);
        stackTestDriver29.clear();
        stackTestDriver29.clear();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver29.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = stackTestDriver22.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver75.getClass();
        java.lang.Object obj92 = stackTestDriver60.push((java.lang.Object) stackTestDriver75);
        java.lang.Object obj93 = stackTestDriver22.push(obj92);
        java.lang.Object obj94 = stackTestDriver22.pop();
        java.lang.Object obj95 = stackTestDriver22.pop();
        java.lang.Object obj96 = stackTestDriver0.push(obj95);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1164");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1165");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj96 = stackTestDriver55.pop();
        java.lang.Object obj97 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass98 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0d + "'", obj96, 0.0d);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (short) 10 + "'", obj97, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1166");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) 0.0f);
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 1.0d);
        java.lang.Object obj54 = stackTestDriver47.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        java.lang.Object obj64 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj65 = stackTestDriver47.push(obj64);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj72 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver66.push((java.lang.Object) false);
        java.lang.Object obj76 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        stackTestDriver80.clear();
        java.lang.Object obj89 = stackTestDriver66.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj90 = stackTestDriver47.push(obj89);
        java.lang.Object obj91 = stackTestDriver25.push(obj90);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0d + "'", obj53, 1.0d);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0d + "'", obj54, 1.0d);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100L + "'", obj77, 100L);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1167");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1168");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        stackTestDriver6.clear();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) wildcardClass9);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj28 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Class<?> wildcardClass61 = stackTestDriver45.getClass();
        java.lang.Object obj62 = stackTestDriver30.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj63 = stackTestDriver14.push((java.lang.Object) stackTestDriver30);
        java.lang.Class<?> wildcardClass64 = stackTestDriver14.getClass();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) wildcardClass64);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 10.0f + "'", obj27, 10.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1169");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        java.lang.Class<?> wildcardClass81 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1170");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver54.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj81 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj95 = stackTestDriver54.push(obj94);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = stackTestDriver0.push(obj95);
        java.lang.Class<?> wildcardClass98 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1171");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 100L);
        java.lang.Object obj17 = stackTestDriver9.push((java.lang.Object) false);
        java.lang.Object obj18 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        stackTestDriver19.clear();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) wildcardClass22);
        java.lang.Object obj24 = stackTestDriver9.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push(obj23);
        java.lang.Class<?> wildcardClass26 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1172");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        stackTestDriver44.clear();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver44.push((java.lang.Object) stackTestDriver52);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = stackTestDriver52.push((java.lang.Object) wildcardClass71);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj77 = stackTestDriver26.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj78 = stackTestDriver0.push(obj77);
        java.lang.Class<?> wildcardClass79 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1173");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj3 = stackTestDriver0.push((java.lang.Object) 0L);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        stackTestDriver5.clear();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = stackTestDriver5.push((java.lang.Object) wildcardClass8);
        java.lang.Object obj10 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj21 = stackTestDriver5.push((java.lang.Object) stackTestDriver12);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        stackTestDriver29.clear();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = stackTestDriver22.push(obj33);
        java.lang.Object obj35 = stackTestDriver5.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver38.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) (byte) 100);
        java.lang.Object obj90 = stackTestDriver83.push((java.lang.Object) 10.0f);
        java.lang.Object obj91 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj92 = stackTestDriver69.push((java.lang.Object) stackTestDriver77);
        java.lang.Class<?> wildcardClass93 = stackTestDriver77.getClass();
        java.lang.Object obj94 = stackTestDriver62.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver46.push((java.lang.Object) stackTestDriver62);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = stackTestDriver22.push((java.lang.Object) wildcardClass96);
        java.lang.Object obj98 = stackTestDriver22.pop();
        java.lang.Object obj99 = stackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 0L + "'", obj3, 0L);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10.0f + "'", obj90, 10.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10.0f + "'", obj91, 10.0f);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1174");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1175");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1176");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1177");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj35 = stackTestDriver5.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj36 = stackTestDriver5.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1178");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver55.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj67 = stackTestDriver60.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver60.getClass();
        java.lang.Object obj69 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj70 = stackTestDriver52.pop();
        java.lang.Object obj71 = stackTestDriver52.pop();
        java.lang.Object obj72 = stackTestDriver25.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj73 = stackTestDriver25.pop();
        java.lang.Object obj74 = stackTestDriver25.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1179");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver41.push(obj47);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj64 = stackTestDriver41.push(obj63);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver66.pop();
        java.lang.Object obj86 = stackTestDriver41.push(obj85);
        java.lang.Object obj87 = stackTestDriver22.push(obj86);
        java.lang.Object obj88 = stackTestDriver22.pop();
        java.lang.Object obj89 = stackTestDriver22.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1180");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass48 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1181");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1182");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass58 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1183");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1184");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj32 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1185");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver52.push(obj58);
        java.lang.Object obj61 = stackTestDriver52.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        java.lang.Object obj69 = stackTestDriver52.push(obj68);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        java.lang.Object obj74 = stackTestDriver52.push((java.lang.Object) 1L);
        java.lang.Object obj75 = stackTestDriver0.push(obj74);
        java.lang.Object obj76 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1L + "'", obj74, 1L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1L + "'", obj75, 1L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1186");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) (byte) -1);
        stackTestDriver18.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj32 = stackTestDriver0.pop();
        java.lang.Object obj33 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) -1 + "'", obj29, (byte) -1);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1187");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver46.push(obj60);
        java.lang.Object obj62 = stackTestDriver41.push(obj60);
        java.lang.Object obj63 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver41.push(obj75);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver41.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj85 = stackTestDriver41.pop();
        java.lang.Object obj86 = stackTestDriver41.pop();
        java.lang.Object obj87 = stackTestDriver27.push(obj86);
        stackTestDriver27.clear();
        java.lang.Class<?> wildcardClass89 = stackTestDriver27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1188");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj51 = stackTestDriver0.pop();
        java.lang.Object obj52 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1189");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj45 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj66 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj69 = stackTestDriver47.push((java.lang.Object) (-1L));
        stackTestDriver47.clear();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1190");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj68 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1191");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = stackTestDriver0.push(obj47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1192");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver45.push(obj51);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        java.lang.Object obj70 = stackTestDriver54.push((java.lang.Object) stackTestDriver61);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        java.lang.Class<?> wildcardClass73 = stackTestDriver61.getClass();
        java.lang.Object obj74 = stackTestDriver45.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1193");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj59 = stackTestDriver43.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        java.lang.Object obj61 = stackTestDriver20.push((java.lang.Object) stackTestDriver50);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1194");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0f + "'", obj96, 0.0f);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 0.0f + "'", obj97, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1195");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass38 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1196");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj76 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1197");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver74.getClass();
        java.lang.Object obj83 = stackTestDriver66.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj85 = stackTestDriver41.push((java.lang.Object) stackTestDriver66);
        stackTestDriver41.clear();
        java.lang.Class<?> wildcardClass87 = stackTestDriver41.getClass();
        java.lang.Object obj88 = stackTestDriver34.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass89 = stackTestDriver34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1198");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass49 = stackTestDriver41.getClass();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass51 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1199");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver40.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver48.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = stackTestDriver32.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj71 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj84 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj85 = stackTestDriver18.push((java.lang.Object) stackTestDriver32);
        stackTestDriver18.clear();
        java.lang.Class<?> wildcardClass87 = stackTestDriver18.getClass();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        stackTestDriver18.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1200");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        java.lang.Object obj67 = stackTestDriver61.push((java.lang.Object) 100L);
        java.lang.Object obj69 = stackTestDriver61.push((java.lang.Object) false);
        java.lang.Object obj70 = stackTestDriver61.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver61.push(obj75);
        java.lang.Object obj77 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver61.getClass();
        java.lang.Object obj80 = stackTestDriver0.push((java.lang.Object) wildcardClass79);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1201");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        java.lang.Object obj38 = stackTestDriver0.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver39.push(obj45);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver49.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj62 = stackTestDriver39.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj83 = stackTestDriver64.pop();
        java.lang.Object obj84 = stackTestDriver39.push(obj83);
        stackTestDriver39.clear();
        java.lang.Object obj86 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass87 = stackTestDriver39.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1202");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass11 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1203");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        java.lang.Object obj42 = stackTestDriver26.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver26.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj57 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver58.push(obj69);
        java.lang.Class<?> wildcardClass71 = stackTestDriver58.getClass();
        java.lang.Object obj72 = stackTestDriver43.push((java.lang.Object) wildcardClass71);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver73.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver43.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj94 = stackTestDriver73.pop();
        java.lang.Object obj95 = stackTestDriver0.push(obj94);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0d + "'", obj25, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1204");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver56.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj69 = stackTestDriver46.push(obj68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj90 = stackTestDriver71.pop();
        java.lang.Object obj91 = stackTestDriver46.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        java.lang.Class<?> wildcardClass93 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1205");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj52 = stackTestDriver27.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj61 = stackTestDriver27.push(obj60);
        java.lang.Object obj62 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver27.push(obj67);
        java.lang.Object obj69 = stackTestDriver21.push(obj68);
        java.lang.Object obj70 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1206");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver68.push(obj82);
        java.lang.Object obj84 = stackTestDriver63.push(obj82);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver87.pop();
        stackTestDriver87.clear();
        java.lang.Object obj94 = stackTestDriver63.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj95 = stackTestDriver56.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Object obj98 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0.0f + "'", obj67, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 100L + "'", obj98, 100L);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1207");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        java.lang.Object obj28 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        java.lang.Object obj51 = stackTestDriver29.pop();
        java.lang.Object obj52 = stackTestDriver14.push(obj51);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1208");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        java.lang.Object obj32 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj47 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver48.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj61 = stackTestDriver48.pop();
        java.lang.Object obj62 = stackTestDriver48.pop();
        java.lang.Object obj63 = stackTestDriver48.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver48.getClass();
        java.lang.Object obj65 = stackTestDriver43.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj66 = stackTestDriver27.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver8.push((java.lang.Object) stackTestDriver27);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1209");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        java.lang.Object obj35 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        stackTestDriver43.clear();
        java.lang.Object obj52 = stackTestDriver36.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (byte) 100);
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = stackTestDriver53.push(obj64);
        java.lang.Object obj66 = stackTestDriver36.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj67 = stackTestDriver36.pop();
        java.lang.Object obj68 = stackTestDriver36.pop();
        java.lang.Object obj69 = stackTestDriver0.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 10.0f + "'", obj35, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + "" + "'", obj49, "");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1210");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1211");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver14.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj27 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj30 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1212");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1213");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj23 = stackTestDriver14.pop();
        java.lang.Object obj24 = stackTestDriver8.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1214");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        stackTestDriver30.clear();
        java.lang.Object obj43 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) (-1));
        java.lang.Object obj46 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        java.lang.Class<?> wildcardClass47 = stackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1) + "'", obj45, (-1));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1215");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Object obj70 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver15.push((java.lang.Object) stackTestDriver71);
        java.lang.Class<?> wildcardClass78 = stackTestDriver71.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1216");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1217");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) "");
        java.lang.Object obj49 = stackTestDriver38.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj50 = stackTestDriver43.pop();
        java.lang.Class<?> wildcardClass51 = stackTestDriver43.getClass();
        java.lang.Object obj52 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj53 = stackTestDriver34.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj54 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = stackTestDriver60.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver60.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver60.push(obj74);
        java.lang.Object obj76 = stackTestDriver55.push(obj74);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj87 = stackTestDriver85.push((java.lang.Object) 1.0f);
        java.lang.Object obj88 = stackTestDriver85.pop();
        java.lang.Object obj90 = stackTestDriver85.push((java.lang.Object) "");
        java.lang.Object obj91 = stackTestDriver80.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj92 = stackTestDriver85.pop();
        java.lang.Class<?> wildcardClass93 = stackTestDriver85.getClass();
        java.lang.Object obj94 = stackTestDriver77.push((java.lang.Object) stackTestDriver85);
        java.lang.Object obj95 = stackTestDriver55.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj96 = stackTestDriver35.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj97 = stackTestDriver35.pop();
        java.lang.Object obj98 = stackTestDriver21.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj99 = stackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0.0f + "'", obj59, 0.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "" + "'", obj92, "");
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1218");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver67.getClass();
        java.lang.Object obj92 = stackTestDriver42.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj93 = stackTestDriver16.push(obj92);
        java.lang.Object obj94 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        stackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1219");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass19 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1220");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver13.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj26 = stackTestDriver13.pop();
        java.lang.Object obj27 = stackTestDriver13.pop();
        java.lang.Object obj28 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass29 = stackTestDriver13.getClass();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1221");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) (-1));
        stackTestDriver37.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver63.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver63.push((java.lang.Object) false);
        java.lang.Object obj72 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj75 = stackTestDriver37.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj76 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1) + "'", obj60, (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1222");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver13.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) 100L);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1223");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Object obj46 = stackTestDriver32.pop();
        java.lang.Object obj47 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        java.lang.Class<?> wildcardClass58 = stackTestDriver32.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1224");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        java.lang.Object obj46 = stackTestDriver40.push((java.lang.Object) 100L);
        java.lang.Object obj48 = stackTestDriver40.push((java.lang.Object) false);
        java.lang.Object obj49 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj53 = stackTestDriver0.pop();
        java.lang.Object obj54 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        java.lang.Object obj65 = stackTestDriver56.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver56.push(obj70);
        java.lang.Object obj72 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        stackTestDriver81.clear();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = stackTestDriver81.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = stackTestDriver74.push(obj85);
        java.lang.Object obj87 = stackTestDriver56.push(obj86);
        java.lang.Object obj88 = stackTestDriver56.pop();
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100L + "'", obj46, 100L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0d + "'", obj54, 0.0d);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1225");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        stackTestDriver30.clear();
        java.lang.Object obj43 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) (-1));
        java.lang.Object obj46 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1) + "'", obj45, (-1));
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1226");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1227");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj63 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass66 = stackTestDriver64.getClass();
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj68 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1228");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        java.lang.Object obj74 = stackTestDriver45.push(obj73);
        java.lang.Object obj75 = stackTestDriver37.push(obj73);
        java.lang.Class<?> wildcardClass76 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1229");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1230");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver13.push(obj27);
        java.lang.Object obj29 = stackTestDriver8.push(obj27);
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = stackTestDriver0.push(obj27);
        java.lang.Class<?> wildcardClass32 = obj27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1231");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass18 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1232");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        java.lang.Object obj85 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj87 = stackTestDriver79.push((java.lang.Object) false);
        java.lang.Object obj89 = stackTestDriver79.push((java.lang.Object) 100L);
        java.lang.Object obj90 = stackTestDriver79.pop();
        stackTestDriver79.clear();
        stackTestDriver79.clear();
        java.lang.Object obj93 = stackTestDriver9.push((java.lang.Object) stackTestDriver79);
        stackTestDriver9.clear();
        java.lang.Class<?> wildcardClass95 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1233");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = stackTestDriver47.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver33.push((java.lang.Object) stackTestDriver41);
        java.lang.Class<?> wildcardClass57 = stackTestDriver33.getClass();
        java.lang.Object obj58 = stackTestDriver8.push((java.lang.Object) stackTestDriver33);
        java.lang.Class<?> wildcardClass59 = stackTestDriver33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1234");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver24.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver36.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1235");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj18 = stackTestDriver0.pop();
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass20 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1236");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        java.lang.Class<?> wildcardClass42 = stackTestDriver24.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1237");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver13.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj26 = stackTestDriver13.pop();
        java.lang.Object obj27 = stackTestDriver13.pop();
        java.lang.Object obj28 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass29 = stackTestDriver13.getClass();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = stackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1238");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Class<?> wildcardClass51 = stackTestDriver45.getClass();
        java.lang.Object obj52 = stackTestDriver25.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver1.push(obj52);
        java.lang.Object obj54 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1239");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        stackTestDriver33.clear();
        java.lang.Object obj42 = stackTestDriver26.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver26.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj57 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        stackTestDriver65.clear();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = stackTestDriver65.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = stackTestDriver58.push(obj69);
        java.lang.Class<?> wildcardClass71 = stackTestDriver58.getClass();
        java.lang.Object obj72 = stackTestDriver43.push((java.lang.Object) wildcardClass71);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver73.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver43.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj94 = stackTestDriver73.pop();
        java.lang.Object obj95 = stackTestDriver0.push(obj94);
        java.lang.Object obj96 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0d + "'", obj25, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1240");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        stackTestDriver70.clear();
        java.lang.Object obj76 = stackTestDriver70.push((java.lang.Object) 100L);
        java.lang.Object obj77 = stackTestDriver9.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj78 = stackTestDriver70.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 100L + "'", obj76, 100L);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1241");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Class<?> wildcardClass17 = stackTestDriver16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) wildcardClass17);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        java.lang.Object obj37 = stackTestDriver21.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj39 = stackTestDriver21.push((java.lang.Object) 1L);
        java.lang.Object obj40 = stackTestDriver0.push(obj39);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + "" + "'", obj34, "");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1L + "'", obj39, 1L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1L + "'", obj40, 1L);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1242");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1243");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        java.lang.Object obj15 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1244");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Float");
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1245");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Object obj66 = stackTestDriver32.push(obj65);
        java.lang.Object obj67 = stackTestDriver32.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver32.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1246");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1247");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (byte) 100);
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver33.push(obj44);
        java.lang.Object obj46 = stackTestDriver16.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj47 = stackTestDriver9.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj48 = stackTestDriver0.push(obj47);
        java.lang.Object obj49 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) (-1.0d));
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        java.lang.Class<?> wildcardClass66 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (-1.0d) + "'", obj64, (-1.0d));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1248");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver73.push(obj79);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver83.pop();
        java.lang.Object obj90 = stackTestDriver73.push(obj89);
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        java.lang.Object obj94 = stackTestDriver5.push((java.lang.Object) stackTestDriver73);
        stackTestDriver73.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1249");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) "");
        java.lang.Object obj34 = stackTestDriver23.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass35 = stackTestDriver28.getClass();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1250");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver58);
        stackTestDriver58.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1251");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver17.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj29 = stackTestDriver22.pop();
        java.lang.Class<?> wildcardClass30 = stackTestDriver22.getClass();
        java.lang.Object obj31 = stackTestDriver14.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj32 = stackTestDriver13.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj33 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver59.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver64.getClass();
        java.lang.Object obj73 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj74 = stackTestDriver34.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj75 = stackTestDriver14.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj76 = stackTestDriver14.pop();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj78 = stackTestDriver14.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1252");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        java.lang.Object obj51 = stackTestDriver45.push((java.lang.Object) 100L);
        java.lang.Object obj53 = stackTestDriver45.push((java.lang.Object) false);
        java.lang.Object obj54 = stackTestDriver45.pop();
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) (byte) -1);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        java.lang.Object obj60 = stackTestDriver17.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        java.lang.Object obj67 = stackTestDriver61.push((java.lang.Object) 100L);
        java.lang.Object obj69 = stackTestDriver61.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj74 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        java.lang.Class<?> wildcardClass76 = stackTestDriver61.getClass();
        java.lang.Object obj77 = stackTestDriver17.push((java.lang.Object) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) -1 + "'", obj56, (byte) -1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1253");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj69 = stackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1254");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj23 = stackTestDriver14.pop();
        java.lang.Object obj24 = stackTestDriver8.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj26 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1255");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1256");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        stackTestDriver32.clear();
        java.lang.Object obj45 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        stackTestDriver46.clear();
        java.lang.Object obj54 = stackTestDriver32.push((java.lang.Object) stackTestDriver46);
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) wildcardClass55);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1257");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver3.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj15 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        java.lang.Object obj17 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        java.lang.Object obj25 = stackTestDriver19.push((java.lang.Object) 100L);
        java.lang.Object obj27 = stackTestDriver19.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver19.pop();
        java.lang.Object obj29 = stackTestDriver0.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver37.clear();
        java.lang.Object obj51 = stackTestDriver31.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        java.lang.Object obj57 = stackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = stackTestDriver52.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver37.push((java.lang.Object) wildcardClass60);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver37.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver0.push(obj89);
        java.lang.Class<?> wildcardClass91 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Short");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Short");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Short");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1258");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 0.0f);
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj66 = stackTestDriver50.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj72 = stackTestDriver67.push((java.lang.Object) (byte) 100);
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver67.push(obj78);
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) stackTestDriver67);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver20.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = stackTestDriver20.push(obj84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0d + "'", obj49, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1259");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass42 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1260");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        stackTestDriver19.clear();
        java.lang.Class<?> wildcardClass53 = stackTestDriver19.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1261");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = stackTestDriver26.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj65 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj72 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver66.push((java.lang.Object) false);
        java.lang.Object obj75 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj78 = stackTestDriver26.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj79 = stackTestDriver12.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj80 = stackTestDriver26.pop();
        java.lang.Object obj81 = stackTestDriver0.push(obj80);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj89 = stackTestDriver87.push((java.lang.Object) 1.0f);
        java.lang.Object obj90 = stackTestDriver87.pop();
        java.lang.Object obj92 = stackTestDriver87.push((java.lang.Object) "");
        java.lang.Object obj93 = stackTestDriver82.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj95 = stackTestDriver87.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = stackTestDriver0.push((java.lang.Object) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0d + "'", obj33, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + "" + "'", obj92, "");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class java.lang.Long");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1262");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        stackTestDriver68.clear();
        java.lang.Object obj82 = stackTestDriver62.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj83 = stackTestDriver7.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = stackTestDriver68.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1263");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj36 = stackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver30.push((java.lang.Object) false);
        java.lang.Object obj39 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        stackTestDriver42.clear();
        java.lang.Object obj67 = stackTestDriver30.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj68 = stackTestDriver6.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj69 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj71 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = stackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1264");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver35.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj47 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass48 = stackTestDriver40.getClass();
        java.lang.Object obj49 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj50 = stackTestDriver31.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj51 = stackTestDriver22.push(obj50);
        java.lang.Object obj52 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj63 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver22.push(obj63);
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver6.push(obj64);
        stackTestDriver6.clear();
        java.lang.Class<?> wildcardClass68 = stackTestDriver6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1265");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj67 = stackTestDriver47.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        stackTestDriver68.clear();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = stackTestDriver68.push((java.lang.Object) wildcardClass71);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = stackTestDriver76.push((java.lang.Object) stackTestDriver81);
        stackTestDriver76.clear();
        java.lang.Object obj89 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj91 = stackTestDriver68.push((java.lang.Object) (-1));
        java.lang.Object obj92 = stackTestDriver47.push((java.lang.Object) stackTestDriver68);
        stackTestDriver47.clear();
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver47);
        stackTestDriver47.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) -1 + "'", obj67, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (-1) + "'", obj91, (-1));
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1266");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass62 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1267");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver73.push(obj79);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver83.pop();
        java.lang.Object obj90 = stackTestDriver73.push(obj89);
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        java.lang.Object obj94 = stackTestDriver5.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj96 = stackTestDriver73.push((java.lang.Object) 1.0f);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 1.0f + "'", obj96, 1.0f);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1268");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        stackTestDriver64.clear();
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        stackTestDriver64.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1269");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver46.push(obj57);
        java.lang.Object obj59 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver46);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver62.push(obj78);
        java.lang.Object obj81 = stackTestDriver62.pop();
        java.lang.Class<?> wildcardClass82 = stackTestDriver62.getClass();
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1270");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) 0.0f);
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 1.0d);
        java.lang.Object obj58 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 0.0d);
        java.lang.Object obj68 = stackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver51.push(obj68);
        stackTestDriver51.clear();
        java.lang.Object obj71 = stackTestDriver41.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj72 = stackTestDriver8.push((java.lang.Object) stackTestDriver51);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = stackTestDriver73.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        java.lang.Object obj88 = stackTestDriver82.push((java.lang.Object) 100L);
        java.lang.Object obj90 = stackTestDriver82.push((java.lang.Object) false);
        java.lang.Object obj91 = stackTestDriver82.pop();
        experiment.drivers.StackTestDriver stackTestDriver92 = new experiment.drivers.StackTestDriver();
        stackTestDriver92.clear();
        java.lang.Object obj94 = new java.lang.Object();
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        java.lang.Object obj96 = stackTestDriver92.push((java.lang.Object) wildcardClass95);
        java.lang.Object obj97 = stackTestDriver82.push(obj96);
        java.lang.Object obj98 = stackTestDriver73.push(obj96);
        java.lang.Object obj99 = stackTestDriver8.push(obj96);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0d + "'", obj57, 1.0d);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0d + "'", obj58, 1.0d);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0d + "'", obj66, 0.0d);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100L + "'", obj88, 100L);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + false + "'", obj90, false);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.Object");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1271");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass16 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1272");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 100L);
        java.lang.Object obj23 = stackTestDriver15.push((java.lang.Object) false);
        java.lang.Object obj24 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver15.push(obj29);
        java.lang.Object obj31 = stackTestDriver10.push(obj29);
        java.lang.Object obj32 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver33.pop();
        stackTestDriver33.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj49 = stackTestDriver33.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        stackTestDriver57.clear();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver50.push(obj61);
        java.lang.Object obj63 = stackTestDriver33.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        stackTestDriver50.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj67 = stackTestDriver10.pop();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "" + "'", obj46, "");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1273");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj80 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj81 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        stackTestDriver82.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver82.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver66.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = stackTestDriver55.push(obj87);
        java.lang.Object obj89 = stackTestDriver14.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        java.lang.Class<?> wildcardClass91 = stackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10.0f + "'", obj79, 10.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1274");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver0.clear();
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) ' ');
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + ' ' + "'", obj54, ' ');
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1275");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj19 = stackTestDriver6.pop();
        java.lang.Object obj20 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        java.lang.Object obj43 = stackTestDriver21.pop();
        java.lang.Object obj44 = stackTestDriver6.push(obj43);
        java.lang.Object obj45 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        stackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = stackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1276");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        java.lang.Object obj37 = stackTestDriver15.pop();
        java.lang.Object obj38 = stackTestDriver0.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver39.push(obj45);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver49.push((java.lang.Object) 100L);
        java.lang.Object obj57 = stackTestDriver49.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver49.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj62 = stackTestDriver39.push(obj61);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj83 = stackTestDriver64.pop();
        java.lang.Object obj84 = stackTestDriver39.push(obj83);
        stackTestDriver39.clear();
        java.lang.Object obj86 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = stackTestDriver39.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100L + "'", obj55, 100L);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1277");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver56.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj69 = stackTestDriver46.push(obj68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj90 = stackTestDriver71.pop();
        java.lang.Object obj91 = stackTestDriver46.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1278");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj21 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1279");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1280");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0f + "'", obj96, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1281");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        java.lang.Object obj9 = stackTestDriver4.push((java.lang.Object) "");
        java.lang.Object obj10 = stackTestDriver4.pop();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver11.push(obj17);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj34 = stackTestDriver11.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver43.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver35.push((java.lang.Object) stackTestDriver43);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        stackTestDriver59.clear();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = stackTestDriver43.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj65 = stackTestDriver11.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj66 = stackTestDriver43.pop();
        java.lang.Object obj67 = stackTestDriver4.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj68 = stackTestDriver0.push(obj67);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + "" + "'", obj9, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1282");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver0.push((java.lang.Object) wildcardClass46);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0d + "'", obj45, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Double");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Double");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1283");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver25.push(obj39);
        java.lang.Object obj41 = stackTestDriver20.push(obj39);
        java.lang.Object obj42 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver20.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1284");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver64.push(obj82);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1285");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1286");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        stackTestDriver18.clear();
        java.lang.Class<?> wildcardClass22 = stackTestDriver18.getClass();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) wildcardClass22);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1287");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        stackTestDriver30.clear();
        java.lang.Object obj43 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) (-1));
        java.lang.Object obj46 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1) + "'", obj45, (-1));
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1288");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Object obj71 = stackTestDriver54.push(obj70);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj76 = stackTestDriver54.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj83 = stackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Object obj85 = stackTestDriver77.push((java.lang.Object) false);
        java.lang.Object obj86 = stackTestDriver77.pop();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver77.push(obj91);
        java.lang.Object obj93 = stackTestDriver77.pop();
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver77.pop();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver77);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1289");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj19 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) "");
        java.lang.Object obj60 = stackTestDriver49.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj61 = stackTestDriver54.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver54.getClass();
        java.lang.Object obj63 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj64 = stackTestDriver45.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj65 = stackTestDriver21.push((java.lang.Object) stackTestDriver46);
        stackTestDriver21.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver21.getClass();
        java.lang.Object obj68 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) "");
        java.lang.Object obj80 = stackTestDriver69.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj81 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        stackTestDriver74.clear();
        java.lang.Object obj84 = stackTestDriver21.push((java.lang.Object) stackTestDriver74);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 10 + "'", obj18, 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 10 + "'", obj19, 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "" + "'", obj59, "");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1290");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj38 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass39 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1291");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) "");
        java.lang.Object obj27 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj33 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        stackTestDriver41.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver41.push((java.lang.Object) stackTestDriver49);
        java.lang.Class<?> wildcardClass65 = stackTestDriver49.getClass();
        java.lang.Object obj66 = stackTestDriver34.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj67 = stackTestDriver34.pop();
        java.lang.Object obj68 = stackTestDriver29.push(obj67);
        java.lang.Object obj69 = stackTestDriver1.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj70 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + "" + "'", obj26, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1292");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        java.lang.Object obj64 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1293");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj45 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj66 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj69 = stackTestDriver47.push((java.lang.Object) (-1L));
        stackTestDriver47.clear();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass73 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1294");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 0.0d);
        java.lang.Object obj50 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass51 = stackTestDriver41.getClass();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0.0d + "'", obj48, 0.0d);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1295");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Object obj16 = stackTestDriver11.push((java.lang.Object) "");
        java.lang.Object obj17 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj23 = stackTestDriver11.push((java.lang.Object) stackTestDriver19);
        stackTestDriver11.clear();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj35 = stackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = stackTestDriver29.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver29.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj42 = stackTestDriver29.pop();
        java.lang.Object obj43 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj45 = stackTestDriver26.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj46 = stackTestDriver26.pop();
        java.lang.Object obj47 = stackTestDriver11.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) stackTestDriver11);
        java.lang.Class<?> wildcardClass49 = stackTestDriver11.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1296");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj34 = stackTestDriver31.push((java.lang.Object) 0L);
        stackTestDriver31.clear();
        java.lang.Class<?> wildcardClass36 = stackTestDriver31.getClass();
        java.lang.Object obj37 = stackTestDriver5.push((java.lang.Object) stackTestDriver31);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0L + "'", obj34, 0L);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1297");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver31.push(obj37);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver31.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj58 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        java.lang.Object obj71 = stackTestDriver59.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj72 = stackTestDriver31.push(obj71);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Object obj74 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1298");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver40.push((java.lang.Object) wildcardClass59);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver76.pop();
        java.lang.Object obj94 = stackTestDriver40.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj95 = stackTestDriver22.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj96 = stackTestDriver40.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1299");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1300");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        java.lang.Object obj61 = stackTestDriver45.push(obj60);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        java.lang.Object obj64 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj65 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1301");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver35.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj47 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass48 = stackTestDriver40.getClass();
        java.lang.Object obj49 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj50 = stackTestDriver31.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj51 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver52.push(obj71);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver52.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver32.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj94 = stackTestDriver32.pop();
        java.lang.Object obj95 = stackTestDriver25.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj97 = stackTestDriver25.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = stackTestDriver25.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1302");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver24.pop();
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        stackTestDriver24.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1303");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Object obj16 = stackTestDriver11.push((java.lang.Object) "");
        java.lang.Object obj17 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj23 = stackTestDriver11.push((java.lang.Object) stackTestDriver19);
        stackTestDriver11.clear();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj35 = stackTestDriver29.push((java.lang.Object) 100L);
        java.lang.Object obj37 = stackTestDriver29.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver29.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj42 = stackTestDriver29.pop();
        java.lang.Object obj43 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        java.lang.Object obj45 = stackTestDriver26.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj46 = stackTestDriver26.pop();
        java.lang.Object obj47 = stackTestDriver11.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) stackTestDriver11);
        java.lang.Object obj49 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 100L + "'", obj35, 100L);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1304");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        java.lang.Object obj39 = stackTestDriver23.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (byte) 100);
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver40.push(obj51);
        java.lang.Object obj53 = stackTestDriver23.push((java.lang.Object) stackTestDriver40);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        java.lang.Object obj56 = stackTestDriver0.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj57 = stackTestDriver0.pop();
        java.lang.Object obj58 = stackTestDriver0.pop();
        java.lang.Object obj59 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "" + "'", obj36, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1305");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = stackTestDriver24.push((java.lang.Object) 10.0f);
        java.lang.Object obj32 = stackTestDriver18.push((java.lang.Object) 10.0f);
        java.lang.Object obj33 = stackTestDriver10.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver10.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver41.push(obj55);
        java.lang.Object obj57 = stackTestDriver36.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver61.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj73 = stackTestDriver66.pop();
        java.lang.Class<?> wildcardClass74 = stackTestDriver66.getClass();
        java.lang.Object obj75 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj76 = stackTestDriver36.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj77 = stackTestDriver10.push(obj76);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass85 = stackTestDriver78.getClass();
        java.lang.Object obj86 = stackTestDriver10.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = stackTestDriver10.push(obj88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 10.0f + "'", obj32, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0.0f + "'", obj40, 0.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1306");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) (-1.0d));
        java.lang.Object obj15 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1.0d) + "'", obj15, (-1.0d));
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1307");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1308");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (byte) 100);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = stackTestDriver18.push(obj29);
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (byte) 100);
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver55.push(obj66);
        java.lang.Object obj68 = stackTestDriver32.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        stackTestDriver69.clear();
        stackTestDriver69.clear();
        java.lang.Object obj75 = stackTestDriver32.push((java.lang.Object) stackTestDriver69);
        stackTestDriver69.clear();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver69);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1309");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1310");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver39.push(obj50);
        java.lang.Class<?> wildcardClass52 = stackTestDriver39.getClass();
        java.lang.Object obj53 = stackTestDriver24.push((java.lang.Object) wildcardClass52);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj87 = stackTestDriver55.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj88 = stackTestDriver24.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj89 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0.0f + "'", obj59, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1311");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1312");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        stackTestDriver35.clear();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = stackTestDriver25.push(obj39);
        java.lang.Object obj41 = stackTestDriver20.push(obj39);
        java.lang.Object obj42 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (byte) 100);
        stackTestDriver43.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        stackTestDriver50.clear();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver50.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = stackTestDriver43.push(obj54);
        java.lang.Object obj56 = stackTestDriver20.push(obj54);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj66 = stackTestDriver10.push((java.lang.Object) stackTestDriver20);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = stackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1313");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver20);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver43.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj56 = stackTestDriver33.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) "");
        java.lang.Object obj72 = stackTestDriver61.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj73 = stackTestDriver66.pop();
        java.lang.Class<?> wildcardClass74 = stackTestDriver66.getClass();
        java.lang.Object obj75 = stackTestDriver58.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj76 = stackTestDriver57.push((java.lang.Object) stackTestDriver58);
        java.lang.Object obj77 = stackTestDriver58.pop();
        java.lang.Object obj78 = stackTestDriver33.push(obj77);
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1314");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass46 = stackTestDriver20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1315");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) 0.0f);
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Object obj72 = stackTestDriver57.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = stackTestDriver73.push((java.lang.Object) false);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver73.push(obj87);
        java.lang.Object obj89 = stackTestDriver73.pop();
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj91 = stackTestDriver0.push(obj90);
        java.lang.Class<?> wildcardClass92 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0d + "'", obj63, 1.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1316");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) "");
        java.lang.Object obj36 = stackTestDriver25.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj37 = stackTestDriver30.pop();
        java.lang.Class<?> wildcardClass38 = stackTestDriver30.getClass();
        java.lang.Object obj39 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "" + "'", obj35, "");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1317");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj48 = stackTestDriver26.push((java.lang.Object) (-1L));
        stackTestDriver26.clear();
        java.lang.Object obj50 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj63 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj64 = stackTestDriver0.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj65 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = stackTestDriver51.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "" + "'", obj57, "");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1318");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        java.lang.Object obj58 = stackTestDriver16.push((java.lang.Object) stackTestDriver34);
        java.lang.Class<?> wildcardClass59 = stackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1319");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Object obj70 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver15.push((java.lang.Object) stackTestDriver71);
        stackTestDriver15.clear();
        java.lang.Class<?> wildcardClass79 = stackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1320");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver39.push(obj50);
        java.lang.Class<?> wildcardClass52 = stackTestDriver39.getClass();
        java.lang.Object obj53 = stackTestDriver24.push((java.lang.Object) wildcardClass52);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj87 = stackTestDriver55.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj88 = stackTestDriver24.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj89 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0.0f + "'", obj59, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1321");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver37.push((java.lang.Object) stackTestDriver53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver53.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1322");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver78.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver78.push((java.lang.Object) false);
        java.lang.Object obj87 = stackTestDriver78.pop();
        java.lang.Object obj89 = stackTestDriver78.push((java.lang.Object) (byte) -1);
        java.lang.Object obj90 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        java.lang.Class<?> wildcardClass92 = stackTestDriver78.getClass();
        java.lang.Object obj93 = stackTestDriver26.push((java.lang.Object) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 100L + "'", obj84, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + false + "'", obj87, false);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) -1 + "'", obj89, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) -1 + "'", obj90, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1323");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        java.lang.Object obj25 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass67 = stackTestDriver26.getClass();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1324");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) (-1.0d));
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj40 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = stackTestDriver15.pop();
        java.lang.Object obj42 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        java.lang.Object obj54 = stackTestDriver48.push((java.lang.Object) 100L);
        java.lang.Object obj56 = stackTestDriver48.push((java.lang.Object) false);
        java.lang.Object obj57 = stackTestDriver48.pop();
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver48.push(obj62);
        java.lang.Object obj64 = stackTestDriver43.push(obj62);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        java.lang.Object obj78 = stackTestDriver73.push((java.lang.Object) "");
        java.lang.Object obj79 = stackTestDriver68.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj80 = stackTestDriver73.pop();
        java.lang.Class<?> wildcardClass81 = stackTestDriver73.getClass();
        java.lang.Object obj82 = stackTestDriver65.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj83 = stackTestDriver43.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj84 = stackTestDriver65.pop();
        java.lang.Object obj85 = stackTestDriver15.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj86 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        stackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100L + "'", obj54, 100L);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + false + "'", obj57, false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + "" + "'", obj80, "");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1325");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj48 = stackTestDriver0.push((java.lang.Object) ' ');
        java.lang.Object obj49 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass50 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + ' ' + "'", obj48, ' ');
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + ' ' + "'", obj49, ' ');
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1326");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1327");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Class<?> wildcardClass24 = stackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1328");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj77 = stackTestDriver68.pop();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver68.push(obj82);
        java.lang.Object obj84 = stackTestDriver63.push(obj82);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver87.pop();
        stackTestDriver87.clear();
        java.lang.Object obj94 = stackTestDriver63.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj95 = stackTestDriver56.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver87);
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0.0f + "'", obj67, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1329");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        java.lang.Object obj34 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj49 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj50 = stackTestDriver25.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass52 = stackTestDriver25.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1330");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass40 = stackTestDriver24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1331");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        stackTestDriver30.clear();
        java.lang.Object obj43 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) (-1));
        java.lang.Object obj46 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj47 = stackTestDriver1.pop();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1) + "'", obj45, (-1));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1332");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) (-1));
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Object obj25 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1) + "'", obj23, (-1));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1) + "'", obj24, (-1));
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1333");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass9 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1334");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        stackTestDriver19.clear();
        java.lang.Object obj33 = stackTestDriver13.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver19.push((java.lang.Object) wildcardClass42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver64.getClass();
        java.lang.Object obj71 = stackTestDriver44.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver19.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Object obj74 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1335");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        stackTestDriver5.clear();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = stackTestDriver5.push((java.lang.Object) wildcardClass8);
        java.lang.Object obj10 = stackTestDriver5.pop();
        java.lang.Object obj12 = stackTestDriver5.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj25 = stackTestDriver13.push((java.lang.Object) stackTestDriver21);
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver31.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj44 = stackTestDriver31.pop();
        java.lang.Object obj45 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj47 = stackTestDriver28.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj48 = stackTestDriver28.pop();
        java.lang.Object obj49 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj50 = stackTestDriver5.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1L + "'", obj4, 1L);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1336");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver24.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj37 = stackTestDriver14.push(obj36);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver42.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj54 = stackTestDriver47.pop();
        java.lang.Class<?> wildcardClass55 = stackTestDriver47.getClass();
        java.lang.Object obj56 = stackTestDriver39.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj57 = stackTestDriver38.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj58 = stackTestDriver39.pop();
        java.lang.Object obj59 = stackTestDriver14.push(obj58);
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = stackTestDriver0.push(obj58);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1L + "'", obj13, 1L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1337");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1338");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Object obj15 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver16.push(obj38);
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = stackTestDriver9.push(obj38);
        java.lang.Class<?> wildcardClass42 = stackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1) + "'", obj15, (-1));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1339");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj24 = stackTestDriver8.pop();
        java.lang.Object obj25 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Class<?> wildcardClass67 = stackTestDriver26.getClass();
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) wildcardClass67);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 10.0f + "'", obj24, 10.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1340");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver59.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver64.getClass();
        java.lang.Object obj73 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj74 = stackTestDriver34.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj75 = stackTestDriver8.push(obj74);
        java.lang.Object obj76 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass77 = stackTestDriver8.getClass();
        java.lang.Object obj78 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1341");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 1.0d);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Object obj42 = stackTestDriver8.push(obj41);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0d + "'", obj40, 1.0d);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0d + "'", obj41, 1.0d);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0d + "'", obj42, 1.0d);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1342");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        java.lang.Object obj37 = stackTestDriver0.pop();
        java.lang.Object obj38 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1343");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver32.push(obj51);
        java.lang.Object obj54 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj71 = stackTestDriver55.push((java.lang.Object) stackTestDriver62);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (byte) 100);
        stackTestDriver72.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        stackTestDriver79.clear();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = stackTestDriver79.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = stackTestDriver72.push(obj83);
        java.lang.Object obj85 = stackTestDriver55.push((java.lang.Object) stackTestDriver72);
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj88 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        stackTestDriver90.clear();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = stackTestDriver90.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = stackTestDriver90.pop();
        java.lang.Object obj96 = stackTestDriver32.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj97 = stackTestDriver32.pop();
        java.lang.Object obj98 = stackTestDriver8.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj97.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0.0f + "'", obj36, 0.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1344");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver64.pop();
        java.lang.Object obj71 = stackTestDriver54.push(obj70);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj76 = stackTestDriver54.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        java.lang.Object obj83 = stackTestDriver77.push((java.lang.Object) 100L);
        java.lang.Object obj85 = stackTestDriver77.push((java.lang.Object) false);
        java.lang.Object obj86 = stackTestDriver77.pop();
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver77.push(obj91);
        java.lang.Object obj93 = stackTestDriver77.pop();
        java.lang.Object obj94 = stackTestDriver54.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj95 = stackTestDriver77.pop();
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver77);
        java.lang.Class<?> wildcardClass97 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1L + "'", obj76, 1L);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 100L + "'", obj83, 100L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + false + "'", obj86, false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 100L + "'", obj95, 100L);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1345");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = stackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1346");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver14.push(obj20);
        java.lang.Object obj23 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver24.pop();
        java.lang.Object obj31 = stackTestDriver14.push(obj30);
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj36 = stackTestDriver14.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver37.push((java.lang.Object) 100L);
        java.lang.Object obj45 = stackTestDriver37.push((java.lang.Object) false);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver37.push(obj51);
        java.lang.Object obj53 = stackTestDriver37.pop();
        java.lang.Object obj54 = stackTestDriver14.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj55 = stackTestDriver8.push((java.lang.Object) stackTestDriver37);
        stackTestDriver37.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1L + "'", obj36, 1L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 100L + "'", obj43, 100L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1347");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = stackTestDriver0.pop();
        java.lang.Object obj63 = stackTestDriver0.pop();
        java.lang.Object obj64 = stackTestDriver0.pop();
        java.lang.Object obj65 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1348");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        stackTestDriver1.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        java.lang.Object obj46 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver33.push((java.lang.Object) 10.0f);
        java.lang.Object obj48 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver33.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj55 = stackTestDriver1.push(obj54);
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 10.0f + "'", obj47, 10.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1349");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) 0.0f);
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Object obj72 = stackTestDriver57.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = stackTestDriver73.push((java.lang.Object) false);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver73.push(obj87);
        java.lang.Object obj89 = stackTestDriver73.pop();
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj91 = stackTestDriver0.push(obj90);
        java.lang.Class<?> wildcardClass92 = obj90.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0d + "'", obj63, 1.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1350");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        java.lang.Object obj27 = stackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Object obj29 = stackTestDriver21.push((java.lang.Object) false);
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        java.lang.Object obj45 = stackTestDriver36.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver36.push(obj50);
        java.lang.Object obj52 = stackTestDriver31.push(obj50);
        java.lang.Object obj53 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        java.lang.Object obj70 = stackTestDriver54.push((java.lang.Object) stackTestDriver61);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (byte) 100);
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        stackTestDriver78.clear();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver78.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver71.push(obj82);
        java.lang.Object obj84 = stackTestDriver54.push((java.lang.Object) stackTestDriver71);
        stackTestDriver71.clear();
        stackTestDriver71.clear();
        java.lang.Object obj87 = stackTestDriver31.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj88 = stackTestDriver31.pop();
        java.lang.Object obj89 = stackTestDriver21.push((java.lang.Object) stackTestDriver31);
        java.lang.Object obj90 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + false + "'", obj45, false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (byte) 100 + "'", obj76, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1351");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Object obj52 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1352");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver50.push((java.lang.Object) 1);
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1353");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj31 = stackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = stackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1354");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver56.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj68 = stackTestDriver61.pop();
        java.lang.Class<?> wildcardClass69 = stackTestDriver61.getClass();
        java.lang.Object obj70 = stackTestDriver53.push((java.lang.Object) stackTestDriver61);
        java.lang.Object obj71 = stackTestDriver52.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj73 = stackTestDriver53.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) -1 + "'", obj73, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1355");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        stackTestDriver18.clear();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) wildcardClass21);
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj41 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) (byte) 100);
        java.lang.Object obj70 = stackTestDriver63.push((java.lang.Object) 10.0f);
        java.lang.Object obj71 = stackTestDriver57.push((java.lang.Object) 10.0f);
        java.lang.Object obj72 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Class<?> wildcardClass73 = stackTestDriver57.getClass();
        java.lang.Object obj74 = stackTestDriver42.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj75 = stackTestDriver26.push((java.lang.Object) stackTestDriver42);
        java.lang.Class<?> wildcardClass76 = stackTestDriver26.getClass();
        java.lang.Object obj77 = stackTestDriver12.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = stackTestDriver0.push(obj77);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 10.0f + "'", obj70, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1356");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        java.lang.Object obj52 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj69 = stackTestDriver53.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        java.lang.Object obj86 = stackTestDriver30.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver30.pop();
        java.lang.Object obj88 = stackTestDriver20.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass91 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1357");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj54 = stackTestDriver0.pop();
        java.lang.Object obj55 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj78 = stackTestDriver64.push((java.lang.Object) 10.0f);
        java.lang.Object obj79 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        stackTestDriver80.clear();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = stackTestDriver80.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = stackTestDriver64.push((java.lang.Object) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = stackTestDriver64.getClass();
        java.lang.Object obj87 = stackTestDriver0.push((java.lang.Object) wildcardClass86);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 10.0f + "'", obj77, 10.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 10.0f + "'", obj78, 10.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1358");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver6.push((java.lang.Object) wildcardClass29);
        stackTestDriver6.clear();
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver6.push(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Float");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1359");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        stackTestDriver13.clear();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = stackTestDriver13.push((java.lang.Object) wildcardClass16);
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Object obj24 = stackTestDriver19.push((java.lang.Object) "");
        java.lang.Object obj25 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        java.lang.Object obj31 = stackTestDriver19.push((java.lang.Object) stackTestDriver27);
        stackTestDriver19.clear();
        java.lang.Object obj33 = stackTestDriver13.push((java.lang.Object) stackTestDriver19);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver19.push((java.lang.Object) wildcardClass42);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) "");
        java.lang.Object obj59 = stackTestDriver48.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj60 = stackTestDriver53.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver53.getClass();
        java.lang.Object obj62 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj63 = stackTestDriver44.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver64.getClass();
        java.lang.Object obj71 = stackTestDriver44.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver19.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = stackTestDriver0.push(obj72);
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1360");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) "");
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) stackTestDriver50);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) (-1));
        stackTestDriver37.clear();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver63.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver63.push((java.lang.Object) false);
        java.lang.Object obj72 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj75 = stackTestDriver37.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj76 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = stackTestDriver37.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1) + "'", obj60, (-1));
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100L + "'", obj69, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1361");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) "");
        java.lang.Object obj24 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver40.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver48.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = stackTestDriver32.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj71 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj84 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj85 = stackTestDriver18.push((java.lang.Object) stackTestDriver32);
        stackTestDriver18.clear();
        java.lang.Class<?> wildcardClass87 = stackTestDriver18.getClass();
        java.lang.Object obj88 = stackTestDriver0.push((java.lang.Object) stackTestDriver18);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1362");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        java.lang.Object obj68 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + false + "'", obj67, false);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1363");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver28.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        java.lang.Object obj48 = stackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = stackTestDriver43.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver65.pop();
        java.lang.Object obj70 = stackTestDriver65.push((java.lang.Object) (byte) 100);
        java.lang.Object obj72 = stackTestDriver65.push((java.lang.Object) 10.0f);
        java.lang.Object obj73 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        stackTestDriver75.clear();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = stackTestDriver75.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj80 = stackTestDriver59.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj81 = stackTestDriver43.push((java.lang.Object) wildcardClass78);
        java.lang.Object obj82 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        java.lang.Object obj89 = stackTestDriver83.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver83.push((java.lang.Object) false);
        java.lang.Object obj92 = stackTestDriver83.pop();
        stackTestDriver83.clear();
        stackTestDriver83.clear();
        java.lang.Object obj95 = stackTestDriver43.push((java.lang.Object) stackTestDriver83);
        java.lang.Object obj96 = stackTestDriver37.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj97 = stackTestDriver0.push(obj96);
        java.lang.Class<?> wildcardClass98 = obj96.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0d + "'", obj50, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 10.0f + "'", obj72, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100L + "'", obj89, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + false + "'", obj91, false);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + false + "'", obj92, false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1364");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1365");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver0.push(obj16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1366");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj8 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        stackTestDriver11.clear();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver11.push((java.lang.Object) wildcardClass14);
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver25);
        stackTestDriver17.clear();
        java.lang.Object obj31 = stackTestDriver11.push((java.lang.Object) stackTestDriver17);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = stackTestDriver11.push((java.lang.Object) stackTestDriver32);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj61 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass62 = stackTestDriver37.getClass();
        java.lang.Object obj63 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj64 = stackTestDriver0.push(obj63);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0.0d + "'", obj8, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1367");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) (-1.0d));
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver22.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj61 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        java.lang.Object obj71 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj74 = stackTestDriver22.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj75 = stackTestDriver22.pop();
        java.lang.Object obj76 = stackTestDriver15.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        java.lang.Object obj78 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass79 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0d + "'", obj29, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1368");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver9.pop();
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) "");
        java.lang.Object obj41 = stackTestDriver30.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj42 = stackTestDriver35.pop();
        java.lang.Class<?> wildcardClass43 = stackTestDriver35.getClass();
        java.lang.Object obj44 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj45 = stackTestDriver26.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj46 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        java.lang.Object obj58 = stackTestDriver52.push((java.lang.Object) 100L);
        java.lang.Object obj60 = stackTestDriver52.push((java.lang.Object) false);
        java.lang.Object obj61 = stackTestDriver52.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = stackTestDriver52.push(obj66);
        java.lang.Object obj68 = stackTestDriver47.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = stackTestDriver72.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj84 = stackTestDriver77.pop();
        java.lang.Class<?> wildcardClass85 = stackTestDriver77.getClass();
        java.lang.Object obj86 = stackTestDriver69.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj87 = stackTestDriver47.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj88 = stackTestDriver27.push((java.lang.Object) stackTestDriver47);
        java.lang.Class<?> wildcardClass89 = stackTestDriver47.getClass();
        java.lang.Object obj90 = stackTestDriver17.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver9.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj91);
        java.lang.Object obj93 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 100L + "'", obj58, 100L);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1369");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) 1L);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver22);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = stackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1L + "'", obj26, 1L);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1370");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        java.lang.Object obj33 = stackTestDriver7.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Object obj89 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj90 = stackTestDriver67.push((java.lang.Object) stackTestDriver75);
        java.lang.Class<?> wildcardClass91 = stackTestDriver67.getClass();
        java.lang.Object obj92 = stackTestDriver42.push((java.lang.Object) stackTestDriver67);
        java.lang.Object obj93 = stackTestDriver16.push(obj92);
        java.lang.Object obj94 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass95 = stackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1371");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj63 = stackTestDriver54.push((java.lang.Object) false);
        stackTestDriver54.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver54.getClass();
        java.lang.Object obj66 = stackTestDriver8.push((java.lang.Object) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1372");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = stackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver23.push((java.lang.Object) stackTestDriver31);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        stackTestDriver47.clear();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = stackTestDriver47.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = stackTestDriver31.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = stackTestDriver15.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj54 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        java.lang.Object obj61 = stackTestDriver55.push((java.lang.Object) 100L);
        java.lang.Object obj63 = stackTestDriver55.push((java.lang.Object) false);
        java.lang.Object obj64 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        java.lang.Object obj67 = stackTestDriver15.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj68 = stackTestDriver9.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj69 = stackTestDriver15.pop();
        java.lang.Object obj70 = stackTestDriver15.pop();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver15.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj78 = stackTestDriver71.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = stackTestDriver71.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0d + "'", obj22, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100L + "'", obj61, 100L);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0d + "'", obj70, 0.0d);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1373");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        java.lang.Class<?> wildcardClass54 = stackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1374");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver9.pop();
        java.lang.Object obj28 = stackTestDriver0.push(obj27);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1375");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (byte) 100);
        stackTestDriver39.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver39.push(obj50);
        java.lang.Class<?> wildcardClass52 = stackTestDriver39.getClass();
        java.lang.Object obj53 = stackTestDriver24.push((java.lang.Object) wildcardClass52);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        java.lang.Object obj79 = stackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = stackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = stackTestDriver68.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        stackTestDriver68.clear();
        java.lang.Object obj87 = stackTestDriver55.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj88 = stackTestDriver24.push((java.lang.Object) stackTestDriver55);
        stackTestDriver55.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0.0f + "'", obj59, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1376");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1377");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        stackTestDriver1.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1378");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) 1L);
        java.lang.Object obj12 = stackTestDriver0.push(obj11);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) "");
        java.lang.Object obj30 = stackTestDriver19.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj31 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass32 = stackTestDriver24.getClass();
        java.lang.Object obj33 = stackTestDriver16.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj34 = stackTestDriver15.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        java.lang.Class<?> wildcardClass36 = stackTestDriver16.getClass();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1L + "'", obj11, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1L + "'", obj12, 1L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1379");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1380");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver33.push(obj39);
        java.lang.Object obj42 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver33.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj60 = stackTestDriver33.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj63 = stackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver61.pop();
        java.lang.Object obj66 = stackTestDriver61.push((java.lang.Object) "");
        java.lang.Object obj67 = stackTestDriver61.pop();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj73 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        java.lang.Object obj74 = stackTestDriver33.push(obj73);
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj76 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj79 = stackTestDriver0.push((java.lang.Object) 10);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 10 + "'", obj79, 10);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1381");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Object obj15 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver16.push(obj38);
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = stackTestDriver9.push(obj38);
        stackTestDriver9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = stackTestDriver9.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1) + "'", obj15, (-1));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1382");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1383");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) (-1));
        java.lang.Object obj15 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver19.pop();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver16.push(obj22);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver26.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj39 = stackTestDriver16.push(obj38);
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = stackTestDriver9.push(obj38);
        stackTestDriver9.clear();
        stackTestDriver9.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1) + "'", obj14, (-1));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1) + "'", obj15, (-1));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1384");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj15 = stackTestDriver5.push((java.lang.Object) 1);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        java.lang.Object obj56 = stackTestDriver16.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = stackTestDriver57.push((java.lang.Object) 0.0d);
        java.lang.Object obj66 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass67 = stackTestDriver57.getClass();
        java.lang.Object obj68 = stackTestDriver16.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver5.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0d + "'", obj64, 0.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1385");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj24 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1386");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        java.lang.Class<?> wildcardClass55 = stackTestDriver39.getClass();
        java.lang.Object obj56 = stackTestDriver24.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj57 = stackTestDriver8.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj58 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver59.push(obj78);
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = stackTestDriver81.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver59.push(obj88);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver24.push((java.lang.Object) wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 10.0f + "'", obj90, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Float");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1387");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = stackTestDriver46.push(obj52);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        java.lang.Object obj62 = stackTestDriver56.push((java.lang.Object) 100L);
        java.lang.Object obj64 = stackTestDriver56.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        java.lang.Object obj68 = stackTestDriver56.push((java.lang.Object) stackTestDriver65);
        java.lang.Object obj69 = stackTestDriver46.push(obj68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        java.lang.Object obj77 = stackTestDriver74.pop();
        stackTestDriver74.clear();
        experiment.drivers.StackTestDriver stackTestDriver79 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj81 = stackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Object obj82 = stackTestDriver79.pop();
        java.lang.Object obj84 = stackTestDriver79.push((java.lang.Object) "");
        java.lang.Object obj85 = stackTestDriver74.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj86 = stackTestDriver79.pop();
        java.lang.Class<?> wildcardClass87 = stackTestDriver79.getClass();
        java.lang.Object obj88 = stackTestDriver71.push((java.lang.Object) stackTestDriver79);
        java.lang.Object obj89 = stackTestDriver70.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj90 = stackTestDriver71.pop();
        java.lang.Object obj91 = stackTestDriver46.push(obj90);
        java.lang.Object obj92 = stackTestDriver0.push(obj90);
        java.lang.Object obj93 = stackTestDriver0.pop();
        java.lang.Object obj94 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100L + "'", obj62, 100L);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + false + "'", obj64, false);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 0.0f + "'", obj94, 0.0f);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1388");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        java.lang.Object obj37 = stackTestDriver0.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj38 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1389");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        stackTestDriver68.clear();
        java.lang.Object obj82 = stackTestDriver62.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj83 = stackTestDriver7.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1390");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        stackTestDriver64.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = stackTestDriver64.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1391");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver12.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver17.pop();
        java.lang.Class<?> wildcardClass25 = stackTestDriver17.getClass();
        java.lang.Object obj26 = stackTestDriver9.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj27 = stackTestDriver8.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj28 = stackTestDriver9.pop();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        stackTestDriver34.clear();
        java.lang.Object obj40 = stackTestDriver34.push((java.lang.Object) 100L);
        java.lang.Object obj42 = stackTestDriver34.push((java.lang.Object) false);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        stackTestDriver44.clear();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = stackTestDriver44.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver34.push(obj48);
        java.lang.Object obj50 = stackTestDriver29.push(obj48);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) "");
        java.lang.Object obj65 = stackTestDriver54.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver59.pop();
        java.lang.Class<?> wildcardClass67 = stackTestDriver59.getClass();
        java.lang.Object obj68 = stackTestDriver51.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj69 = stackTestDriver29.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj70 = stackTestDriver9.push((java.lang.Object) stackTestDriver29);
        stackTestDriver9.clear();
        java.lang.Object obj73 = stackTestDriver9.push((java.lang.Object) 0);
        java.lang.Object obj74 = stackTestDriver0.push(obj73);
        java.lang.Class<?> wildcardClass75 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100L + "'", obj40, 100L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + false + "'", obj42, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0 + "'", obj74, 0);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1392");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj69 = stackTestDriver35.pop();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1393");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        stackTestDriver68.clear();
        java.lang.Object obj82 = stackTestDriver62.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj83 = stackTestDriver7.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass85 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1394");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) "");
        java.lang.Object obj84 = stackTestDriver78.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver70.push(obj84);
        stackTestDriver70.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = stackTestDriver70.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1395");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj41 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1396");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1397");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) "");
        java.lang.Object obj23 = stackTestDriver17.pop();
        java.lang.Object obj24 = stackTestDriver7.push(obj23);
        java.lang.Object obj25 = stackTestDriver7.pop();
        java.lang.Object obj26 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj29 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Class<?> wildcardClass30 = stackTestDriver7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + "" + "'", obj23, "");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + "" + "'", obj24, "");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1398");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        stackTestDriver29.clear();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) "");
        java.lang.Object obj40 = stackTestDriver29.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj41 = stackTestDriver34.pop();
        java.lang.Class<?> wildcardClass42 = stackTestDriver34.getClass();
        java.lang.Object obj43 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj44 = stackTestDriver25.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj45 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 100L);
        java.lang.Object obj59 = stackTestDriver51.push((java.lang.Object) false);
        java.lang.Object obj60 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver51.push(obj65);
        java.lang.Object obj67 = stackTestDriver46.push(obj65);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        stackTestDriver71.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) "");
        java.lang.Object obj82 = stackTestDriver71.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj83 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass84 = stackTestDriver76.getClass();
        java.lang.Object obj85 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj86 = stackTestDriver46.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj87 = stackTestDriver26.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj88 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver8.push((java.lang.Object) wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + "" + "'", obj39, "");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100L + "'", obj57, 100L);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + "" + "'", obj81, "");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1399");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1400");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1401");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver81 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj83 = stackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Object obj84 = stackTestDriver81.pop();
        java.lang.Object obj86 = stackTestDriver81.push((java.lang.Object) "");
        java.lang.Object obj87 = stackTestDriver76.push((java.lang.Object) stackTestDriver81);
        java.lang.Object obj88 = stackTestDriver81.pop();
        java.lang.Class<?> wildcardClass89 = stackTestDriver81.getClass();
        java.lang.Object obj90 = stackTestDriver73.push((java.lang.Object) stackTestDriver81);
        java.lang.Object obj91 = stackTestDriver72.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj92 = stackTestDriver63.push(obj91);
        java.lang.Object obj93 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass94 = stackTestDriver63.getClass();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) wildcardClass94);
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1402");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        stackTestDriver23.clear();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = stackTestDriver23.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver13.push(obj27);
        java.lang.Object obj29 = stackTestDriver8.push(obj27);
        java.lang.Object obj30 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Object obj36 = stackTestDriver31.push((java.lang.Object) (byte) 100);
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver31.push(obj42);
        java.lang.Object obj44 = stackTestDriver8.push(obj42);
        java.lang.Object obj45 = stackTestDriver8.pop();
        java.lang.Object obj46 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver47.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver56.pop();
        stackTestDriver56.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj72 = stackTestDriver56.push((java.lang.Object) stackTestDriver63);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Class<?> wildcardClass75 = stackTestDriver63.getClass();
        java.lang.Object obj76 = stackTestDriver47.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = stackTestDriver8.push(obj76);
        java.lang.Object obj78 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1403");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver0.pop();
        java.lang.Object obj22 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1404");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        stackTestDriver10.clear();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = stackTestDriver0.push(obj14);
        java.lang.Object obj16 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        java.lang.Object obj32 = stackTestDriver23.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        stackTestDriver33.clear();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = stackTestDriver23.push(obj37);
        java.lang.Object obj39 = stackTestDriver18.push(obj37);
        java.lang.Object obj40 = stackTestDriver0.push(obj37);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1405");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        java.lang.Object obj20 = stackTestDriver0.pop();
        java.lang.Object obj21 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1406");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver0.push((java.lang.Object) wildcardClass23);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        stackTestDriver26.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver35.push((java.lang.Object) 0.0f);
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj58 = stackTestDriver42.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver59.push(obj70);
        java.lang.Object obj72 = stackTestDriver42.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj73 = stackTestDriver35.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj74 = stackTestDriver26.push(obj73);
        java.lang.Object obj75 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        stackTestDriver76.clear();
        java.lang.Object obj90 = stackTestDriver76.push((java.lang.Object) (-1.0d));
        java.lang.Object obj91 = stackTestDriver26.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj92 = stackTestDriver26.pop();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Class<?> wildcardClass94 = stackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Float");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "" + "'", obj32, "");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0f + "'", obj39, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0d + "'", obj41, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (-1.0d) + "'", obj90, (-1.0d));
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1407");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj7 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) "");
        java.lang.Object obj14 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver23.push((java.lang.Object) stackTestDriver38);
        java.lang.Class<?> wildcardClass61 = stackTestDriver38.getClass();
        java.lang.Object obj62 = stackTestDriver8.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver0.push(obj62);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100L + "'", obj7, 100L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1408");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver0.push(obj33);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver0.push(obj50);
        java.lang.Object obj52 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        stackTestDriver53.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver53.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) wildcardClass60);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1409");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj17 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver21.push(obj27);
        java.lang.Object obj30 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver31.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj44 = stackTestDriver21.push(obj43);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 10.0f);
        java.lang.Object obj67 = stackTestDriver53.push((java.lang.Object) 10.0f);
        java.lang.Object obj68 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        stackTestDriver69.clear();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = stackTestDriver69.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = stackTestDriver53.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = stackTestDriver21.push((java.lang.Object) stackTestDriver53);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        stackTestDriver76.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        stackTestDriver82.clear();
        java.lang.Object obj96 = stackTestDriver76.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj97 = stackTestDriver21.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) stackTestDriver82);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 10.0f + "'", obj67, 10.0f);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1410");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver5.pop();
        java.lang.Object obj15 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = stackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1411");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        stackTestDriver12.clear();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver12.push((java.lang.Object) wildcardClass15);
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        java.lang.Object obj34 = stackTestDriver20.push((java.lang.Object) 10.0f);
        java.lang.Object obj35 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver20.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj42 = stackTestDriver5.push((java.lang.Object) stackTestDriver20);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        java.lang.Object obj60 = stackTestDriver44.push(obj59);
        java.lang.Object obj61 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj63 = stackTestDriver20.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj64 = stackTestDriver20.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = stackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 10.0f + "'", obj34, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + false + "'", obj60, false);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + false + "'", obj61, false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1412");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1413");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        stackTestDriver1.clear();
        java.lang.Object obj23 = stackTestDriver1.push((java.lang.Object) (-1L));
        java.lang.Object obj24 = stackTestDriver1.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = stackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1L) + "'", obj23, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1414");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Class<?> wildcardClass70 = stackTestDriver64.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1415");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1416");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1417");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass68 = stackTestDriver64.getClass();
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) wildcardClass68);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = stackTestDriver70.push((java.lang.Object) 0.0d);
        java.lang.Object obj79 = stackTestDriver70.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj86 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj88 = stackTestDriver80.push((java.lang.Object) false);
        java.lang.Object obj90 = stackTestDriver80.push((java.lang.Object) 100L);
        java.lang.Object obj91 = stackTestDriver80.pop();
        stackTestDriver80.clear();
        java.lang.Object obj93 = stackTestDriver70.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj94 = stackTestDriver0.push((java.lang.Object) stackTestDriver80);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj97 = stackTestDriver0.pop();
        java.lang.Object obj98 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0.0d + "'", obj77, 0.0d);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + false + "'", obj79, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + false + "'", obj88, false);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 100L + "'", obj90, 100L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 0.0f + "'", obj96, 0.0f);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 0.0f + "'", obj97, 0.0f);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1418");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        java.lang.Object obj15 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        stackTestDriver17.clear();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) wildcardClass20);
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj24 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        stackTestDriver25.clear();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = stackTestDriver25.push((java.lang.Object) wildcardClass28);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) "");
        java.lang.Object obj46 = stackTestDriver35.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj47 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass48 = stackTestDriver40.getClass();
        java.lang.Object obj49 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        java.lang.Object obj50 = stackTestDriver31.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj51 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        stackTestDriver57.clear();
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 100L);
        java.lang.Object obj65 = stackTestDriver57.push((java.lang.Object) false);
        java.lang.Object obj66 = stackTestDriver57.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver57.push(obj71);
        java.lang.Object obj73 = stackTestDriver52.push(obj71);
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj76 = stackTestDriver74.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver77.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj89 = stackTestDriver82.pop();
        java.lang.Class<?> wildcardClass90 = stackTestDriver82.getClass();
        java.lang.Object obj91 = stackTestDriver74.push((java.lang.Object) stackTestDriver82);
        java.lang.Object obj92 = stackTestDriver52.push((java.lang.Object) stackTestDriver74);
        java.lang.Object obj93 = stackTestDriver32.push((java.lang.Object) stackTestDriver52);
        java.lang.Object obj94 = stackTestDriver32.pop();
        java.lang.Object obj95 = stackTestDriver25.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj96 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver25.clear();
        java.lang.Class<?> wildcardClass98 = stackTestDriver25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100L + "'", obj15, 100L);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + "" + "'", obj45, "");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100L + "'", obj63, 100L);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + false + "'", obj65, false);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + false + "'", obj66, false);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1419");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass60 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1420");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver5.pop();
        java.lang.Object obj15 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) "");
        java.lang.Object obj32 = stackTestDriver21.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj33 = stackTestDriver26.pop();
        java.lang.Class<?> wildcardClass34 = stackTestDriver26.getClass();
        java.lang.Object obj35 = stackTestDriver18.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj36 = stackTestDriver17.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj37 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Object obj46 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj49 = stackTestDriver43.push((java.lang.Object) 100L);
        java.lang.Object obj51 = stackTestDriver43.push((java.lang.Object) false);
        java.lang.Object obj52 = stackTestDriver43.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver43.push(obj57);
        java.lang.Object obj59 = stackTestDriver38.push(obj57);
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver63.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj75 = stackTestDriver68.pop();
        java.lang.Class<?> wildcardClass76 = stackTestDriver68.getClass();
        java.lang.Object obj77 = stackTestDriver60.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj78 = stackTestDriver38.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj79 = stackTestDriver18.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj80 = stackTestDriver18.pop();
        java.lang.Class<?> wildcardClass81 = stackTestDriver18.getClass();
        java.lang.Object obj82 = stackTestDriver5.push((java.lang.Object) stackTestDriver18);
        java.lang.Class<?> wildcardClass83 = stackTestDriver18.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + "" + "'", obj31, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "" + "'", obj33, "");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 100L + "'", obj49, 100L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "" + "'", obj75, "");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1421");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = stackTestDriver39.push((java.lang.Object) 0.0d);
        java.lang.Class<?> wildcardClass47 = stackTestDriver39.getClass();
        java.lang.Object obj48 = stackTestDriver16.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = stackTestDriver0.push(obj48);
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0d + "'", obj46, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1422");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        java.lang.Object obj22 = stackTestDriver17.push((java.lang.Object) (byte) 100);
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver17.push(obj28);
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver17);
        java.lang.Object obj31 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Object obj42 = stackTestDriver37.push((java.lang.Object) "");
        java.lang.Object obj43 = stackTestDriver32.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        java.lang.Object obj51 = stackTestDriver45.push((java.lang.Object) 100L);
        java.lang.Object obj53 = stackTestDriver45.push((java.lang.Object) false);
        java.lang.Object obj54 = stackTestDriver45.pop();
        java.lang.Object obj56 = stackTestDriver45.push((java.lang.Object) (byte) -1);
        stackTestDriver45.clear();
        java.lang.Object obj58 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        java.lang.Object obj60 = stackTestDriver17.push((java.lang.Object) stackTestDriver45);
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        stackTestDriver17.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) -1 + "'", obj56, (byte) -1);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1423");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) "");
        java.lang.Object obj38 = stackTestDriver27.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj39 = stackTestDriver27.pop();
        java.lang.Object obj40 = stackTestDriver0.push((java.lang.Object) stackTestDriver27);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver46.push(obj60);
        java.lang.Object obj62 = stackTestDriver41.push(obj60);
        java.lang.Object obj63 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) (byte) 100);
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        stackTestDriver71.clear();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver71.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = stackTestDriver64.push(obj75);
        java.lang.Object obj77 = stackTestDriver41.push(obj75);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        stackTestDriver78.clear();
        stackTestDriver78.clear();
        java.lang.Object obj84 = stackTestDriver41.push((java.lang.Object) stackTestDriver78);
        java.lang.Object obj85 = stackTestDriver41.pop();
        java.lang.Object obj86 = stackTestDriver41.pop();
        java.lang.Object obj87 = stackTestDriver27.push(obj86);
        java.lang.Class<?> wildcardClass88 = stackTestDriver27.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "" + "'", obj37, "");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1424");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 1.0d);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver18.push(obj24);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        java.lang.Object obj34 = stackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Object obj36 = stackTestDriver28.push((java.lang.Object) false);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        stackTestDriver38.clear();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver38.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = stackTestDriver28.push(obj42);
        java.lang.Object obj44 = stackTestDriver18.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj45 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) "");
        java.lang.Object obj52 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj58 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj59 = stackTestDriver18.push(obj58);
        java.lang.Object obj60 = stackTestDriver10.push(obj59);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        java.lang.Class<?> wildcardClass67 = stackTestDriver61.getClass();
        java.lang.Object obj68 = stackTestDriver10.push((java.lang.Object) wildcardClass67);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver10.push(obj82);
        java.lang.Object obj84 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver0.push(obj84);
        java.lang.Object obj87 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 100L + "'", obj34, 100L);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + false + "'", obj37, false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1425");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Object obj14 = stackTestDriver6.push(obj12);
        java.lang.Object obj15 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        stackTestDriver26.clear();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = stackTestDriver16.push(obj30);
        java.lang.Object obj32 = stackTestDriver6.push((java.lang.Object) stackTestDriver16);
        java.lang.Object obj33 = stackTestDriver6.pop();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver0.push(obj33);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        java.lang.Object obj48 = stackTestDriver42.push((java.lang.Object) 100L);
        java.lang.Object obj50 = stackTestDriver42.push((java.lang.Object) false);
        java.lang.Object obj51 = stackTestDriver42.pop();
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver42.push(obj56);
        java.lang.Object obj58 = stackTestDriver37.push(obj56);
        java.lang.Object obj59 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (byte) 100);
        stackTestDriver60.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        stackTestDriver67.clear();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = stackTestDriver67.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver60.push(obj71);
        java.lang.Object obj73 = stackTestDriver37.push(obj71);
        java.lang.Class<?> wildcardClass74 = stackTestDriver37.getClass();
        java.lang.Object obj75 = stackTestDriver0.push((java.lang.Object) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0.0f + "'", obj41, 0.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100L + "'", obj48, 100L);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1426");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj24 = stackTestDriver21.pop();
        java.lang.Object obj26 = stackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = stackTestDriver21.push((java.lang.Object) 10.0f);
        java.lang.Object obj29 = stackTestDriver15.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Class<?> wildcardClass31 = stackTestDriver15.getClass();
        java.lang.Object obj32 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        java.lang.Object obj47 = stackTestDriver38.pop();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver38.push(obj52);
        java.lang.Object obj54 = stackTestDriver33.push(obj52);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        stackTestDriver58.clear();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) "");
        java.lang.Object obj69 = stackTestDriver58.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver63.pop();
        java.lang.Class<?> wildcardClass71 = stackTestDriver63.getClass();
        java.lang.Object obj72 = stackTestDriver55.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj73 = stackTestDriver33.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj74 = stackTestDriver15.push((java.lang.Object) stackTestDriver33);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj81 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj83 = stackTestDriver75.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver75.push((java.lang.Object) 100L);
        java.lang.Object obj86 = stackTestDriver75.pop();
        stackTestDriver75.clear();
        java.lang.Object obj88 = stackTestDriver33.push((java.lang.Object) stackTestDriver75);
        stackTestDriver75.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "" + "'", obj70, "");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 100L + "'", obj81, 100L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + false + "'", obj83, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 100L + "'", obj85, 100L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100L + "'", obj86, 100L);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1427");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj8 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0.0d + "'", obj8, 0.0d);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1428");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver17.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj29 = stackTestDriver22.pop();
        java.lang.Class<?> wildcardClass30 = stackTestDriver22.getClass();
        java.lang.Object obj31 = stackTestDriver14.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj32 = stackTestDriver13.push((java.lang.Object) stackTestDriver14);
        java.lang.Object obj33 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        java.lang.Object obj48 = stackTestDriver39.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = stackTestDriver39.push(obj53);
        java.lang.Object obj55 = stackTestDriver34.push(obj53);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        java.lang.Object obj69 = stackTestDriver64.push((java.lang.Object) "");
        java.lang.Object obj70 = stackTestDriver59.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Class<?> wildcardClass72 = stackTestDriver64.getClass();
        java.lang.Object obj73 = stackTestDriver56.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj74 = stackTestDriver34.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj75 = stackTestDriver14.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj76 = stackTestDriver14.pop();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        java.lang.Class<?> wildcardClass78 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0.0f + "'", obj38, 0.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + false + "'", obj48, false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + "" + "'", obj69, "");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + "" + "'", obj71, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1429");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj70 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass72 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1430");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        java.lang.Object obj9 = stackTestDriver0.push((java.lang.Object) false);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1431");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        java.lang.Object obj56 = stackTestDriver50.push((java.lang.Object) 100L);
        java.lang.Object obj58 = stackTestDriver50.push((java.lang.Object) false);
        java.lang.Object obj59 = stackTestDriver50.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) 0.0f);
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 1.0d);
        java.lang.Object obj67 = stackTestDriver60.pop();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = stackTestDriver68.push((java.lang.Object) 0.0d);
        java.lang.Object obj77 = stackTestDriver68.push((java.lang.Object) false);
        java.lang.Object obj78 = stackTestDriver60.push(obj77);
        stackTestDriver60.clear();
        java.lang.Object obj80 = stackTestDriver50.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100L + "'", obj56, 100L);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + false + "'", obj58, false);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + false + "'", obj59, false);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0f + "'", obj64, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0d + "'", obj66, 1.0d);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0d + "'", obj67, 1.0d);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0.0d + "'", obj75, 0.0d);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + false + "'", obj77, false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + false + "'", obj78, false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1432");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        stackTestDriver19.clear();
        stackTestDriver19.clear();
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        stackTestDriver43.clear();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = stackTestDriver43.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = stackTestDriver43.pop();
        stackTestDriver43.clear();
        java.lang.Object obj50 = stackTestDriver19.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj51 = stackTestDriver0.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj52 = stackTestDriver0.pop();
        java.lang.Object obj53 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1433");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        stackTestDriver26.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1434");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver12.pop();
        java.lang.Object obj17 = stackTestDriver12.push((java.lang.Object) "");
        java.lang.Object obj18 = stackTestDriver12.pop();
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj24 = stackTestDriver12.push((java.lang.Object) stackTestDriver20);
        stackTestDriver12.clear();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        stackTestDriver34.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj56 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj57 = stackTestDriver34.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        stackTestDriver58.clear();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver58.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = stackTestDriver42.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj64 = stackTestDriver26.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj65 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        java.lang.Object obj72 = stackTestDriver66.push((java.lang.Object) 100L);
        java.lang.Object obj74 = stackTestDriver66.push((java.lang.Object) false);
        java.lang.Object obj75 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        stackTestDriver66.clear();
        java.lang.Object obj78 = stackTestDriver26.push((java.lang.Object) stackTestDriver66);
        java.lang.Object obj79 = stackTestDriver12.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj80 = stackTestDriver26.pop();
        java.lang.Object obj81 = stackTestDriver0.push(obj80);
        java.lang.Object obj82 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0d + "'", obj33, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 10.0f + "'", obj56, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100L + "'", obj72, 100L);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + false + "'", obj74, false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1435");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj10 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 100L + "'", obj10, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1436");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1437");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver20.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass44 = stackTestDriver28.getClass();
        java.lang.Object obj45 = stackTestDriver13.push((java.lang.Object) stackTestDriver28);
        java.lang.Object obj46 = stackTestDriver13.pop();
        java.lang.Object obj47 = stackTestDriver8.push(obj46);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj63 = stackTestDriver54.push((java.lang.Object) false);
        stackTestDriver54.clear();
        java.lang.Class<?> wildcardClass65 = stackTestDriver54.getClass();
        java.lang.Object obj66 = stackTestDriver8.push((java.lang.Object) wildcardClass65);
        stackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1438");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = stackTestDriver26.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = stackTestDriver34.push(obj40);
        java.lang.Object obj43 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        stackTestDriver44.clear();
        java.lang.Object obj50 = stackTestDriver44.push((java.lang.Object) 100L);
        java.lang.Object obj52 = stackTestDriver44.push((java.lang.Object) false);
        java.lang.Object obj53 = stackTestDriver44.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver44.push(obj58);
        java.lang.Object obj60 = stackTestDriver34.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj61 = stackTestDriver34.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        java.lang.Object obj67 = stackTestDriver62.push((java.lang.Object) "");
        java.lang.Object obj68 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj74 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj75 = stackTestDriver34.push(obj74);
        java.lang.Object obj76 = stackTestDriver26.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj78 = stackTestDriver0.pop();
        java.lang.Object obj79 = stackTestDriver0.pop();
        java.lang.Object obj80 = stackTestDriver0.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 100L + "'", obj50, 100L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + false + "'", obj52, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + "" + "'", obj67, "");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + "" + "'", obj68, "");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertNotNull(obj80);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1439");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) "");
        java.lang.Object obj44 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        stackTestDriver38.clear();
        java.lang.Object obj47 = stackTestDriver31.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (byte) 100);
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver48.push(obj59);
        java.lang.Object obj61 = stackTestDriver31.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj62 = stackTestDriver24.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj63 = stackTestDriver8.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj64 = stackTestDriver48.pop();
        stackTestDriver48.clear();
        stackTestDriver48.clear();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = stackTestDriver67.push(obj73);
        java.lang.Object obj76 = stackTestDriver67.pop();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) "");
        java.lang.Object obj83 = stackTestDriver77.pop();
        java.lang.Object obj84 = stackTestDriver67.push(obj83);
        java.lang.Object obj85 = stackTestDriver67.pop();
        java.lang.Object obj86 = stackTestDriver48.push((java.lang.Object) stackTestDriver67);
        stackTestDriver67.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0d + "'", obj30, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "" + "'", obj43, "");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + "" + "'", obj44, "");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "" + "'", obj82, "");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "" + "'", obj85, "");
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1440");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        stackTestDriver13.clear();
        java.lang.Object obj20 = stackTestDriver5.push((java.lang.Object) stackTestDriver13);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1441");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass19 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1442");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        stackTestDriver13.clear();
        java.lang.Object obj19 = stackTestDriver13.push((java.lang.Object) 100L);
        java.lang.Object obj21 = stackTestDriver13.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver13.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj26 = stackTestDriver13.pop();
        java.lang.Object obj27 = stackTestDriver13.pop();
        java.lang.Object obj28 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass29 = stackTestDriver13.getClass();
        java.lang.Object obj30 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        java.lang.Object obj31 = stackTestDriver8.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 100L + "'", obj19, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + false + "'", obj21, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1443");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = stackTestDriver8.push(obj14);
        java.lang.Object obj17 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj27 = stackTestDriver18.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        java.lang.Object obj33 = stackTestDriver18.push(obj32);
        java.lang.Object obj34 = stackTestDriver8.push((java.lang.Object) stackTestDriver18);
        java.lang.Object obj35 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) "");
        java.lang.Object obj42 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver44);
        java.lang.Object obj49 = stackTestDriver8.push(obj48);
        java.lang.Object obj50 = stackTestDriver0.push(obj49);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        stackTestDriver51.clear();
        java.lang.Class<?> wildcardClass57 = stackTestDriver51.getClass();
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        java.lang.Object obj66 = stackTestDriver60.push((java.lang.Object) 100L);
        java.lang.Object obj68 = stackTestDriver60.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver60.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj71 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "" + "'", obj41, "");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "" + "'", obj42, "");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 100L + "'", obj66, 100L);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1444");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj40 = stackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        java.lang.Object obj52 = stackTestDriver46.push((java.lang.Object) 100L);
        java.lang.Object obj54 = stackTestDriver46.push((java.lang.Object) false);
        java.lang.Object obj55 = stackTestDriver46.pop();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver46.push(obj60);
        java.lang.Object obj62 = stackTestDriver41.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        stackTestDriver66.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) "");
        java.lang.Object obj77 = stackTestDriver66.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj78 = stackTestDriver71.pop();
        java.lang.Class<?> wildcardClass79 = stackTestDriver71.getClass();
        java.lang.Object obj80 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        java.lang.Object obj81 = stackTestDriver41.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj82 = stackTestDriver15.push(obj81);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver15);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 100L + "'", obj52, 100L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + false + "'", obj54, false);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "" + "'", obj76, "");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1445");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj17 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        java.lang.Object obj24 = stackTestDriver18.push((java.lang.Object) 100L);
        java.lang.Object obj26 = stackTestDriver18.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver18.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj31 = stackTestDriver0.push(obj30);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 100L + "'", obj24, 100L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + false + "'", obj26, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1446");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = stackTestDriver5.push(obj14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1447");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        java.lang.Object obj13 = stackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver7.pop();
        java.lang.Object obj15 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver17.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        java.lang.Object obj28 = stackTestDriver22.push((java.lang.Object) 100L);
        java.lang.Object obj30 = stackTestDriver22.push((java.lang.Object) false);
        java.lang.Object obj31 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver22.push(obj36);
        java.lang.Object obj38 = stackTestDriver17.push(obj36);
        java.lang.Object obj39 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        java.lang.Object obj52 = stackTestDriver47.push((java.lang.Object) "");
        java.lang.Object obj53 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj56 = stackTestDriver40.push((java.lang.Object) stackTestDriver47);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (byte) 100);
        stackTestDriver57.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver57.push(obj68);
        java.lang.Object obj70 = stackTestDriver40.push((java.lang.Object) stackTestDriver57);
        stackTestDriver57.clear();
        stackTestDriver57.clear();
        java.lang.Object obj73 = stackTestDriver17.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj74 = stackTestDriver17.pop();
        java.lang.Object obj75 = stackTestDriver17.pop();
        java.lang.Object obj76 = stackTestDriver0.push(obj75);
        java.lang.Object obj77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = stackTestDriver0.push(obj77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 100L + "'", obj28, 100L);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + false + "'", obj30, false);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "" + "'", obj53, "");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0.0f + "'", obj75, 0.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0f + "'", obj76, 0.0f);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1448");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        stackTestDriver28.clear();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = stackTestDriver28.push((java.lang.Object) wildcardClass31);
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = stackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj51 = stackTestDriver28.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = stackTestDriver36.push((java.lang.Object) wildcardClass55);
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        stackTestDriver36.clear();
        java.lang.Object obj61 = stackTestDriver10.push((java.lang.Object) stackTestDriver36);
        java.lang.Object obj62 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj82 = stackTestDriver63.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj84 = stackTestDriver64.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        stackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) wildcardClass88);
        stackTestDriver85.clear();
        stackTestDriver85.clear();
        stackTestDriver85.clear();
        stackTestDriver85.clear();
        java.lang.Object obj94 = stackTestDriver64.push((java.lang.Object) stackTestDriver85);
        java.lang.Class<?> wildcardClass95 = stackTestDriver64.getClass();
        java.lang.Object obj96 = stackTestDriver10.push((java.lang.Object) stackTestDriver64);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 10.0f + "'", obj50, 10.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) -1 + "'", obj84, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1449");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Object obj25 = stackTestDriver20.push((java.lang.Object) "");
        java.lang.Object obj26 = stackTestDriver15.push((java.lang.Object) stackTestDriver20);
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        stackTestDriver27.clear();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) wildcardClass30);
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        stackTestDriver27.clear();
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        java.lang.Object obj46 = stackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = stackTestDriver41.push((java.lang.Object) 10.0f);
        java.lang.Object obj49 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = stackTestDriver27.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        stackTestDriver51.clear();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = stackTestDriver35.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj57 = stackTestDriver20.push((java.lang.Object) stackTestDriver35);
        experiment.drivers.StackTestDriver stackTestDriver58 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj60 = stackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver58.pop();
        java.lang.Object obj63 = stackTestDriver58.push((java.lang.Object) (byte) 100);
        java.lang.Object obj65 = stackTestDriver58.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver35.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = stackTestDriver8.push((java.lang.Object) stackTestDriver35);
        java.lang.Object obj69 = stackTestDriver8.pop();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + "" + "'", obj25, "");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10.0f + "'", obj49, 10.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1450");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        java.lang.Object obj28 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1451");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        java.lang.Object obj14 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        stackTestDriver16.clear();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = stackTestDriver16.push((java.lang.Object) wildcardClass19);
        java.lang.Object obj21 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Object obj32 = stackTestDriver16.push((java.lang.Object) stackTestDriver23);
        stackTestDriver23.clear();
        stackTestDriver23.clear();
        java.lang.Class<?> wildcardClass35 = stackTestDriver23.getClass();
        java.lang.Object obj36 = stackTestDriver0.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver37.push(obj43);
        java.lang.Object obj46 = stackTestDriver37.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = stackTestDriver47.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver47.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj60 = stackTestDriver37.push(obj59);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        stackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver69.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj91 = stackTestDriver37.push((java.lang.Object) stackTestDriver69);
        java.lang.Class<?> wildcardClass92 = stackTestDriver37.getClass();
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = stackTestDriver0.push(obj94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + "" + "'", obj29, "");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1452");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        java.lang.Object obj17 = stackTestDriver11.push((java.lang.Object) 100L);
        java.lang.Object obj19 = stackTestDriver11.push((java.lang.Object) false);
        java.lang.Object obj20 = stackTestDriver11.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = stackTestDriver11.push(obj25);
        java.lang.Object obj27 = stackTestDriver6.push(obj25);
        stackTestDriver6.clear();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        java.lang.Object obj36 = stackTestDriver30.push((java.lang.Object) 100L);
        java.lang.Object obj38 = stackTestDriver30.push((java.lang.Object) false);
        java.lang.Object obj39 = stackTestDriver30.pop();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj65 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        stackTestDriver42.clear();
        java.lang.Object obj67 = stackTestDriver30.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj68 = stackTestDriver6.push((java.lang.Object) stackTestDriver42);
        java.lang.Object obj69 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj71 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver0.push((java.lang.Object) wildcardClass80);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 100L + "'", obj17, 100L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100L + "'", obj36, 100L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + false + "'", obj38, false);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "" + "'", obj78, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1453");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        java.lang.Object obj48 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver49.push(obj60);
        java.lang.Object obj62 = stackTestDriver26.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver26.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj72 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj74 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1454");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        stackTestDriver7.clear();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Object obj11 = stackTestDriver7.push((java.lang.Object) wildcardClass10);
        java.lang.Object obj12 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) "");
        java.lang.Object obj20 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        stackTestDriver14.clear();
        java.lang.Object obj23 = stackTestDriver7.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        java.lang.Object obj29 = stackTestDriver24.push((java.lang.Object) (byte) 100);
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = stackTestDriver24.push(obj35);
        java.lang.Object obj37 = stackTestDriver7.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj39 = stackTestDriver24.pop();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + "" + "'", obj19, "");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1455");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        stackTestDriver48.clear();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = stackTestDriver48.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = stackTestDriver32.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = stackTestDriver0.push((java.lang.Object) stackTestDriver32);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = stackTestDriver55.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        stackTestDriver63.clear();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = stackTestDriver63.push((java.lang.Object) wildcardClass66);
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        experiment.drivers.StackTestDriver stackTestDriver71 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj73 = stackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Object obj74 = stackTestDriver71.pop();
        java.lang.Object obj76 = stackTestDriver71.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        java.lang.Object obj82 = stackTestDriver77.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = stackTestDriver77.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver71.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver63.push((java.lang.Object) stackTestDriver71);
        experiment.drivers.StackTestDriver stackTestDriver87 = new experiment.drivers.StackTestDriver();
        stackTestDriver87.clear();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = stackTestDriver87.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = stackTestDriver71.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = stackTestDriver55.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj94 = stackTestDriver55.pop();
        java.lang.Object obj95 = stackTestDriver0.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj97 = stackTestDriver55.push((java.lang.Object) (byte) -1);
        java.lang.Object obj98 = stackTestDriver55.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + (byte) -1 + "'", obj97, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + (byte) -1 + "'", obj98, (byte) -1);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1456");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1457");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj15 = stackTestDriver9.push((java.lang.Object) 1.0d);
        stackTestDriver9.clear();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver17.push(obj23);
        java.lang.Object obj26 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver27.pop();
        stackTestDriver27.clear();
        java.lang.Object obj33 = stackTestDriver27.push((java.lang.Object) 100L);
        java.lang.Object obj35 = stackTestDriver27.push((java.lang.Object) false);
        java.lang.Object obj36 = stackTestDriver27.pop();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = stackTestDriver27.push(obj41);
        java.lang.Object obj43 = stackTestDriver17.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj44 = stackTestDriver17.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver45.pop();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj57 = stackTestDriver45.push((java.lang.Object) stackTestDriver53);
        java.lang.Object obj58 = stackTestDriver17.push(obj57);
        java.lang.Object obj59 = stackTestDriver9.push(obj58);
        java.lang.Object obj60 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass61 = stackTestDriver9.getClass();
        java.lang.Object obj62 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) "");
        java.lang.Object obj78 = stackTestDriver67.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj79 = stackTestDriver72.pop();
        java.lang.Class<?> wildcardClass80 = stackTestDriver72.getClass();
        java.lang.Object obj81 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        stackTestDriver64.clear();
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj84 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10.0f + "'", obj7, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 100L + "'", obj33, 100L);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + false + "'", obj36, false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + "" + "'", obj51, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "" + "'", obj77, "");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + "" + "'", obj79, "");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1458");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) "");
        java.lang.Object obj74 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver76);
        stackTestDriver68.clear();
        java.lang.Object obj82 = stackTestDriver62.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj83 = stackTestDriver7.push((java.lang.Object) stackTestDriver68);
        java.lang.Object obj84 = stackTestDriver0.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + "" + "'", obj73, "");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "" + "'", obj74, "");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1459");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Object obj15 = stackTestDriver7.push(obj13);
        java.lang.Object obj16 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj30 = stackTestDriver7.push(obj29);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        stackTestDriver31.clear();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) wildcardClass34);
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        stackTestDriver31.clear();
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        java.lang.Object obj44 = stackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver39.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver31.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        stackTestDriver55.clear();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = stackTestDriver55.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = stackTestDriver39.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = stackTestDriver7.push((java.lang.Object) stackTestDriver39);
        java.lang.Object obj62 = stackTestDriver39.pop();
        java.lang.Object obj63 = stackTestDriver0.push((java.lang.Object) stackTestDriver39);
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        stackTestDriver39.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1460");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        stackTestDriver14.clear();
        java.lang.Object obj20 = stackTestDriver14.push((java.lang.Object) 100L);
        java.lang.Object obj22 = stackTestDriver14.push((java.lang.Object) false);
        java.lang.Object obj23 = stackTestDriver14.pop();
        java.lang.Object obj24 = stackTestDriver8.push(obj23);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        java.lang.Object obj33 = stackTestDriver28.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj41 = stackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj42 = stackTestDriver28.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver28.pop();
        java.lang.Object obj44 = stackTestDriver28.pop();
        java.lang.Object obj45 = stackTestDriver8.push((java.lang.Object) stackTestDriver28);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + false + "'", obj22, false);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + false + "'", obj23, false);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 10.0f + "'", obj41, 10.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1461");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 1.0d);
        java.lang.Object obj17 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        java.lang.Object obj23 = stackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = stackTestDriver18.push((java.lang.Object) 0.0d);
        java.lang.Object obj27 = stackTestDriver18.push((java.lang.Object) false);
        java.lang.Object obj28 = stackTestDriver10.push(obj27);
        stackTestDriver10.clear();
        java.lang.Object obj30 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver31.push((java.lang.Object) 1L);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj41 = stackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Object obj42 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj45 = stackTestDriver39.push((java.lang.Object) 100L);
        java.lang.Object obj47 = stackTestDriver39.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver39.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj52 = stackTestDriver39.pop();
        java.lang.Object obj53 = stackTestDriver39.pop();
        stackTestDriver39.clear();
        java.lang.Object obj55 = stackTestDriver36.push((java.lang.Object) stackTestDriver39);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        stackTestDriver64.clear();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        java.lang.Object obj77 = stackTestDriver72.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj85 = stackTestDriver78.push((java.lang.Object) 10.0f);
        java.lang.Object obj86 = stackTestDriver72.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = stackTestDriver64.push((java.lang.Object) stackTestDriver72);
        experiment.drivers.StackTestDriver stackTestDriver88 = new experiment.drivers.StackTestDriver();
        stackTestDriver88.clear();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        java.lang.Object obj92 = stackTestDriver88.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj93 = stackTestDriver72.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj94 = stackTestDriver56.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj95 = stackTestDriver36.push((java.lang.Object) wildcardClass91);
        java.lang.Object obj96 = stackTestDriver31.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        java.lang.Object obj98 = stackTestDriver0.push((java.lang.Object) stackTestDriver36);
        stackTestDriver36.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0f + "'", obj14, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0d + "'", obj16, 1.0d);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0d + "'", obj17, 1.0d);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0d + "'", obj25, 0.0d);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + false + "'", obj27, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1L + "'", obj35, 1L);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100L + "'", obj45, 100L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + false + "'", obj47, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + false + "'", obj53, false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1462");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        java.lang.Object obj15 = stackTestDriver10.push((java.lang.Object) "");
        java.lang.Object obj16 = stackTestDriver10.pop();
        java.lang.Object obj17 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj22 = stackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj23 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass25 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "" + "'", obj15, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + "" + "'", obj17, "");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1L + "'", obj22, 1L);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1L + "'", obj23, 1L);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1463");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) "");
        java.lang.Object obj6 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver14.pop();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        java.lang.Object obj63 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        stackTestDriver54.clear();
        java.lang.Object obj66 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj67 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass71 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + "" + "'", obj5, "");
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + "" + "'", obj6, "");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + false + "'", obj63, false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1464");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) "");
        java.lang.Object obj13 = stackTestDriver7.pop();
        stackTestDriver7.clear();
        stackTestDriver7.clear();
        java.lang.Object obj16 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj18 = stackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj19 = stackTestDriver0.pop();
        java.lang.Object obj20 = stackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + "" + "'", obj13, "");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1L + "'", obj18, 1L);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1L + "'", obj19, 1L);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1465");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) (-1.0d));
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        java.lang.Object obj21 = stackTestDriver15.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        stackTestDriver54.clear();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = stackTestDriver54.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = stackTestDriver38.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = stackTestDriver22.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj61 = stackTestDriver22.pop();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj64 = stackTestDriver62.push((java.lang.Object) 1.0f);
        java.lang.Object obj65 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        java.lang.Object obj68 = stackTestDriver62.push((java.lang.Object) 100L);
        java.lang.Object obj70 = stackTestDriver62.push((java.lang.Object) false);
        java.lang.Object obj71 = stackTestDriver62.pop();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        java.lang.Object obj74 = stackTestDriver22.push((java.lang.Object) stackTestDriver62);
        java.lang.Object obj75 = stackTestDriver22.pop();
        java.lang.Object obj76 = stackTestDriver15.push((java.lang.Object) stackTestDriver22);
        java.lang.Object obj77 = stackTestDriver0.push(obj76);
        java.lang.Object obj78 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (-1.0d) + "'", obj14, (-1.0d));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0d + "'", obj29, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 100L + "'", obj68, 100L);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + false + "'", obj70, false);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + false + "'", obj71, false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1466");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Object obj18 = stackTestDriver13.push((java.lang.Object) "");
        java.lang.Object obj19 = stackTestDriver8.push((java.lang.Object) stackTestDriver13);
        stackTestDriver8.clear();
        java.lang.Object obj21 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) "");
        java.lang.Object obj28 = stackTestDriver22.pop();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj34 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver37.push((java.lang.Object) stackTestDriver42);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        java.lang.Object obj68 = stackTestDriver63.push((java.lang.Object) (byte) 100);
        java.lang.Object obj70 = stackTestDriver63.push((java.lang.Object) 10.0f);
        java.lang.Object obj71 = stackTestDriver57.push((java.lang.Object) 10.0f);
        java.lang.Object obj72 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        stackTestDriver73.clear();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver73.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = stackTestDriver57.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = stackTestDriver42.push((java.lang.Object) stackTestDriver57);
        experiment.drivers.StackTestDriver stackTestDriver80 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj82 = stackTestDriver80.push((java.lang.Object) 1.0f);
        java.lang.Object obj83 = stackTestDriver80.pop();
        java.lang.Object obj85 = stackTestDriver80.push((java.lang.Object) (byte) 100);
        java.lang.Object obj87 = stackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver57.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver30.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj91 = stackTestDriver0.push(obj90);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + "" + "'", obj18, "");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + "" + "'", obj27, "");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 10.0f + "'", obj70, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 10.0f + "'", obj87, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Float");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1467");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) 0.0f);
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Object obj72 = stackTestDriver57.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = stackTestDriver73.push((java.lang.Object) false);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver73.push(obj87);
        java.lang.Object obj89 = stackTestDriver73.pop();
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj91 = stackTestDriver0.push(obj90);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0d + "'", obj63, 1.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1468");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        java.lang.Object obj73 = stackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj75 = stackTestDriver68.push((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = stackTestDriver0.push((java.lang.Object) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 100 + "'", obj73, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Long");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Long");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1469");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = stackTestDriver7.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver23.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = stackTestDriver7.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj46 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = stackTestDriver47.push((java.lang.Object) false);
        java.lang.Object obj56 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj59 = stackTestDriver7.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj60 = stackTestDriver7.pop();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        stackTestDriver7.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = stackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0d + "'", obj14, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1470");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj31 = stackTestDriver0.push((java.lang.Object) stackTestDriver24);
        java.lang.Object obj32 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj42 = stackTestDriver36.push((java.lang.Object) 100L);
        java.lang.Object obj44 = stackTestDriver36.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver36.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj49 = stackTestDriver36.pop();
        java.lang.Object obj50 = stackTestDriver36.pop();
        stackTestDriver36.clear();
        java.lang.Object obj52 = stackTestDriver33.push((java.lang.Object) stackTestDriver36);
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj55 = stackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Object obj56 = stackTestDriver53.pop();
        java.lang.Object obj58 = stackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = stackTestDriver53.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        stackTestDriver61.clear();
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Object obj74 = stackTestDriver69.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver75 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj77 = stackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Object obj78 = stackTestDriver75.pop();
        java.lang.Object obj80 = stackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = stackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = stackTestDriver69.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver61.push((java.lang.Object) stackTestDriver69);
        experiment.drivers.StackTestDriver stackTestDriver85 = new experiment.drivers.StackTestDriver();
        stackTestDriver85.clear();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = stackTestDriver85.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = stackTestDriver69.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj91 = stackTestDriver53.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj92 = stackTestDriver33.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj93 = stackTestDriver0.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj94 = stackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 100L + "'", obj42, 100L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0.0d + "'", obj60, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 10.0f + "'", obj82, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Object");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1471");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = stackTestDriver0.push(obj15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1472");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj15 = stackTestDriver0.pop();
        java.lang.Object obj16 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver17 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj19 = stackTestDriver17.push((java.lang.Object) 1.0f);
        java.lang.Object obj20 = stackTestDriver17.pop();
        stackTestDriver17.clear();
        java.lang.Object obj23 = stackTestDriver17.push((java.lang.Object) 100L);
        java.lang.Object obj25 = stackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver17.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj31 = stackTestDriver26.push((java.lang.Object) true);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = stackTestDriver32.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        stackTestDriver40.clear();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = stackTestDriver40.push((java.lang.Object) wildcardClass43);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Object obj51 = stackTestDriver48.pop();
        java.lang.Object obj53 = stackTestDriver48.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = stackTestDriver48.push((java.lang.Object) 10.0f);
        java.lang.Object obj63 = stackTestDriver40.push((java.lang.Object) stackTestDriver48);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        stackTestDriver64.clear();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = stackTestDriver64.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = stackTestDriver48.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj70 = stackTestDriver32.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj71 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver72 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj74 = stackTestDriver72.push((java.lang.Object) 1.0f);
        java.lang.Object obj75 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        java.lang.Object obj78 = stackTestDriver72.push((java.lang.Object) 100L);
        java.lang.Object obj80 = stackTestDriver72.push((java.lang.Object) false);
        java.lang.Object obj81 = stackTestDriver72.pop();
        stackTestDriver72.clear();
        stackTestDriver72.clear();
        java.lang.Object obj84 = stackTestDriver32.push((java.lang.Object) stackTestDriver72);
        java.lang.Object obj85 = stackTestDriver26.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj86 = stackTestDriver32.pop();
        java.lang.Object obj87 = stackTestDriver0.push(obj86);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 10.0f + "'", obj15, 10.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100L + "'", obj23, 100L);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0.0d + "'", obj39, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 10.0f + "'", obj62, 10.0f);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100L + "'", obj78, 100L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + false + "'", obj80, false);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1473");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj20 = stackTestDriver1.pop();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj23 = stackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj29 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj32 = stackTestDriver26.push((java.lang.Object) 100L);
        java.lang.Object obj34 = stackTestDriver26.push((java.lang.Object) false);
        java.lang.Object obj35 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        stackTestDriver36.clear();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = stackTestDriver36.push((java.lang.Object) wildcardClass39);
        java.lang.Object obj41 = stackTestDriver26.push(obj40);
        java.lang.Object obj42 = stackTestDriver21.push(obj40);
        experiment.drivers.StackTestDriver stackTestDriver43 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj45 = stackTestDriver43.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        stackTestDriver46.clear();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) "");
        java.lang.Object obj57 = stackTestDriver46.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj58 = stackTestDriver51.pop();
        java.lang.Class<?> wildcardClass59 = stackTestDriver51.getClass();
        java.lang.Object obj60 = stackTestDriver43.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj61 = stackTestDriver21.push((java.lang.Object) stackTestDriver43);
        java.lang.Object obj62 = stackTestDriver1.push((java.lang.Object) stackTestDriver21);
        java.lang.Object obj63 = stackTestDriver21.pop();
        java.lang.Object obj64 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver65 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj67 = stackTestDriver65.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Object obj76 = stackTestDriver68.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver68.push((java.lang.Object) stackTestDriver77);
        java.lang.Object obj81 = stackTestDriver68.pop();
        java.lang.Object obj82 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj84 = stackTestDriver65.push((java.lang.Object) stackTestDriver68);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver21.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = stackTestDriver21.pop();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0.0f + "'", obj25, 0.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + false + "'", obj34, false);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + false + "'", obj35, false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + "" + "'", obj56, "");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "" + "'", obj58, "");
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + false + "'", obj76, false);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1474");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        java.lang.Object obj21 = stackTestDriver1.push((java.lang.Object) (byte) -1);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        java.lang.Object obj31 = stackTestDriver1.push((java.lang.Object) stackTestDriver22);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        java.lang.Object obj45 = stackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        java.lang.Object obj54 = stackTestDriver40.push((java.lang.Object) 10.0f);
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver40);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver40.push((java.lang.Object) wildcardClass59);
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver76.pop();
        java.lang.Object obj94 = stackTestDriver40.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj95 = stackTestDriver22.push((java.lang.Object) stackTestDriver40);
        stackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) -1 + "'", obj21, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 10.0f + "'", obj54, 10.0f);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1475");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj22 = stackTestDriver10.push((java.lang.Object) stackTestDriver19);
        java.lang.Object obj23 = stackTestDriver0.push(obj22);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver25.pop();
        java.lang.Object obj45 = stackTestDriver0.push(obj44);
        java.lang.Object obj46 = stackTestDriver0.pop();
        java.lang.Object obj47 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass49 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1476");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = stackTestDriver0.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj24 = stackTestDriver22.push((java.lang.Object) 1.0f);
        java.lang.Object obj25 = stackTestDriver22.pop();
        java.lang.Object obj27 = stackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = stackTestDriver22.push((java.lang.Object) 10.0f);
        java.lang.Object obj30 = stackTestDriver16.push((java.lang.Object) 10.0f);
        java.lang.Object obj31 = stackTestDriver8.push((java.lang.Object) stackTestDriver16);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver16.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = stackTestDriver0.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj39 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj44 = stackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Object obj45 = stackTestDriver42.pop();
        java.lang.Object obj47 = stackTestDriver42.push((java.lang.Object) "");
        java.lang.Object obj48 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj54 = stackTestDriver42.push((java.lang.Object) stackTestDriver50);
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        stackTestDriver55.clear();
        experiment.drivers.StackTestDriver stackTestDriver62 = new experiment.drivers.StackTestDriver();
        stackTestDriver62.clear();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = stackTestDriver62.push((java.lang.Object) wildcardClass65);
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        stackTestDriver62.clear();
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Object obj81 = stackTestDriver76.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = stackTestDriver76.push((java.lang.Object) 10.0f);
        java.lang.Object obj84 = stackTestDriver70.push((java.lang.Object) 10.0f);
        java.lang.Object obj85 = stackTestDriver62.push((java.lang.Object) stackTestDriver70);
        java.lang.Class<?> wildcardClass86 = stackTestDriver70.getClass();
        java.lang.Object obj87 = stackTestDriver55.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj88 = stackTestDriver55.pop();
        java.lang.Object obj89 = stackTestDriver50.push(obj88);
        java.lang.Object obj90 = stackTestDriver50.pop();
        java.lang.Object obj91 = stackTestDriver0.push((java.lang.Object) stackTestDriver50);
        stackTestDriver50.clear();
        java.lang.Class<?> wildcardClass93 = stackTestDriver50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0.0d + "'", obj7, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 10.0f + "'", obj30, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + "" + "'", obj47, "");
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + "" + "'", obj48, "");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 10.0f + "'", obj83, 10.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 10.0f + "'", obj84, 10.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1477");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj61 = stackTestDriver57.push((java.lang.Object) 0.0f);
        java.lang.Object obj63 = stackTestDriver57.push((java.lang.Object) 1.0d);
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj71 = stackTestDriver64.pop();
        java.lang.Object obj72 = stackTestDriver57.push((java.lang.Object) stackTestDriver64);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = stackTestDriver73.pop();
        stackTestDriver73.clear();
        java.lang.Object obj79 = stackTestDriver73.push((java.lang.Object) 100L);
        java.lang.Object obj81 = stackTestDriver73.push((java.lang.Object) false);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        stackTestDriver83.clear();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = stackTestDriver83.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = stackTestDriver73.push(obj87);
        java.lang.Object obj89 = stackTestDriver73.pop();
        java.lang.Object obj90 = stackTestDriver64.push((java.lang.Object) stackTestDriver73);
        java.lang.Object obj91 = stackTestDriver0.push(obj90);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0d + "'", obj63, 1.0d);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100L + "'", obj71, 100L);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100L + "'", obj79, 100L);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + false + "'", obj81, false);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + false + "'", obj82, false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1478");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        java.lang.Object obj10 = stackTestDriver5.push((java.lang.Object) "");
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) stackTestDriver5);
        java.lang.Object obj12 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        stackTestDriver5.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) (byte) 100);
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = stackTestDriver15.push(obj26);
        java.lang.Class<?> wildcardClass28 = stackTestDriver15.getClass();
        java.lang.Object obj29 = stackTestDriver5.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        stackTestDriver30.clear();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver44 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj46 = stackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Object obj47 = stackTestDriver44.pop();
        java.lang.Object obj49 = stackTestDriver44.push((java.lang.Object) (byte) 100);
        java.lang.Object obj51 = stackTestDriver44.push((java.lang.Object) 10.0f);
        java.lang.Object obj52 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj53 = stackTestDriver30.push((java.lang.Object) stackTestDriver38);
        java.lang.Object obj55 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = stackTestDriver56.push((java.lang.Object) 10.0f);
        java.lang.Object obj64 = stackTestDriver30.push(obj63);
        java.lang.Object obj65 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver30.push(obj70);
        java.lang.Object obj72 = stackTestDriver5.push(obj70);
        experiment.drivers.StackTestDriver stackTestDriver73 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj75 = stackTestDriver73.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver73.push(obj79);
        java.lang.Object obj82 = stackTestDriver73.pop();
        experiment.drivers.StackTestDriver stackTestDriver83 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj85 = stackTestDriver83.push((java.lang.Object) 1.0f);
        java.lang.Object obj86 = stackTestDriver83.pop();
        java.lang.Object obj88 = stackTestDriver83.push((java.lang.Object) "");
        java.lang.Object obj89 = stackTestDriver83.pop();
        java.lang.Object obj90 = stackTestDriver73.push(obj89);
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        stackTestDriver73.clear();
        java.lang.Object obj94 = stackTestDriver5.push((java.lang.Object) stackTestDriver73);
        stackTestDriver5.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + "" + "'", obj10, "");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 10.0f + "'", obj51, 10.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10.0f + "'", obj52, 10.0f);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10.0f + "'", obj63, 10.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 10.0f + "'", obj65, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 1.0f + "'", obj86, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "" + "'", obj89, "");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + "" + "'", obj90, "");
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1479");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        java.lang.Object obj27 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver28.push(obj34);
        java.lang.Object obj37 = stackTestDriver28.pop();
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        stackTestDriver38.clear();
        java.lang.Object obj44 = stackTestDriver38.push((java.lang.Object) 100L);
        java.lang.Object obj46 = stackTestDriver38.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver38.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj51 = stackTestDriver28.push(obj50);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        stackTestDriver52.clear();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = stackTestDriver52.push((java.lang.Object) wildcardClass55);
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        java.lang.Object obj69 = stackTestDriver66.pop();
        java.lang.Object obj71 = stackTestDriver66.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = stackTestDriver66.push((java.lang.Object) 10.0f);
        java.lang.Object obj74 = stackTestDriver60.push((java.lang.Object) 10.0f);
        java.lang.Object obj75 = stackTestDriver52.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        stackTestDriver76.clear();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = stackTestDriver76.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = stackTestDriver60.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = stackTestDriver28.push((java.lang.Object) stackTestDriver60);
        java.lang.Object obj83 = stackTestDriver0.push((java.lang.Object) stackTestDriver60);
        java.lang.Class<?> wildcardClass84 = stackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100L + "'", obj44, 100L);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 10.0f + "'", obj73, 10.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 10.0f + "'", obj74, 10.0f);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1480");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        java.lang.Object obj25 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        experiment.drivers.StackTestDriver stackTestDriver48 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj50 = stackTestDriver48.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        stackTestDriver51.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj58 = stackTestDriver56.push((java.lang.Object) 1.0f);
        java.lang.Object obj59 = stackTestDriver56.pop();
        java.lang.Object obj61 = stackTestDriver56.push((java.lang.Object) "");
        java.lang.Object obj62 = stackTestDriver51.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj63 = stackTestDriver56.pop();
        java.lang.Class<?> wildcardClass64 = stackTestDriver56.getClass();
        java.lang.Object obj65 = stackTestDriver48.push((java.lang.Object) stackTestDriver56);
        java.lang.Object obj66 = stackTestDriver26.push((java.lang.Object) stackTestDriver48);
        java.lang.Object obj67 = stackTestDriver0.push(obj66);
        experiment.drivers.StackTestDriver stackTestDriver68 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj70 = stackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Object obj71 = stackTestDriver68.pop();
        stackTestDriver68.clear();
        java.lang.Object obj74 = stackTestDriver68.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass75 = stackTestDriver68.getClass();
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) wildcardClass75);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + "" + "'", obj61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "" + "'", obj63, "");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100L + "'", obj74, 100L);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1481");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver28 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj30 = stackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver28.pop();
        stackTestDriver28.clear();
        experiment.drivers.StackTestDriver stackTestDriver33 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj35 = stackTestDriver33.push((java.lang.Object) 1.0f);
        java.lang.Object obj36 = stackTestDriver33.pop();
        java.lang.Object obj38 = stackTestDriver33.push((java.lang.Object) "");
        java.lang.Object obj39 = stackTestDriver28.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj40 = stackTestDriver33.pop();
        java.lang.Class<?> wildcardClass41 = stackTestDriver33.getClass();
        java.lang.Object obj42 = stackTestDriver25.push((java.lang.Object) stackTestDriver33);
        java.lang.Object obj43 = stackTestDriver24.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj44 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj48 = stackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Object obj49 = stackTestDriver46.pop();
        java.lang.Object obj51 = stackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = stackTestDriver46.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = stackTestDriver54.push(obj60);
        java.lang.Object obj63 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver64 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj66 = stackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Object obj67 = stackTestDriver64.pop();
        stackTestDriver64.clear();
        java.lang.Object obj70 = stackTestDriver64.push((java.lang.Object) 100L);
        java.lang.Object obj72 = stackTestDriver64.push((java.lang.Object) false);
        java.lang.Object obj73 = stackTestDriver64.pop();
        experiment.drivers.StackTestDriver stackTestDriver74 = new experiment.drivers.StackTestDriver();
        stackTestDriver74.clear();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = stackTestDriver74.push((java.lang.Object) wildcardClass77);
        java.lang.Object obj79 = stackTestDriver64.push(obj78);
        java.lang.Object obj80 = stackTestDriver54.push((java.lang.Object) stackTestDriver64);
        java.lang.Object obj81 = stackTestDriver54.pop();
        experiment.drivers.StackTestDriver stackTestDriver82 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj84 = stackTestDriver82.push((java.lang.Object) 1.0f);
        java.lang.Object obj85 = stackTestDriver82.pop();
        java.lang.Object obj87 = stackTestDriver82.push((java.lang.Object) "");
        java.lang.Object obj88 = stackTestDriver82.pop();
        stackTestDriver82.clear();
        experiment.drivers.StackTestDriver stackTestDriver90 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj92 = stackTestDriver90.push((java.lang.Object) 1.0f);
        java.lang.Object obj93 = stackTestDriver90.pop();
        java.lang.Object obj94 = stackTestDriver82.push((java.lang.Object) stackTestDriver90);
        java.lang.Object obj95 = stackTestDriver54.push(obj94);
        java.lang.Object obj96 = stackTestDriver46.push((java.lang.Object) stackTestDriver54);
        java.lang.Object obj97 = stackTestDriver25.push((java.lang.Object) stackTestDriver46);
        java.lang.Object obj98 = stackTestDriver25.pop();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "" + "'", obj38, "");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + "" + "'", obj40, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100L + "'", obj70, 100L);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + false + "'", obj72, false);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + false + "'", obj73, false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "" + "'", obj88, "");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1482");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj13 = stackTestDriver6.push((java.lang.Object) 10.0f);
        java.lang.Object obj14 = stackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        java.lang.Object obj29 = stackTestDriver20.pop();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver20.push(obj34);
        java.lang.Object obj36 = stackTestDriver15.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj52 = stackTestDriver45.pop();
        java.lang.Class<?> wildcardClass53 = stackTestDriver45.getClass();
        java.lang.Object obj54 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj55 = stackTestDriver15.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj56 = stackTestDriver0.push(obj55);
        java.lang.Object obj58 = stackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj65 = stackTestDriver0.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj66 = stackTestDriver0.pop();
        java.lang.Object obj67 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        java.lang.Class<?> wildcardClass70 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 10.0f + "'", obj14, 10.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + false + "'", obj29, false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + "" + "'", obj52, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) -1 + "'", obj58, (short) -1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) -1 + "'", obj67, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1483");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj16 = stackTestDriver13.pop();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Object obj18 = stackTestDriver0.push(obj16);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = stackTestDriver21.push((java.lang.Object) wildcardClass24);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        java.lang.Object obj40 = stackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = stackTestDriver35.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver21.push((java.lang.Object) stackTestDriver29);
        java.lang.Object obj45 = stackTestDriver21.pop();
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        stackTestDriver50.clear();
        experiment.drivers.StackTestDriver stackTestDriver55 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj57 = stackTestDriver55.push((java.lang.Object) 1.0f);
        java.lang.Object obj58 = stackTestDriver55.pop();
        java.lang.Object obj60 = stackTestDriver55.push((java.lang.Object) "");
        java.lang.Object obj61 = stackTestDriver50.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj62 = stackTestDriver55.pop();
        java.lang.Class<?> wildcardClass63 = stackTestDriver55.getClass();
        java.lang.Object obj64 = stackTestDriver47.push((java.lang.Object) stackTestDriver55);
        java.lang.Object obj65 = stackTestDriver46.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj66 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj69 = stackTestDriver47.push((java.lang.Object) (-1L));
        stackTestDriver47.clear();
        java.lang.Object obj71 = stackTestDriver21.push((java.lang.Object) stackTestDriver47);
        java.lang.Object obj72 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        java.lang.Class<?> wildcardClass73 = stackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "" + "'", obj60, "");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1L) + "'", obj69, (-1L));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1484");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj10 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver11 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj13 = stackTestDriver11.push((java.lang.Object) 1.0f);
        java.lang.Object obj14 = stackTestDriver11.pop();
        stackTestDriver11.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Object obj21 = stackTestDriver16.push((java.lang.Object) "");
        java.lang.Object obj22 = stackTestDriver11.push((java.lang.Object) stackTestDriver16);
        stackTestDriver16.clear();
        stackTestDriver16.clear();
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj31 = stackTestDriver25.push((java.lang.Object) 100L);
        java.lang.Object obj33 = stackTestDriver25.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver25.push((java.lang.Object) stackTestDriver34);
        java.lang.Object obj38 = stackTestDriver25.pop();
        stackTestDriver25.clear();
        java.lang.Object obj40 = stackTestDriver16.push((java.lang.Object) stackTestDriver25);
        stackTestDriver16.clear();
        java.lang.Object obj42 = stackTestDriver0.push((java.lang.Object) stackTestDriver16);
        java.lang.Class<?> wildcardClass43 = stackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100L + "'", obj31, 100L);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1485");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 1.0d);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        stackTestDriver8.clear();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = stackTestDriver8.push((java.lang.Object) wildcardClass11);
        java.lang.Object obj13 = stackTestDriver8.pop();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver15.pop();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        java.lang.Object obj24 = stackTestDriver8.push((java.lang.Object) stackTestDriver15);
        experiment.drivers.StackTestDriver stackTestDriver25 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj27 = stackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = stackTestDriver25.pop();
        java.lang.Object obj30 = stackTestDriver25.push((java.lang.Object) (byte) 100);
        stackTestDriver25.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        stackTestDriver32.clear();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = stackTestDriver32.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = stackTestDriver25.push(obj36);
        java.lang.Object obj38 = stackTestDriver8.push((java.lang.Object) stackTestDriver25);
        java.lang.Object obj39 = stackTestDriver25.pop();
        experiment.drivers.StackTestDriver stackTestDriver40 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj42 = stackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Object obj43 = stackTestDriver40.pop();
        stackTestDriver40.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) "");
        java.lang.Object obj51 = stackTestDriver40.push((java.lang.Object) stackTestDriver45);
        stackTestDriver45.clear();
        stackTestDriver45.clear();
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj60 = stackTestDriver54.push((java.lang.Object) 100L);
        java.lang.Object obj62 = stackTestDriver54.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver54.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj67 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj69 = stackTestDriver45.push((java.lang.Object) stackTestDriver54);
        java.lang.Class<?> wildcardClass70 = stackTestDriver54.getClass();
        java.lang.Object obj71 = stackTestDriver25.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = stackTestDriver25.pop();
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver25);
        java.lang.Class<?> wildcardClass74 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0d + "'", obj6, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + "" + "'", obj21, "");
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "" + "'", obj50, "");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 100L + "'", obj60, 100L);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + false + "'", obj62, false);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1486");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Object obj8 = stackTestDriver0.push(obj6);
        java.lang.Object obj9 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        java.lang.Object obj16 = stackTestDriver10.push((java.lang.Object) 100L);
        java.lang.Object obj18 = stackTestDriver10.push((java.lang.Object) false);
        java.lang.Object obj19 = stackTestDriver10.pop();
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        stackTestDriver20.clear();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Object obj24 = stackTestDriver20.push((java.lang.Object) wildcardClass23);
        java.lang.Object obj25 = stackTestDriver10.push(obj24);
        java.lang.Object obj26 = stackTestDriver0.push((java.lang.Object) stackTestDriver10);
        stackTestDriver10.clear();
        stackTestDriver10.clear();
        java.lang.Class<?> wildcardClass29 = stackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100L + "'", obj16, 100L);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + false + "'", obj18, false);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + false + "'", obj19, false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1487");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver0.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver22 = new experiment.drivers.StackTestDriver();
        stackTestDriver22.clear();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = stackTestDriver22.push((java.lang.Object) wildcardClass25);
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        stackTestDriver22.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj33 = stackTestDriver30.pop();
        java.lang.Object obj35 = stackTestDriver30.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver36 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj38 = stackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Object obj39 = stackTestDriver36.pop();
        java.lang.Object obj41 = stackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = stackTestDriver36.push((java.lang.Object) 10.0f);
        java.lang.Object obj44 = stackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj45 = stackTestDriver22.push((java.lang.Object) stackTestDriver30);
        experiment.drivers.StackTestDriver stackTestDriver46 = new experiment.drivers.StackTestDriver();
        stackTestDriver46.clear();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = stackTestDriver46.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj51 = stackTestDriver30.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj52 = stackTestDriver14.push((java.lang.Object) wildcardClass49);
        java.lang.Object obj53 = stackTestDriver0.push((java.lang.Object) stackTestDriver14);
        experiment.drivers.StackTestDriver stackTestDriver54 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj56 = stackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Object obj57 = stackTestDriver54.pop();
        java.lang.Object obj59 = stackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = stackTestDriver54.push((java.lang.Object) 0.0d);
        java.lang.Object obj62 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Object obj64 = stackTestDriver14.push((java.lang.Object) stackTestDriver54);
        stackTestDriver54.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj68 = stackTestDriver66.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver69 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj71 = stackTestDriver69.push((java.lang.Object) 1.0f);
        java.lang.Object obj72 = stackTestDriver69.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver66.push(obj72);
        java.lang.Object obj75 = stackTestDriver66.pop();
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver76.pop();
        stackTestDriver76.clear();
        java.lang.Object obj82 = stackTestDriver76.push((java.lang.Object) 100L);
        java.lang.Object obj84 = stackTestDriver76.push((java.lang.Object) false);
        java.lang.Object obj85 = stackTestDriver76.pop();
        experiment.drivers.StackTestDriver stackTestDriver86 = new experiment.drivers.StackTestDriver();
        stackTestDriver86.clear();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = stackTestDriver86.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = stackTestDriver76.push(obj90);
        java.lang.Object obj92 = stackTestDriver66.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj93 = stackTestDriver54.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj94 = stackTestDriver54.pop();
        stackTestDriver54.clear();
        java.lang.Class<?> wildcardClass96 = stackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0d + "'", obj21, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 10.0f + "'", obj44, 10.0f);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0d + "'", obj61, 0.0d);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0d + "'", obj62, 0.0d);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 100L + "'", obj82, 100L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + false + "'", obj84, false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1488");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver5 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj7 = stackTestDriver5.push((java.lang.Object) 1.0f);
        java.lang.Object obj8 = stackTestDriver5.pop();
        stackTestDriver5.clear();
        java.lang.Object obj11 = stackTestDriver5.push((java.lang.Object) 100L);
        java.lang.Object obj13 = stackTestDriver5.push((java.lang.Object) false);
        java.lang.Object obj14 = stackTestDriver5.pop();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = stackTestDriver5.push(obj19);
        java.lang.Object obj21 = stackTestDriver0.push(obj19);
        java.lang.Object obj22 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (byte) 100);
        stackTestDriver23.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        stackTestDriver30.clear();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = stackTestDriver23.push(obj34);
        java.lang.Object obj36 = stackTestDriver0.push(obj34);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj39 = stackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Object obj40 = stackTestDriver37.pop();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        java.lang.Object obj43 = stackTestDriver0.push((java.lang.Object) stackTestDriver37);
        java.lang.Object obj44 = stackTestDriver0.pop();
        java.lang.Object obj45 = stackTestDriver0.pop();
        java.lang.Object obj46 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + false + "'", obj13, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1489");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver3 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj5 = stackTestDriver3.push((java.lang.Object) 1.0f);
        java.lang.Object obj6 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj9 = stackTestDriver3.push((java.lang.Object) 100L);
        java.lang.Object obj11 = stackTestDriver3.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver12 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj14 = stackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Object obj15 = stackTestDriver3.push((java.lang.Object) stackTestDriver12);
        java.lang.Object obj16 = stackTestDriver3.pop();
        java.lang.Object obj17 = stackTestDriver3.pop();
        stackTestDriver3.clear();
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver3);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        java.lang.Object obj26 = stackTestDriver20.push((java.lang.Object) 100L);
        java.lang.Object obj28 = stackTestDriver20.push((java.lang.Object) false);
        stackTestDriver20.clear();
        experiment.drivers.StackTestDriver stackTestDriver30 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj32 = stackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver35 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj37 = stackTestDriver35.push((java.lang.Object) 1.0f);
        java.lang.Object obj38 = stackTestDriver35.pop();
        stackTestDriver35.clear();
        java.lang.Object obj41 = stackTestDriver35.push((java.lang.Object) 100L);
        java.lang.Object obj43 = stackTestDriver35.push((java.lang.Object) false);
        java.lang.Object obj44 = stackTestDriver35.pop();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        stackTestDriver45.clear();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = stackTestDriver45.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = stackTestDriver35.push(obj49);
        java.lang.Object obj51 = stackTestDriver30.push(obj49);
        java.lang.Object obj52 = stackTestDriver30.pop();
        experiment.drivers.StackTestDriver stackTestDriver53 = new experiment.drivers.StackTestDriver();
        stackTestDriver53.clear();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = stackTestDriver53.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = stackTestDriver53.pop();
        stackTestDriver53.clear();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj62 = stackTestDriver60.push((java.lang.Object) 1.0f);
        java.lang.Object obj63 = stackTestDriver60.pop();
        java.lang.Object obj65 = stackTestDriver60.push((java.lang.Object) "");
        java.lang.Object obj66 = stackTestDriver60.pop();
        stackTestDriver60.clear();
        stackTestDriver60.clear();
        java.lang.Object obj69 = stackTestDriver53.push((java.lang.Object) stackTestDriver60);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj72 = stackTestDriver70.push((java.lang.Object) 1.0f);
        java.lang.Object obj73 = stackTestDriver70.pop();
        java.lang.Object obj75 = stackTestDriver70.push((java.lang.Object) (byte) 100);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        stackTestDriver77.clear();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = stackTestDriver77.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = stackTestDriver70.push(obj81);
        java.lang.Object obj83 = stackTestDriver53.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        stackTestDriver70.clear();
        java.lang.Object obj86 = stackTestDriver30.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj87 = stackTestDriver30.pop();
        java.lang.Object obj88 = stackTestDriver20.push((java.lang.Object) stackTestDriver30);
        java.lang.Object obj89 = stackTestDriver0.push(obj88);
        stackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = stackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100L + "'", obj9, 100L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 100L + "'", obj26, 100L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + false + "'", obj28, false);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 100L + "'", obj41, 100L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + false + "'", obj44, false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "" + "'", obj65, "");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "" + "'", obj66, "");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1490");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        stackTestDriver16.clear();
        java.lang.Object obj22 = stackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj24 = stackTestDriver16.push((java.lang.Object) false);
        java.lang.Object obj25 = stackTestDriver16.pop();
        experiment.drivers.StackTestDriver stackTestDriver26 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj28 = stackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Object obj30 = stackTestDriver26.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver31 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj33 = stackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Object obj34 = stackTestDriver31.pop();
        stackTestDriver31.clear();
        java.lang.Object obj37 = stackTestDriver31.push((java.lang.Object) 100L);
        java.lang.Object obj39 = stackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj40 = stackTestDriver31.pop();
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        stackTestDriver41.clear();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = stackTestDriver41.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = stackTestDriver31.push(obj45);
        java.lang.Object obj47 = stackTestDriver26.push(obj45);
        java.lang.Object obj48 = stackTestDriver26.pop();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) (byte) 100);
        stackTestDriver49.clear();
        experiment.drivers.StackTestDriver stackTestDriver56 = new experiment.drivers.StackTestDriver();
        stackTestDriver56.clear();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = stackTestDriver56.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = stackTestDriver49.push(obj60);
        java.lang.Object obj62 = stackTestDriver26.push(obj60);
        experiment.drivers.StackTestDriver stackTestDriver63 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj65 = stackTestDriver63.push((java.lang.Object) 1.0f);
        java.lang.Object obj66 = stackTestDriver63.pop();
        stackTestDriver63.clear();
        stackTestDriver63.clear();
        java.lang.Object obj69 = stackTestDriver26.push((java.lang.Object) stackTestDriver63);
        java.lang.Object obj70 = stackTestDriver26.pop();
        stackTestDriver26.clear();
        java.lang.Object obj72 = stackTestDriver16.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj73 = stackTestDriver0.push((java.lang.Object) stackTestDriver26);
        java.lang.Object obj74 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 100L + "'", obj22, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + false + "'", obj24, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + false + "'", obj25, false);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1491");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        java.lang.Object obj5 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        experiment.drivers.StackTestDriver stackTestDriver13 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj15 = stackTestDriver13.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver16 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj18 = stackTestDriver16.push((java.lang.Object) 1.0f);
        java.lang.Object obj19 = stackTestDriver16.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = stackTestDriver13.push(obj19);
        java.lang.Object obj22 = stackTestDriver13.pop();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        stackTestDriver23.clear();
        java.lang.Object obj29 = stackTestDriver23.push((java.lang.Object) 100L);
        java.lang.Object obj31 = stackTestDriver23.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver23.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj36 = stackTestDriver13.push(obj35);
        experiment.drivers.StackTestDriver stackTestDriver37 = new experiment.drivers.StackTestDriver();
        stackTestDriver37.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = stackTestDriver37.push((java.lang.Object) wildcardClass40);
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        stackTestDriver37.clear();
        experiment.drivers.StackTestDriver stackTestDriver45 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj47 = stackTestDriver45.push((java.lang.Object) 1.0f);
        java.lang.Object obj48 = stackTestDriver45.pop();
        java.lang.Object obj50 = stackTestDriver45.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj54 = stackTestDriver51.pop();
        java.lang.Object obj56 = stackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = stackTestDriver51.push((java.lang.Object) 10.0f);
        java.lang.Object obj59 = stackTestDriver45.push((java.lang.Object) 10.0f);
        java.lang.Object obj60 = stackTestDriver37.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver61 = new experiment.drivers.StackTestDriver();
        stackTestDriver61.clear();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = stackTestDriver61.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = stackTestDriver45.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj67 = stackTestDriver13.push((java.lang.Object) stackTestDriver45);
        java.lang.Object obj68 = stackTestDriver45.pop();
        java.lang.Object obj69 = stackTestDriver6.push((java.lang.Object) stackTestDriver45);
        experiment.drivers.StackTestDriver stackTestDriver70 = new experiment.drivers.StackTestDriver();
        stackTestDriver70.clear();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = stackTestDriver70.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = stackTestDriver6.push((java.lang.Object) stackTestDriver70);
        java.lang.Object obj76 = stackTestDriver0.push((java.lang.Object) stackTestDriver70);
        stackTestDriver70.clear();
        experiment.drivers.StackTestDriver stackTestDriver78 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj80 = stackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Object obj81 = stackTestDriver78.pop();
        java.lang.Object obj83 = stackTestDriver78.push((java.lang.Object) "");
        java.lang.Object obj84 = stackTestDriver78.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = stackTestDriver70.push(obj84);
        java.lang.Object obj87 = stackTestDriver70.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = stackTestDriver70.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 100L + "'", obj29, 100L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + false + "'", obj31, false);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "" + "'", obj83, "");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + "" + "'", obj84, "");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "" + "'", obj86, "");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "" + "'", obj87, "");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1492");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        java.lang.Object obj11 = stackTestDriver6.push((java.lang.Object) "");
        java.lang.Object obj12 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj18 = stackTestDriver6.push((java.lang.Object) stackTestDriver14);
        stackTestDriver6.clear();
        java.lang.Object obj20 = stackTestDriver0.push((java.lang.Object) stackTestDriver6);
        experiment.drivers.StackTestDriver stackTestDriver21 = new experiment.drivers.StackTestDriver();
        stackTestDriver21.clear();
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver21);
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        stackTestDriver21.clear();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + "" + "'", obj11, "");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + "" + "'", obj12, "");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1493");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        stackTestDriver24.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        java.lang.Object obj37 = stackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver38 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj40 = stackTestDriver38.push((java.lang.Object) 1.0f);
        java.lang.Object obj41 = stackTestDriver38.pop();
        java.lang.Object obj43 = stackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = stackTestDriver38.push((java.lang.Object) 10.0f);
        java.lang.Object obj46 = stackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj47 = stackTestDriver24.push((java.lang.Object) stackTestDriver32);
        java.lang.Object obj49 = stackTestDriver24.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver50 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj52 = stackTestDriver50.push((java.lang.Object) 1.0f);
        java.lang.Object obj53 = stackTestDriver50.pop();
        java.lang.Object obj55 = stackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = stackTestDriver50.push((java.lang.Object) 10.0f);
        java.lang.Object obj58 = stackTestDriver24.push(obj57);
        java.lang.Object obj59 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver60 = new experiment.drivers.StackTestDriver();
        stackTestDriver60.clear();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = stackTestDriver60.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = stackTestDriver24.push(obj64);
        java.lang.Object obj66 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver67 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj69 = stackTestDriver67.push((java.lang.Object) 1.0f);
        java.lang.Object obj70 = stackTestDriver67.pop();
        stackTestDriver67.clear();
        java.lang.Object obj73 = stackTestDriver67.push((java.lang.Object) 100L);
        java.lang.Object obj75 = stackTestDriver67.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver76 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj78 = stackTestDriver76.push((java.lang.Object) 1.0f);
        java.lang.Object obj79 = stackTestDriver67.push((java.lang.Object) stackTestDriver76);
        java.lang.Object obj80 = stackTestDriver67.pop();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = stackTestDriver24.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = stackTestDriver8.push(obj82);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 10.0f + "'", obj45, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 10.0f + "'", obj58, 10.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10.0f + "'", obj59, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100L + "'", obj73, 100L);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + false + "'", obj75, false);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1494");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver1 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj3 = stackTestDriver1.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver4 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj6 = stackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Object obj7 = stackTestDriver4.pop();
        stackTestDriver4.clear();
        experiment.drivers.StackTestDriver stackTestDriver9 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj11 = stackTestDriver9.push((java.lang.Object) 1.0f);
        java.lang.Object obj12 = stackTestDriver9.pop();
        java.lang.Object obj14 = stackTestDriver9.push((java.lang.Object) "");
        java.lang.Object obj15 = stackTestDriver4.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj16 = stackTestDriver9.pop();
        java.lang.Class<?> wildcardClass17 = stackTestDriver9.getClass();
        java.lang.Object obj18 = stackTestDriver1.push((java.lang.Object) stackTestDriver9);
        java.lang.Object obj19 = stackTestDriver0.push((java.lang.Object) stackTestDriver1);
        experiment.drivers.StackTestDriver stackTestDriver20 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj22 = stackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver20.pop();
        stackTestDriver20.clear();
        stackTestDriver20.clear();
        java.lang.Class<?> wildcardClass26 = stackTestDriver20.getClass();
        java.lang.Object obj27 = stackTestDriver0.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + "" + "'", obj14, "");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "" + "'", obj16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.StackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.StackTestDriver");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1495");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        java.lang.Object obj32 = stackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj33 = stackTestDriver8.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj36 = stackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Object obj37 = stackTestDriver34.pop();
        java.lang.Object obj39 = stackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj40 = stackTestDriver8.push((java.lang.Object) stackTestDriver34);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver41.pop();
        stackTestDriver41.clear();
        java.lang.Object obj47 = stackTestDriver41.push((java.lang.Object) 100L);
        java.lang.Object obj49 = stackTestDriver41.push((java.lang.Object) false);
        java.lang.Object obj50 = stackTestDriver41.pop();
        experiment.drivers.StackTestDriver stackTestDriver51 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj53 = stackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver51.push((java.lang.Object) 0.0f);
        java.lang.Object obj57 = stackTestDriver51.push((java.lang.Object) 1.0d);
        java.lang.Object obj58 = stackTestDriver51.pop();
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = stackTestDriver59.push((java.lang.Object) 0.0d);
        java.lang.Object obj68 = stackTestDriver59.push((java.lang.Object) false);
        java.lang.Object obj69 = stackTestDriver51.push(obj68);
        stackTestDriver51.clear();
        java.lang.Object obj71 = stackTestDriver41.push((java.lang.Object) stackTestDriver51);
        java.lang.Object obj72 = stackTestDriver8.push((java.lang.Object) stackTestDriver51);
        java.lang.Class<?> wildcardClass73 = stackTestDriver51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0d + "'", obj57, 1.0d);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0d + "'", obj58, 1.0d);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0d + "'", obj66, 0.0d);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + false + "'", obj68, false);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + false + "'", obj69, false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1496");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        java.lang.Object obj5 = stackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj8 = stackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Object obj9 = stackTestDriver6.pop();
        stackTestDriver6.clear();
        java.lang.Object obj12 = stackTestDriver6.push((java.lang.Object) 100L);
        java.lang.Object obj14 = stackTestDriver6.push((java.lang.Object) false);
        java.lang.Object obj15 = stackTestDriver6.pop();
        java.lang.Object obj16 = stackTestDriver0.push(obj15);
        java.lang.Object obj17 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver19 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj21 = stackTestDriver19.push((java.lang.Object) 1.0f);
        java.lang.Object obj23 = stackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj26 = stackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Object obj27 = stackTestDriver24.pop();
        stackTestDriver24.clear();
        java.lang.Object obj30 = stackTestDriver24.push((java.lang.Object) 100L);
        java.lang.Object obj32 = stackTestDriver24.push((java.lang.Object) false);
        java.lang.Object obj33 = stackTestDriver24.pop();
        experiment.drivers.StackTestDriver stackTestDriver34 = new experiment.drivers.StackTestDriver();
        stackTestDriver34.clear();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = stackTestDriver34.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = stackTestDriver24.push(obj38);
        java.lang.Object obj40 = stackTestDriver19.push(obj38);
        java.lang.Object obj41 = stackTestDriver19.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver42.pop();
        stackTestDriver42.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        java.lang.Object obj52 = stackTestDriver49.pop();
        java.lang.Object obj54 = stackTestDriver49.push((java.lang.Object) "");
        java.lang.Object obj55 = stackTestDriver49.pop();
        stackTestDriver49.clear();
        stackTestDriver49.clear();
        java.lang.Object obj58 = stackTestDriver42.push((java.lang.Object) stackTestDriver49);
        experiment.drivers.StackTestDriver stackTestDriver59 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj61 = stackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Object obj62 = stackTestDriver59.pop();
        java.lang.Object obj64 = stackTestDriver59.push((java.lang.Object) (byte) 100);
        stackTestDriver59.clear();
        experiment.drivers.StackTestDriver stackTestDriver66 = new experiment.drivers.StackTestDriver();
        stackTestDriver66.clear();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = stackTestDriver66.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = stackTestDriver59.push(obj70);
        java.lang.Object obj72 = stackTestDriver42.push((java.lang.Object) stackTestDriver59);
        stackTestDriver59.clear();
        stackTestDriver59.clear();
        java.lang.Object obj75 = stackTestDriver19.push((java.lang.Object) stackTestDriver59);
        java.lang.Object obj76 = stackTestDriver19.pop();
        experiment.drivers.StackTestDriver stackTestDriver77 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj79 = stackTestDriver77.push((java.lang.Object) 1.0f);
        java.lang.Object obj80 = stackTestDriver77.pop();
        stackTestDriver77.clear();
        stackTestDriver77.clear();
        stackTestDriver77.clear();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Object obj85 = stackTestDriver77.push(obj84);
        java.lang.Object obj86 = stackTestDriver19.push(obj84);
        java.lang.Object obj87 = stackTestDriver0.push(obj86);
        java.lang.Class<?> wildcardClass88 = stackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 100L + "'", obj12, 100L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + false + "'", obj14, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + false + "'", obj15, false);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + false + "'", obj16, false);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + false + "'", obj17, false);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100L + "'", obj30, 100L);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + false + "'", obj32, false);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + false + "'", obj33, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class java.lang.Object");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "" + "'", obj54, "");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + "" + "'", obj55, "");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1497");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = stackTestDriver0.pop();
        stackTestDriver0.clear();
        java.lang.Object obj6 = stackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj8 = stackTestDriver0.push((java.lang.Object) false);
        java.lang.Object obj9 = stackTestDriver0.pop();
        java.lang.Object obj11 = stackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj12 = stackTestDriver0.pop();
        java.lang.Object obj13 = stackTestDriver0.pop();
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver18 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj20 = stackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Object obj21 = stackTestDriver18.pop();
        stackTestDriver18.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) "");
        java.lang.Object obj29 = stackTestDriver18.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj30 = stackTestDriver23.pop();
        java.lang.Class<?> wildcardClass31 = stackTestDriver23.getClass();
        java.lang.Object obj32 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        java.lang.Object obj33 = stackTestDriver14.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj34 = stackTestDriver15.pop();
        java.lang.Object obj35 = stackTestDriver0.push(obj34);
        stackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100L + "'", obj6, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + false + "'", obj8, false);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + false + "'", obj9, false);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) -1 + "'", obj11, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) -1 + "'", obj12, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 100L + "'", obj13, 100L);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + "" + "'", obj28, "");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "" + "'", obj30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1498");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver6 = new experiment.drivers.StackTestDriver();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver10 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj12 = stackTestDriver10.push((java.lang.Object) 1.0f);
        java.lang.Object obj13 = stackTestDriver10.pop();
        stackTestDriver10.clear();
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj17 = stackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Object obj18 = stackTestDriver15.pop();
        java.lang.Object obj20 = stackTestDriver15.push((java.lang.Object) "");
        java.lang.Object obj21 = stackTestDriver10.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj22 = stackTestDriver15.pop();
        java.lang.Class<?> wildcardClass23 = stackTestDriver15.getClass();
        java.lang.Object obj24 = stackTestDriver7.push((java.lang.Object) stackTestDriver15);
        java.lang.Object obj25 = stackTestDriver6.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj26 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver27 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj29 = stackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Object obj31 = stackTestDriver27.push((java.lang.Object) 0.0f);
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        java.lang.Object obj41 = stackTestDriver32.pop();
        experiment.drivers.StackTestDriver stackTestDriver42 = new experiment.drivers.StackTestDriver();
        stackTestDriver42.clear();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = stackTestDriver42.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = stackTestDriver32.push(obj46);
        java.lang.Object obj48 = stackTestDriver27.push(obj46);
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj51 = stackTestDriver49.push((java.lang.Object) 1.0f);
        experiment.drivers.StackTestDriver stackTestDriver52 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj54 = stackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Object obj55 = stackTestDriver52.pop();
        stackTestDriver52.clear();
        experiment.drivers.StackTestDriver stackTestDriver57 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj59 = stackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Object obj60 = stackTestDriver57.pop();
        java.lang.Object obj62 = stackTestDriver57.push((java.lang.Object) "");
        java.lang.Object obj63 = stackTestDriver52.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj64 = stackTestDriver57.pop();
        java.lang.Class<?> wildcardClass65 = stackTestDriver57.getClass();
        java.lang.Object obj66 = stackTestDriver49.push((java.lang.Object) stackTestDriver57);
        java.lang.Object obj67 = stackTestDriver27.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj68 = stackTestDriver7.push((java.lang.Object) stackTestDriver27);
        java.lang.Object obj69 = stackTestDriver7.pop();
        java.lang.Object obj70 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "" + "'", obj20, "");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + "" + "'", obj22, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + false + "'", obj41, false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "" + "'", obj62, "");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "" + "'", obj64, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1499");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        stackTestDriver0.clear();
        java.lang.Object obj2 = new java.lang.Object();
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) wildcardClass3);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver8 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj10 = stackTestDriver8.push((java.lang.Object) 1.0f);
        java.lang.Object obj11 = stackTestDriver8.pop();
        java.lang.Object obj13 = stackTestDriver8.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver14 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj16 = stackTestDriver14.push((java.lang.Object) 1.0f);
        java.lang.Object obj17 = stackTestDriver14.pop();
        java.lang.Object obj19 = stackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = stackTestDriver14.push((java.lang.Object) 10.0f);
        java.lang.Object obj22 = stackTestDriver8.push((java.lang.Object) 10.0f);
        java.lang.Object obj23 = stackTestDriver0.push((java.lang.Object) stackTestDriver8);
        experiment.drivers.StackTestDriver stackTestDriver24 = new experiment.drivers.StackTestDriver();
        stackTestDriver24.clear();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = stackTestDriver24.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = stackTestDriver8.push((java.lang.Object) wildcardClass27);
        stackTestDriver8.clear();
        stackTestDriver8.clear();
        experiment.drivers.StackTestDriver stackTestDriver32 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj34 = stackTestDriver32.push((java.lang.Object) 1.0f);
        java.lang.Object obj35 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        java.lang.Object obj38 = stackTestDriver32.push((java.lang.Object) 100L);
        java.lang.Object obj40 = stackTestDriver32.push((java.lang.Object) false);
        experiment.drivers.StackTestDriver stackTestDriver41 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj43 = stackTestDriver41.push((java.lang.Object) 1.0f);
        java.lang.Object obj44 = stackTestDriver32.push((java.lang.Object) stackTestDriver41);
        java.lang.Object obj45 = stackTestDriver32.pop();
        java.lang.Object obj46 = stackTestDriver32.pop();
        java.lang.Object obj47 = stackTestDriver32.pop();
        stackTestDriver32.clear();
        experiment.drivers.StackTestDriver stackTestDriver49 = new experiment.drivers.StackTestDriver();
        stackTestDriver49.clear();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = stackTestDriver49.push((java.lang.Object) wildcardClass52);
        stackTestDriver49.clear();
        java.lang.Object obj55 = stackTestDriver32.push((java.lang.Object) stackTestDriver49);
        java.lang.Object obj56 = stackTestDriver8.push(obj55);
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10.0f + "'", obj21, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10.0f + "'", obj22, 10.0f);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100L + "'", obj38, 100L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + false + "'", obj40, false);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + false + "'", obj46, false);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100L + "'", obj47, 100L);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_StackTest_0_8000_2.test1500");
        experiment.drivers.StackTestDriver stackTestDriver0 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj2 = stackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj4 = stackTestDriver0.push((java.lang.Object) 0.0f);
        stackTestDriver0.clear();
        stackTestDriver0.clear();
        experiment.drivers.StackTestDriver stackTestDriver7 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj9 = stackTestDriver7.push((java.lang.Object) 1.0f);
        java.lang.Object obj10 = stackTestDriver7.pop();
        java.lang.Object obj12 = stackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = stackTestDriver7.push((java.lang.Object) 0.0d);
        experiment.drivers.StackTestDriver stackTestDriver15 = new experiment.drivers.StackTestDriver();
        stackTestDriver15.clear();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = stackTestDriver15.push((java.lang.Object) wildcardClass18);
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        stackTestDriver15.clear();
        experiment.drivers.StackTestDriver stackTestDriver23 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj25 = stackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Object obj26 = stackTestDriver23.pop();
        java.lang.Object obj28 = stackTestDriver23.push((java.lang.Object) (short) 10);
        experiment.drivers.StackTestDriver stackTestDriver29 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj31 = stackTestDriver29.push((java.lang.Object) 1.0f);
        java.lang.Object obj32 = stackTestDriver29.pop();
        java.lang.Object obj34 = stackTestDriver29.push((java.lang.Object) (byte) 100);
        java.lang.Object obj36 = stackTestDriver29.push((java.lang.Object) 10.0f);
        java.lang.Object obj37 = stackTestDriver23.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = stackTestDriver15.push((java.lang.Object) stackTestDriver23);
        experiment.drivers.StackTestDriver stackTestDriver39 = new experiment.drivers.StackTestDriver();
        stackTestDriver39.clear();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = stackTestDriver39.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = stackTestDriver23.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = stackTestDriver7.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj46 = stackTestDriver7.pop();
        experiment.drivers.StackTestDriver stackTestDriver47 = new experiment.drivers.StackTestDriver();
        java.lang.Object obj49 = stackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Object obj50 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        java.lang.Object obj53 = stackTestDriver47.push((java.lang.Object) 100L);
        java.lang.Object obj55 = stackTestDriver47.push((java.lang.Object) false);
        java.lang.Object obj56 = stackTestDriver47.pop();
        stackTestDriver47.clear();
        stackTestDriver47.clear();
        java.lang.Object obj59 = stackTestDriver7.push((java.lang.Object) stackTestDriver47);
        java.lang.Class<?> wildcardClass60 = stackTestDriver7.getClass();
        java.lang.Object obj61 = stackTestDriver0.push((java.lang.Object) stackTestDriver7);
        java.lang.Object obj62 = stackTestDriver0.pop();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0.0f + "'", obj4, 0.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0.0d + "'", obj14, 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class java.lang.Object");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class java.lang.Object");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 100L + "'", obj53, 100L);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + false + "'", obj55, false);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + false + "'", obj56, false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }
}

