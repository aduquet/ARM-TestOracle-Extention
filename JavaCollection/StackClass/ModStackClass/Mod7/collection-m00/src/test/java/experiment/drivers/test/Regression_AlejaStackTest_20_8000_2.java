package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_AlejaStackTest_20_8000_2 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1001");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        java.lang.Object obj69 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = alejaStackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1.0f) + "'", obj69, (-1.0f));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1002");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push(obj14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver16.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj62 = alejaStackTestDriver31.pop();
        java.lang.Object obj63 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) 100);
        java.lang.Object obj71 = alejaStackTestDriver31.push(obj70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        java.lang.Object obj77 = alejaStackTestDriver31.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = alejaStackTestDriver0.push(obj76);
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100 + "'", obj14, 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100 + "'", obj71, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0 + "'", obj77, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0 + "'", obj79, 0);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1003");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver32.getClass();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) 0);
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 10.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver56.getClass();
        java.lang.Object obj60 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver51.clear();
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) 0.0f);
        java.lang.Object obj65 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = alejaStackTestDriver51.pop();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver22.push(obj68);
        alejaStackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0d + "'", obj39, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0 + "'", obj55, 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Byte");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1004");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1005");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 0);
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) 10.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj71 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj72 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj73 = alejaStackTestDriver46.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0 + "'", obj67, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 10.0f + "'", obj69, 10.0f);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1006");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj43 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        alejaStackTestDriver36.clear();
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver36.getClass();
        java.lang.Object obj46 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1007");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj17 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver24.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 10 + "'", obj16, 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10 + "'", obj17, 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1008");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj52 = alejaStackTestDriver34.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj61 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1009");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass19 = alejaStackTestDriver16.getClass();
        java.lang.Object obj20 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver11.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver34.getClass();
        java.lang.Object obj38 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj39 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass37);
        java.lang.Object obj40 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) 0);
        java.lang.Object obj48 = alejaStackTestDriver42.push((java.lang.Object) 10.0f);
        java.lang.Object obj50 = alejaStackTestDriver42.push((java.lang.Object) 1L);
        java.lang.Object obj51 = alejaStackTestDriver42.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) (-1L));
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver68.clear();
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver68.getClass();
        java.lang.Object obj80 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver87.getClass();
        java.lang.Object obj91 = alejaStackTestDriver82.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj93 = alejaStackTestDriver82.pop();
        java.lang.Object obj94 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj95 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver42);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10.0f + "'", obj10, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0 + "'", obj33, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10.0f + "'", obj48, 10.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1L + "'", obj50, 1L);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1L + "'", obj51, 1L);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (-1.0f) + "'", obj78, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0 + "'", obj86, 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) 10 + "'", obj89, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1010");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) (-1L));
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj46 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver39.clear();
        java.lang.Object obj49 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        java.lang.Object obj50 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver53.getClass();
        java.lang.Object obj67 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj70 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj71 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1L) + "'", obj37, (-1L));
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1.0f) + "'", obj49, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0f) + "'", obj50, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1011");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) 0);
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Object obj34 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver47.getClass();
        java.lang.Object obj51 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass50);
        alejaStackTestDriver42.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj71 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj74 = alejaStackTestDriver55.push((java.lang.Object) "hi!");
        java.lang.Object obj75 = alejaStackTestDriver39.push(obj74);
        alejaStackTestDriver39.clear();
        java.lang.Object obj77 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver39);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0.0f + "'", obj54, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "hi!" + "'", obj74, "hi!");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "hi!" + "'", obj75, "hi!");
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1012");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) (-1L));
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver38.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass49);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1013");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 10.0f);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj44 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1014");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver64.getClass();
        java.lang.Object obj68 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver59.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver82.getClass();
        java.lang.Object obj86 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj89 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver41.clear();
        java.lang.Object obj91 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = alejaStackTestDriver41.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0 + "'", obj63, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0 + "'", obj81, 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1015");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        java.lang.Object obj33 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) (-1L));
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        java.lang.Object obj51 = alejaStackTestDriver41.push((java.lang.Object) (-1.0f));
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) 0);
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) 1L);
        alejaStackTestDriver54.clear();
        java.lang.Object obj64 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj65 = alejaStackTestDriver13.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1L) + "'", obj39, (-1L));
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1.0f) + "'", obj51, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0.0f + "'", obj53, 0.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1L + "'", obj62, 1L);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1016");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1017");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj83 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver66);
        alejaStackTestDriver35.clear();
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver35.getClass();
        java.lang.Object obj86 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1018");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver49.getClass();
        java.lang.Object obj64 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1019");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1020");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj60 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj61 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1021");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 10.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver7.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj53 = alejaStackTestDriver45.pop();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1022");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        java.lang.Object obj11 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver24.getClass();
        java.lang.Object obj36 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1L) + "'", obj11, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1023");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass16);
        alejaStackTestDriver8.clear();
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) 0.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) (-1L));
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver44);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) 0);
        alejaStackTestDriver55.clear();
        java.lang.Object obj61 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj63 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver8.clear();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 100 + "'", obj7, 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (-1L) + "'", obj42, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1024");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj40 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass38);
        java.lang.Object obj41 = alejaStackTestDriver26.pop();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver0.push(obj41);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 0 + "'", obj28, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1025");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver50.clear();
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj82 = alejaStackTestDriver63.push((java.lang.Object) "hi!");
        java.lang.Object obj83 = alejaStackTestDriver47.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj85 = alejaStackTestDriver47.pop();
        java.lang.Object obj86 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + "hi!" + "'", obj85, "hi!");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1026");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver21.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = alejaStackTestDriver21.push(obj59);
        java.lang.Object obj62 = alejaStackTestDriver21.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1027");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        alejaStackTestDriver38.clear();
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 0.0f);
        java.lang.Object obj52 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver38.pop();
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1028");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) 0.0f);
        java.lang.Object obj54 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver40.getClass();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0.0f + "'", obj52, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1029");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass22 = alejaStackTestDriver19.getClass();
        java.lang.Object obj23 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver14.clear();
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj46 = alejaStackTestDriver27.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 100L);
        alejaStackTestDriver47.clear();
        java.lang.Object obj53 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj56 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0 + "'", obj18, 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + "hi!" + "'", obj46, "hi!");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 100L + "'", obj51, 100L);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1030");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1031");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 10.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver7.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver7.push(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1032");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        java.lang.Object obj54 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        java.lang.Object obj60 = alejaStackTestDriver55.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) (-1L));
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj83 = alejaStackTestDriver73.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver73.getClass();
        java.lang.Object obj85 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj87 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj88 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver49.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = alejaStackTestDriver49.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1L) + "'", obj54, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1.0f) + "'", obj83, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1033");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver1.push(obj38);
        java.lang.Object obj41 = alejaStackTestDriver1.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 0 + "'", obj41, (byte) 0);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1034");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1035");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) 0L);
        java.lang.Object obj45 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver56.getClass();
        java.lang.Object obj60 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver64.clear();
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver87.getClass();
        java.lang.Object obj91 = alejaStackTestDriver82.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj94 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver46.clear();
        java.lang.Object obj96 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver39.getClass();
        java.lang.Object obj98 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 0 + "'", obj41, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0L + "'", obj44, 0L);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0L + "'", obj45, 0L);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0 + "'", obj55, 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0f + "'", obj76, 0.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0 + "'", obj86, 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) 10 + "'", obj89, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1036");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) (-1L));
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver75.pop();
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver85.getClass();
        java.lang.Object obj89 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass88);
        java.lang.Object obj90 = alejaStackTestDriver75.push((java.lang.Object) wildcardClass88);
        alejaStackTestDriver75.clear();
        java.lang.Object obj93 = alejaStackTestDriver75.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver75.clear();
        java.lang.Object obj95 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) -1 + "'", obj74, (short) -1);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + (-1.0f) + "'", obj93, (-1.0f));
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1037");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj77 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1038");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver21.push(obj60);
        java.lang.Object obj62 = alejaStackTestDriver0.push(obj61);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1039");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver28.getClass();
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj36 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 0 + "'", obj30, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1040");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) 0);
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Object obj34 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) (-1L));
        java.lang.Object obj45 = alejaStackTestDriver40.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) (-1L));
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver58.getClass();
        java.lang.Object obj70 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj72 = alejaStackTestDriver40.pop();
        java.lang.Object obj73 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver11.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (-1L) + "'", obj44, (-1L));
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1L) + "'", obj45, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1L) + "'", obj50, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1041");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (byte) 0);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100.0f + "'", obj31, 100.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 0 + "'", obj35, (byte) 0);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1042");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1043");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) (-1L));
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj33 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver26.getClass();
        java.lang.Object obj38 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj51 = alejaStackTestDriver40.pop();
        java.lang.Object obj52 = alejaStackTestDriver40.pop();
        java.lang.Object obj53 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1.0f) + "'", obj36, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1044");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) (-1L));
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        java.lang.Object obj50 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver41.getClass();
        java.lang.Object obj54 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1L) + "'", obj39, (-1L));
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1045");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        java.lang.Object obj68 = alejaStackTestDriver62.push((java.lang.Object) 10.0f);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver71.clear();
        java.lang.Object obj83 = alejaStackTestDriver71.push((java.lang.Object) 0.0f);
        java.lang.Object obj85 = alejaStackTestDriver71.push((java.lang.Object) (byte) 100);
        java.lang.Object obj86 = alejaStackTestDriver71.pop();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj90 = alejaStackTestDriver62.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        java.lang.Object obj93 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver62.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 10.0f + "'", obj68, 10.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0.0f + "'", obj83, 0.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + (byte) -1 + "'", obj90, (byte) -1);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1046");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) (-1L));
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj83 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver70.clear();
        alejaStackTestDriver70.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1047");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver71.getClass();
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver15.push(obj77);
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1048");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        java.lang.Object obj54 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        java.lang.Object obj60 = alejaStackTestDriver55.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) (-1L));
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj83 = alejaStackTestDriver73.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver73.getClass();
        java.lang.Object obj85 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj87 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj88 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1L) + "'", obj54, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1L) + "'", obj60, (-1L));
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1L) + "'", obj65, (-1L));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1.0f) + "'", obj83, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1049");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver10.clear();
        java.lang.Object obj22 = alejaStackTestDriver10.push((java.lang.Object) 0.0f);
        java.lang.Object obj24 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj25 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) 10.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj35 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = alejaStackTestDriver27.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 10.0f + "'", obj33, 10.0f);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1050");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 10.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver7.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver7.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        alejaStackTestDriver39.clear();
        java.lang.Object obj43 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver39);
        alejaStackTestDriver39.clear();
        java.lang.Object obj45 = alejaStackTestDriver1.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1051");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        java.lang.Object obj19 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1.0f) + "'", obj19, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1052");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        java.lang.Object obj11 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver24.getClass();
        java.lang.Object obj36 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver12.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1L) + "'", obj11, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1053");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj43 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj44 = alejaStackTestDriver30.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver50.getClass();
        java.lang.Object obj54 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver45.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver68.getClass();
        java.lang.Object obj72 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj75 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj76 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver45.getClass();
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0 + "'", obj49, 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0.0f + "'", obj57, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0 + "'", obj67, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1054");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push(obj14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver16.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj62 = alejaStackTestDriver31.pop();
        java.lang.Object obj63 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) 100);
        java.lang.Object obj71 = alejaStackTestDriver31.push(obj70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        java.lang.Object obj77 = alejaStackTestDriver31.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = alejaStackTestDriver0.push(obj76);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100 + "'", obj14, 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100 + "'", obj71, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0 + "'", obj77, 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0 + "'", obj79, 0);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1055");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) (-1L));
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj79 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj80 = alejaStackTestDriver49.pop();
        java.lang.Object obj81 = alejaStackTestDriver49.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) 0);
        java.lang.Object obj88 = alejaStackTestDriver82.push((java.lang.Object) 100);
        java.lang.Object obj89 = alejaStackTestDriver49.push(obj88);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        java.lang.Object obj94 = alejaStackTestDriver90.push((java.lang.Object) 0);
        java.lang.Object obj95 = alejaStackTestDriver49.push(obj94);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver49.getClass();
        java.lang.Object obj97 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1L) + "'", obj38, (-1L));
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0 + "'", obj86, 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 100 + "'", obj88, 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 100 + "'", obj89, 100);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 0 + "'", obj94, 0);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 0 + "'", obj95, 0);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1056");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1057");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) 0.0f);
        java.lang.Object obj70 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver6.push(obj74);
        java.lang.Object obj77 = alejaStackTestDriver6.pop();
        java.lang.Object obj79 = alejaStackTestDriver6.push((java.lang.Object) 0L);
        java.lang.Object obj80 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0f + "'", obj68, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0L + "'", obj79, 0L);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0L + "'", obj80, 0L);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1058");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 0 + "'", obj19, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 0 + "'", obj20, (byte) 0);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1059");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj32 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1060");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
        java.lang.Object obj35 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1061");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) (-1L));
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver65.pop();
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj71 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver64.clear();
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        alejaStackTestDriver64.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj78 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (-1L) + "'", obj62, (-1L));
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1062");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj17 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver24.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = alejaStackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 10 + "'", obj16, 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10 + "'", obj17, 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1063");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        java.lang.Object obj42 = alejaStackTestDriver6.push(obj41);
        java.lang.Object obj43 = alejaStackTestDriver6.pop();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj45 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj77 = alejaStackTestDriver59.push((java.lang.Object) true);
        java.lang.Object obj78 = alejaStackTestDriver59.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1064");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        alejaStackTestDriver38.clear();
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 0.0f);
        java.lang.Object obj52 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver38.pop();
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1065");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        java.lang.Object obj9 = alejaStackTestDriver3.push((java.lang.Object) 10.0f);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver12.clear();
        java.lang.Object obj24 = alejaStackTestDriver12.push((java.lang.Object) 0.0f);
        java.lang.Object obj26 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver62.getClass();
        java.lang.Object obj80 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1066");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        java.lang.Object obj37 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 1L);
        java.lang.Object obj40 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) (-1L));
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj64 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver57.getClass();
        java.lang.Object obj69 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass68);
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj82 = alejaStackTestDriver71.pop();
        java.lang.Object obj83 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 10.0f + "'", obj37, 10.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1L + "'", obj39, 1L);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1L + "'", obj40, 1L);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (-1L) + "'", obj55, (-1L));
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (-1.0f) + "'", obj67, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1067");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) (-1L));
        java.lang.Object obj47 = alejaStackTestDriver42.pop();
        java.lang.Object obj48 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver42);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1L) + "'", obj46, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_2.test1068");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Byte");
    }
}

