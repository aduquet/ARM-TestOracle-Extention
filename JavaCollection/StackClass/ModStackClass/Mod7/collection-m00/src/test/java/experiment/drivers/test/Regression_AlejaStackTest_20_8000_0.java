package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_AlejaStackTest_20_8000_0 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0001");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj1 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0002");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Class<?> wildcardClass1 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0003");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0004");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0005");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0006");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0007");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0008");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0009");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0010");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0011");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver0.push(obj17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0012");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0013");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0014");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0015");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0016");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0017");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0018");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0019");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0020");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0021");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver6.push(obj17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0022");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0023");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0024");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0025");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0026");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0027");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass6 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0028");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.push(obj3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0029");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        java.lang.Object obj28 = alejaStackTestDriver19.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push(obj28);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0030");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0031");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0032");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass19 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0033");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0034");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0035");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0036");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0037");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0038");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0039");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0040");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0041");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0042");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0043");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass90 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0044");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = alejaStackTestDriver53.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0045");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0046");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = alejaStackTestDriver34.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0047");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0048");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0049");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0050");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        java.lang.Object obj16 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0051");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0052");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0053");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0054");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0.0f + "'", obj13, 0.0f);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0055");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0056");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0057");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        java.lang.Object obj31 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj48 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver34.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0058");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0059");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0060");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0061");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0062");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0063");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0064");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0065");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0066");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0067");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver6.push(obj47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0068");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0069");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0070");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0071");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj30 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0072");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0073");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0074");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0075");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0076");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0 + "'", obj5, 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0077");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0078");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0079");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0080");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0081");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0082");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0083");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver71.getClass();
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver15.push(obj77);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0084");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 100L);
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 0 + "'", obj35, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0085");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0086");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0087");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) (-1L));
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver35.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver50.clear();
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj80 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj81 = alejaStackTestDriver50.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver82.push((java.lang.Object) (-1L));
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver88.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj95 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver88);
        alejaStackTestDriver88.clear();
        alejaStackTestDriver88.clear();
        java.lang.Object obj98 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj99 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver88);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1L) + "'", obj39, (-1L));
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (-1L) + "'", obj86, (-1L));
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0088");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0089");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0090");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0091");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) (-1.0d));
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (-1.0d) + "'", obj40, (-1.0d));
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0092");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0093");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0094");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver50.clear();
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj82 = alejaStackTestDriver63.push((java.lang.Object) "hi!");
        java.lang.Object obj83 = alejaStackTestDriver47.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0095");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (byte) 0);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 100L);
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 0 + "'", obj35, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100L + "'", obj37, 100L);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0096");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0097");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0098");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        java.lang.Object obj4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = alejaStackTestDriver0.push(obj4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0099");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0100");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        alejaStackTestDriver68.clear();
        java.lang.Object obj80 = alejaStackTestDriver68.push((java.lang.Object) 0.0f);
        java.lang.Object obj82 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = alejaStackTestDriver68.pop();
        java.lang.Object obj84 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj85 = alejaStackTestDriver53.push(obj84);
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0.0f + "'", obj80, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0101");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0102");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Object obj35 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver24.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0103");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0104");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0105");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + "hi!" + "'", obj38, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0106");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0107");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0108");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0109");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Object obj35 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0110");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) (-1L));
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver38.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass49);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0111");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0112");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0113");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0114");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass4 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0115");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) (-1L));
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass73 = alejaStackTestDriver59.getClass();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0116");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0117");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0118");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.push(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0119");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 10 + "'", obj16, 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0120");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0121");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver64.getClass();
        java.lang.Object obj68 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver59.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver82.getClass();
        java.lang.Object obj86 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj89 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver41.clear();
        java.lang.Object obj91 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0 + "'", obj63, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0 + "'", obj81, 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0122");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = alejaStackTestDriver7.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0123");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0124");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj50 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver59.getClass();
        java.lang.Object obj63 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver54.clear();
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver77.getClass();
        java.lang.Object obj81 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        java.lang.Object obj86 = alejaStackTestDriver67.push((java.lang.Object) "hi!");
        java.lang.Object obj87 = alejaStackTestDriver51.push(obj86);
        java.lang.Object obj88 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver0.push(obj88);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0f + "'", obj66, 0.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + "hi!" + "'", obj86, "hi!");
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + "hi!" + "'", obj87, "hi!");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0125");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0126");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) (-1L));
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver38.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass49);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0127");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj49 = alejaStackTestDriver31.pop();
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0128");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0129");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0130");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0131");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0132");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0133");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0134");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        java.lang.Object obj31 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj48 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver34.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0135");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0136");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0137");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj50 = alejaStackTestDriver31.push((java.lang.Object) false);
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0138");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0139");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0140");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj14 = alejaStackTestDriver7.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100L + "'", obj14, 100L);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0141");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0142");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        java.lang.Object obj66 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver69.getClass();
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0143");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0144");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver4.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver4.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0145");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0146");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver16.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj62 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) (-1L));
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj76 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        java.lang.Object obj78 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        java.lang.Object obj86 = alejaStackTestDriver80.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) (byte) 0);
        java.lang.Object obj91 = alejaStackTestDriver87.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver87.getClass();
        java.lang.Object obj93 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver31.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (-1L) + "'", obj67, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100 + "'", obj86, 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 0 + "'", obj89, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0147");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0148");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0149");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0150");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0151");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        java.lang.Object obj69 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1.0f) + "'", obj69, (-1.0f));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0152");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0153");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0154");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) 0.0f);
        java.lang.Object obj70 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver6.push(obj74);
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0f + "'", obj68, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0155");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver0.push(obj37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0156");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0157");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0158");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        java.lang.Object obj67 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver15.push(obj67);
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0159");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver4.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0160");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0161");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0162");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) (-1L));
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass73 = alejaStackTestDriver59.getClass();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0163");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) (-1L));
        alejaStackTestDriver46.clear();
        java.lang.Object obj53 = alejaStackTestDriver46.push((java.lang.Object) 1.0d);
        java.lang.Object obj54 = alejaStackTestDriver0.push(obj53);
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1L) + "'", obj50, (-1L));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0d + "'", obj53, 1.0d);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0d + "'", obj54, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0164");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 10.0f);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = alejaStackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0165");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass91 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0166");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0167");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        alejaStackTestDriver65.clear();
        java.lang.Object obj73 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver65.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0168");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj52 = alejaStackTestDriver34.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj61 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0169");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) (-1L));
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj35 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver28.clear();
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver28.getClass();
        java.lang.Object obj40 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver47.getClass();
        java.lang.Object obj51 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj53 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1L) + "'", obj26, (-1L));
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1.0f) + "'", obj38, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0170");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver20.getClass();
        java.lang.Object obj34 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0171");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0d + "'", obj8, 1.0d);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0172");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        java.lang.Object obj16 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0173");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0174");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0175");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) (-1.0d));
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1.0d) + "'", obj54, (-1.0d));
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0176");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver4.clear();
        java.lang.Object obj22 = alejaStackTestDriver4.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver4.clear();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0177");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 10.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver74.clear();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj93 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0178");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        java.lang.Object obj66 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver69.getClass();
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj85 = alejaStackTestDriver55.pop();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0179");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj77 = alejaStackTestDriver22.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0180");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0181");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0182");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0183");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0184");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        java.lang.Object obj31 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj48 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver34.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver4.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0185");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0186");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0187");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj49 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0188");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) (-1L));
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj73 = alejaStackTestDriver63.push((java.lang.Object) (-1.0f));
        java.lang.Object obj74 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        java.lang.Object obj76 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj77 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj78 = alejaStackTestDriver0.push(obj77);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1.0f) + "'", obj73, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0189");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0190");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0191");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver50.getClass();
        java.lang.Object obj54 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass53);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver63.getClass();
        java.lang.Object obj67 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass66);
        alejaStackTestDriver58.clear();
        java.lang.Object obj70 = alejaStackTestDriver58.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver71.pop();
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver81.getClass();
        java.lang.Object obj85 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj87 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj88 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj93 = alejaStackTestDriver89.push((java.lang.Object) 0);
        java.lang.Object obj95 = alejaStackTestDriver89.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass96 = obj95.getClass();
        java.lang.Object obj97 = alejaStackTestDriver40.push(obj95);
        java.lang.Object obj98 = alejaStackTestDriver22.push(obj95);
        java.lang.Object obj99 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0 + "'", obj49, 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0.0f + "'", obj70, 0.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 0 + "'", obj93, 0);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 10.0f + "'", obj95, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 10.0f + "'", obj97, 10.0f);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 10.0f + "'", obj98, 10.0f);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0192");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) (-1L));
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj83 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj84 = alejaStackTestDriver53.pop();
        java.lang.Object obj85 = alejaStackTestDriver53.pop();
        java.lang.Object obj86 = alejaStackTestDriver0.push(obj85);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (-1L) + "'", obj42, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0.0f + "'", obj85, 0.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0193");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0194");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver4.clear();
        java.lang.Object obj22 = alejaStackTestDriver4.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver4.clear();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0195");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0196");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver21.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0197");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        alejaStackTestDriver32.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0198");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        alejaStackTestDriver68.clear();
        java.lang.Object obj80 = alejaStackTestDriver68.push((java.lang.Object) 0.0f);
        java.lang.Object obj82 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = alejaStackTestDriver68.pop();
        java.lang.Object obj84 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj85 = alejaStackTestDriver53.push(obj84);
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0.0f + "'", obj80, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0199");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0200");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) 0.0f);
        java.lang.Object obj70 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver6.push(obj74);
        java.lang.Object obj77 = alejaStackTestDriver6.pop();
        java.lang.Object obj79 = alejaStackTestDriver6.push((java.lang.Object) 0L);
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0f + "'", obj68, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0L + "'", obj79, 0L);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0201");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0202");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver21.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0203");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver20.getClass();
        java.lang.Object obj34 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0204");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver34.getClass();
        java.lang.Object obj38 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver29.clear();
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj59 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj60 = alejaStackTestDriver14.pop();
        java.lang.Object obj61 = alejaStackTestDriver0.push(obj60);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0 + "'", obj33, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0.0f + "'", obj41, 0.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0205");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj79 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        java.lang.Object obj86 = alejaStackTestDriver80.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver31.push(obj86);
        java.lang.Object obj89 = alejaStackTestDriver13.push(obj86);
        java.lang.Class<?> wildcardClass90 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 10.0f + "'", obj86, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 10.0f + "'", obj88, 10.0f);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0206");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) (-1L));
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver38.getClass();
        java.lang.Object obj50 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass49);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1L) + "'", obj30, (-1L));
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0207");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = alejaStackTestDriver67.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0208");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Object obj68 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0209");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0210");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver54.getClass();
        java.lang.Object obj61 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0211");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0212");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0213");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        alejaStackTestDriver65.clear();
        java.lang.Object obj73 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver16.pop();
        java.lang.Object obj75 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0214");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0215");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj49 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0216");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj63 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj64 = alejaStackTestDriver24.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 10.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver74.clear();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver65.pop();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = alejaStackTestDriver24.push(obj92);
        java.lang.Object obj95 = alejaStackTestDriver24.pop();
        java.lang.Object obj97 = alejaStackTestDriver24.push((java.lang.Object) 0L);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 0L + "'", obj97, 0L);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 0L + "'", obj98, 0L);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0217");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj63 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj64 = alejaStackTestDriver24.push(obj63);
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0218");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) 0.0f);
        java.lang.Object obj70 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver6.push(obj74);
        java.lang.Object obj77 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0f + "'", obj68, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0219");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) (-1L));
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj38 = alejaStackTestDriver24.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver39.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj70 = alejaStackTestDriver39.pop();
        java.lang.Object obj71 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        java.lang.Object obj78 = alejaStackTestDriver72.push((java.lang.Object) 100);
        java.lang.Object obj79 = alejaStackTestDriver39.push(obj78);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        java.lang.Object obj85 = alejaStackTestDriver39.push(obj84);
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Object obj87 = alejaStackTestDriver0.push(obj84);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1L) + "'", obj28, (-1L));
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100 + "'", obj78, 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100 + "'", obj79, 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0 + "'", obj85, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0 + "'", obj87, 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0 + "'", obj88, 0);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0220");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Byte");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0221");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 10.0f);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0222");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver49.getClass();
        java.lang.Object obj64 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver49.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0223");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass16);
        alejaStackTestDriver8.clear();
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj37 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0224");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0225");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0226");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0227");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) (-1L));
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj73 = alejaStackTestDriver63.push((java.lang.Object) (-1.0f));
        java.lang.Object obj74 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        java.lang.Object obj76 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj77 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj78 = alejaStackTestDriver0.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver0.pop();
        java.lang.Object obj80 = alejaStackTestDriver0.pop();
        java.lang.Object obj81 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1.0f) + "'", obj73, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1L) + "'", obj80, (-1L));
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0228");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
        alejaStackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0229");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver29.getClass();
        java.lang.Object obj41 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj54 = alejaStackTestDriver43.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver66.getClass();
        java.lang.Object obj70 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass69);
        alejaStackTestDriver56.clear();
        java.lang.Object obj74 = alejaStackTestDriver56.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver75.push((java.lang.Object) 0);
        java.lang.Object obj81 = alejaStackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) 1L);
        java.lang.Object obj84 = alejaStackTestDriver75.pop();
        java.lang.Object obj85 = alejaStackTestDriver56.push(obj84);
        java.lang.Object obj86 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0 + "'", obj79, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1L + "'", obj85, 1L);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0230");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0231");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver30.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver30.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0232");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass3 = obj2.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0233");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) (-1L));
        alejaStackTestDriver9.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver15.clear();
        java.lang.Object obj25 = alejaStackTestDriver15.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj47 = alejaStackTestDriver32.pop();
        java.lang.Object obj48 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj80 = alejaStackTestDriver62.push((java.lang.Object) true);
        java.lang.Object obj81 = alejaStackTestDriver62.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj90 = alejaStackTestDriver62.pop();
        java.lang.Object obj91 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj92 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj93 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1L) + "'", obj13, (-1L));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1.0f) + "'", obj25, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + true + "'", obj80, true);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + true + "'", obj81, true);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0234");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0235");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver56.clear();
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) 0.0f);
        java.lang.Object obj70 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj71 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver47.pop();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = alejaStackTestDriver6.push(obj74);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0.0f + "'", obj68, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0236");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) (-1L));
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj75 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (byte) 0);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj80 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj81 = alejaStackTestDriver0.push(obj80);
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 0 + "'", obj78, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 0 + "'", obj79, (byte) 0);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0237");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj51 = alejaStackTestDriver21.pop();
        java.lang.Object obj52 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0238");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver50.clear();
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj82 = alejaStackTestDriver63.push((java.lang.Object) "hi!");
        java.lang.Object obj83 = alejaStackTestDriver47.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0239");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) (-1L));
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj19 = alejaStackTestDriver5.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj50 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj51 = alejaStackTestDriver5.pop();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver5.getClass();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0240");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) (-1L));
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj83 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0241");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        alejaStackTestDriver37.clear();
        java.lang.Object obj49 = alejaStackTestDriver37.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver60.getClass();
        java.lang.Object obj64 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj66 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj67 = alejaStackTestDriver27.push(obj66);
        java.lang.Object obj68 = alejaStackTestDriver27.pop();
        java.lang.Object obj69 = alejaStackTestDriver0.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0.0f + "'", obj49, 0.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0242");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0243");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        java.lang.Object obj33 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) 0L);
        java.lang.Object obj41 = alejaStackTestDriver35.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass55);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        alejaStackTestDriver60.clear();
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        alejaStackTestDriver73.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver78.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver83.getClass();
        java.lang.Object obj87 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj88 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass86);
        java.lang.Object obj89 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj90 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver42.clear();
        java.lang.Object obj92 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver35.getClass();
        java.lang.Object obj94 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver35);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "hi!" + "'", obj33, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 0 + "'", obj37, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0L + "'", obj40, 0L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0L + "'", obj41, 0L);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0.0f + "'", obj72, 0.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 0 + "'", obj82, 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0244");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0245");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver28.getClass();
        java.lang.Object obj32 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver23.clear();
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) 0.0f);
        java.lang.Object obj37 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = alejaStackTestDriver23.pop();
        java.lang.Object obj39 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver63.getClass();
        java.lang.Object obj67 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj71 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj72 = alejaStackTestDriver53.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj81 = alejaStackTestDriver53.pop();
        java.lang.Object obj82 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj83 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0.0f + "'", obj52, 0.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0246");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass74);
        alejaStackTestDriver66.clear();
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver89.getClass();
        java.lang.Object obj93 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj95 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj96 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj97 = alejaStackTestDriver48.pop();
        java.lang.Object obj98 = alejaStackTestDriver6.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0.0f + "'", obj78, 0.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0 + "'", obj88, 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0247");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj63 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj64 = alejaStackTestDriver24.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 10.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver74.clear();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver65.pop();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        java.lang.Object obj94 = alejaStackTestDriver24.push(obj92);
        java.lang.Object obj95 = alejaStackTestDriver24.pop();
        java.lang.Object obj97 = alejaStackTestDriver24.push((java.lang.Object) 0L);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        java.lang.Object obj99 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj97 + "' != '" + 0L + "'", obj97, 0L);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 0L + "'", obj98, 0L);
        org.junit.Assert.assertEquals("'" + obj99 + "' != '" + 0L + "'", obj99, 0L);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0248");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0249");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = alejaStackTestDriver27.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0250");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0251");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        java.lang.Object obj65 = alejaStackTestDriver16.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver16.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class java.lang.Byte");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0252");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver39.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver29.push(obj68);
        java.lang.Object obj70 = alejaStackTestDriver0.push(obj68);
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0253");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0254");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver43.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) 0.0f);
        java.lang.Object obj57 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = alejaStackTestDriver43.pop();
        java.lang.Object obj59 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver43.getClass();
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0255");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push(obj14);
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100 + "'", obj14, 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0256");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0257");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj38 = alejaStackTestDriver23.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        java.lang.Object obj57 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver39.clear();
        java.lang.Object obj59 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        java.lang.Object obj66 = alejaStackTestDriver60.push((java.lang.Object) 10.0f);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Object obj83 = alejaStackTestDriver69.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = alejaStackTestDriver69.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver39.push(obj86);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver88.push((java.lang.Object) alejaStackTestDriver89);
        alejaStackTestDriver88.clear();
        java.lang.Object obj96 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj97 = alejaStackTestDriver0.push(obj96);
        java.lang.Class<?> wildcardClass98 = obj96.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) -1 + "'", obj38, (short) -1);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0258");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0259");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0260");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver26.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0261");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0262");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj75 = alejaStackTestDriver58.pop();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0263");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        java.lang.Object obj66 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver69.getClass();
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0264");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Object obj32 = alejaStackTestDriver13.push((java.lang.Object) "hi!");
        java.lang.Object obj33 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + "hi!" + "'", obj32, "hi!");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "hi!" + "'", obj33, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0265");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0266");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Object obj68 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0267");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0268");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0269");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) 0L);
        java.lang.Object obj11 = alejaStackTestDriver5.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver22.getClass();
        java.lang.Object obj26 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver12.clear();
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj60 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver12.clear();
        java.lang.Object obj62 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver5.getClass();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Object obj65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver0.push(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (byte) 0 + "'", obj7, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0L + "'", obj10, 0L);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0L + "'", obj11, 0L);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0270");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0271");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver4.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver52.pop();
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0272");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
        java.lang.Object obj35 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0273");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0274");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj62 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj63 = alejaStackTestDriver45.pop();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver45.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0275");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Object obj68 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0276");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Object obj35 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0f) + "'", obj35, (-1.0f));
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0277");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        alejaStackTestDriver68.clear();
        java.lang.Object obj80 = alejaStackTestDriver68.push((java.lang.Object) 0.0f);
        java.lang.Object obj82 = alejaStackTestDriver68.push((java.lang.Object) (byte) 100);
        java.lang.Object obj83 = alejaStackTestDriver68.pop();
        java.lang.Object obj84 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj85 = alejaStackTestDriver53.push(obj84);
        alejaStackTestDriver53.clear();
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0.0f + "'", obj80, 0.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0278");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver29.getClass();
        java.lang.Object obj41 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj54 = alejaStackTestDriver43.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver66.getClass();
        java.lang.Object obj70 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass69);
        alejaStackTestDriver56.clear();
        java.lang.Object obj74 = alejaStackTestDriver56.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver75.push((java.lang.Object) 0);
        java.lang.Object obj81 = alejaStackTestDriver75.push((java.lang.Object) 10.0f);
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) 1L);
        java.lang.Object obj84 = alejaStackTestDriver75.pop();
        java.lang.Object obj85 = alejaStackTestDriver56.push(obj84);
        java.lang.Object obj86 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver56.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0 + "'", obj79, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 10.0f + "'", obj81, 10.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1L + "'", obj84, 1L);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1L + "'", obj85, 1L);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0279");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver29.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0280");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver21.push(obj60);
        java.lang.Object obj62 = alejaStackTestDriver0.push(obj61);
        java.lang.Object obj63 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0281");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver37.getClass();
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) (-1L));
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass74);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) (-1L));
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        java.lang.Object obj89 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Object obj90 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver83.clear();
        java.lang.Object obj92 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj93 = alejaStackTestDriver52.push(obj92);
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass95 = alejaStackTestDriver52.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1L) + "'", obj50, (-1L));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (-1L) + "'", obj81, (-1L));
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0282");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0283");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        java.lang.Object obj20 = alejaStackTestDriver15.pop();
        java.lang.Object obj21 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) 0);
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) 10.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        java.lang.Object obj45 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj46 = alejaStackTestDriver31.pop();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver22.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Object obj53 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver22.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0 + "'", obj26, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 10.0f + "'", obj28, 10.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) -1 + "'", obj50, (byte) -1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0284");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver0.push(obj39);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + "hi!" + "'", obj37, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0285");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver70.push((java.lang.Object) (-1L));
        alejaStackTestDriver70.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver77.pop();
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj83 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1L) + "'", obj74, (-1L));
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0286");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass74);
        alejaStackTestDriver66.clear();
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver89.getClass();
        java.lang.Object obj93 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj95 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj96 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj97 = alejaStackTestDriver48.pop();
        java.lang.Object obj98 = alejaStackTestDriver6.push(obj97);
        alejaStackTestDriver6.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0.0f + "'", obj78, 0.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0 + "'", obj88, 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0287");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0288");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0289");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0290");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj63 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0291");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0292");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        java.lang.Object obj28 = alejaStackTestDriver19.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push(obj28);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10 + "'", obj31, 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0293");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        java.lang.Object obj42 = alejaStackTestDriver6.push(obj41);
        java.lang.Object obj43 = alejaStackTestDriver6.pop();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj45 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj77 = alejaStackTestDriver59.push((java.lang.Object) true);
        java.lang.Object obj78 = alejaStackTestDriver59.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0294");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver1.push(obj38);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver1.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0295");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0296");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver64.getClass();
        java.lang.Object obj68 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver59.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver82.getClass();
        java.lang.Object obj86 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj89 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver41.clear();
        java.lang.Object obj91 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver41.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0 + "'", obj63, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0 + "'", obj81, 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0297");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0298");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0299");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver8.getClass();
        java.lang.Object obj12 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass11);
        alejaStackTestDriver3.clear();
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj32 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj35 = alejaStackTestDriver16.push((java.lang.Object) "hi!");
        java.lang.Object obj36 = alejaStackTestDriver0.push(obj35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver37.getClass();
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) (-1L));
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver61.pop();
        alejaStackTestDriver61.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass74);
        java.lang.Object obj76 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass74);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) (-1L));
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver84.pop();
        alejaStackTestDriver84.clear();
        java.lang.Object obj89 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Object obj90 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver83.clear();
        java.lang.Object obj92 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj93 = alejaStackTestDriver52.push(obj92);
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj95 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0.0f + "'", obj15, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + "hi!" + "'", obj35, "hi!");
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + "hi!" + "'", obj36, "hi!");
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1L) + "'", obj50, (-1L));
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (-1L) + "'", obj81, (-1L));
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0300");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        alejaStackTestDriver50.clear();
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj79 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj82 = alejaStackTestDriver63.push((java.lang.Object) "hi!");
        java.lang.Object obj83 = alejaStackTestDriver47.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj85 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + "hi!" + "'", obj82, "hi!");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + "hi!" + "'", obj83, "hi!");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0301");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0302");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) (-1L));
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj19 = alejaStackTestDriver5.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj50 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj51 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver78.getClass();
        java.lang.Object obj82 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass81);
        alejaStackTestDriver73.clear();
        java.lang.Object obj85 = alejaStackTestDriver73.push((java.lang.Object) 0.0f);
        java.lang.Object obj87 = alejaStackTestDriver73.push((java.lang.Object) (byte) 100);
        java.lang.Object obj88 = alejaStackTestDriver73.pop();
        java.lang.Object obj89 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj90 = alejaStackTestDriver58.push(obj89);
        alejaStackTestDriver58.clear();
        java.lang.Object obj92 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = alejaStackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0 + "'", obj77, 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0.0f + "'", obj85, 0.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0303");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj77 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0304");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        alejaStackTestDriver53.clear();
        java.lang.Object obj63 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0305");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) (-1L));
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj73 = alejaStackTestDriver63.push((java.lang.Object) (-1.0f));
        java.lang.Object obj74 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        java.lang.Object obj76 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj77 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) 0);
        java.lang.Object obj85 = alejaStackTestDriver79.push((java.lang.Object) 10.0f);
        java.lang.Object obj87 = alejaStackTestDriver79.push((java.lang.Object) 1L);
        java.lang.Object obj88 = alejaStackTestDriver79.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        alejaStackTestDriver79.clear();
        java.lang.Object obj94 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver79);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1.0f) + "'", obj73, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0 + "'", obj83, 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 10.0f + "'", obj85, 10.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1L + "'", obj87, 1L);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1L + "'", obj88, 1L);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0306");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0307");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        java.lang.Object obj66 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver69.getClass();
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj85 = alejaStackTestDriver55.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = alejaStackTestDriver55.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0308");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass4 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0309");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        java.lang.Object obj11 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver24.getClass();
        java.lang.Object obj36 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver39.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver39.pop();
        java.lang.Object obj70 = alejaStackTestDriver12.push(obj69);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1L) + "'", obj11, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0310");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver27.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver15.getClass();
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) (-1L));
        java.lang.Object obj48 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver61.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver61.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj75 = alejaStackTestDriver43.pop();
        java.lang.Object obj76 = alejaStackTestDriver0.push(obj75);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1.0f) + "'", obj71, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0311");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver23.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0f) + "'", obj33, (-1.0f));
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0312");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) (-1L));
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj83 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj84 = alejaStackTestDriver53.pop();
        java.lang.Object obj85 = alejaStackTestDriver53.pop();
        java.lang.Object obj86 = alejaStackTestDriver0.push(obj85);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (-1L) + "'", obj42, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0.0f + "'", obj85, 0.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0313");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) 0);
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Object obj34 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver11.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0314");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver28.getClass();
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 0 + "'", obj30, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0315");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = alejaStackTestDriver13.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0316");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0317");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0318");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0319");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) (-1L));
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj75 = alejaStackTestDriver44.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) (-1L));
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj92 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver82.getClass();
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = alejaStackTestDriver82.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1L) + "'", obj80, (-1L));
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0320");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        java.lang.Object obj69 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        java.lang.Object obj80 = alejaStackTestDriver74.push((java.lang.Object) 10.0f);
        java.lang.Object obj82 = alejaStackTestDriver74.push((java.lang.Object) 1L);
        java.lang.Object obj83 = alejaStackTestDriver74.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        alejaStackTestDriver74.clear();
        java.lang.Object obj89 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj90 = alejaStackTestDriver22.pop();
        java.lang.Class<?> wildcardClass91 = alejaStackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1.0f) + "'", obj69, (-1.0f));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 10.0f + "'", obj80, 10.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1L + "'", obj82, 1L);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1L + "'", obj83, 1L);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0321");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver27.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver15.getClass();
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) (-1L));
        java.lang.Object obj48 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver61.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver61.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj75 = alejaStackTestDriver43.pop();
        java.lang.Object obj76 = alejaStackTestDriver0.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1.0f) + "'", obj71, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0322");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj43 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj44 = alejaStackTestDriver30.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver50.getClass();
        java.lang.Object obj54 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver45.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver68.getClass();
        java.lang.Object obj72 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj73 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass71);
        java.lang.Object obj74 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj75 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj76 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver45.getClass();
        java.lang.Object obj79 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0 + "'", obj49, 0);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0.0f + "'", obj57, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0 + "'", obj67, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0323");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Object obj68 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0324");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0325");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        java.lang.Object obj42 = alejaStackTestDriver6.push(obj41);
        java.lang.Object obj43 = alejaStackTestDriver6.pop();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj45 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0326");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        java.lang.Object obj49 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        alejaStackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 0.0f + "'", obj49, 0.0f);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0327");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        java.lang.Object obj54 = alejaStackTestDriver0.pop();
        java.lang.Object obj55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver0.push(obj55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + "hi!" + "'", obj54, "hi!");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0328");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0329");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass48);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver31.getClass();
        java.lang.Object obj53 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 0 + "'", obj33, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0330");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj20 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj51 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj52 = alejaStackTestDriver21.pop();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) 0);
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) 1L);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 10.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver74.clear();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj93 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1L + "'", obj62, 1L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0331");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) (-1L));
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass73 = alejaStackTestDriver59.getClass();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass73);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0332");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver18.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        alejaStackTestDriver33.clear();
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver56.getClass();
        java.lang.Object obj60 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj61 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass59);
        java.lang.Object obj62 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj63 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj64 = alejaStackTestDriver33.pop();
        java.lang.Object obj65 = alejaStackTestDriver33.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        java.lang.Object obj72 = alejaStackTestDriver66.push((java.lang.Object) 100);
        java.lang.Object obj73 = alejaStackTestDriver33.push(obj72);
        java.lang.Object obj74 = alejaStackTestDriver6.push(obj73);
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0.0f + "'", obj45, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0 + "'", obj55, 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100 + "'", obj72, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100 + "'", obj73, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100 + "'", obj74, 100);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0333");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0334");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0335");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0336");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0337");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver64.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj71);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0338");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) (-1L));
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) (-1L));
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver19.getClass();
        java.lang.Object obj31 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass30);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj44 = alejaStackTestDriver7.pop();
        java.lang.Object obj45 = alejaStackTestDriver0.push(obj44);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1L) + "'", obj11, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1L) + "'", obj17, (-1L));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (-1.0f) + "'", obj29, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0339");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj77 = alejaStackTestDriver62.pop();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0340");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0341");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) (-1L));
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj75 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (byte) 0);
        java.lang.Object obj79 = alejaStackTestDriver76.pop();
        java.lang.Object obj80 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj81 = alejaStackTestDriver0.push(obj80);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 0 + "'", obj78, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 0 + "'", obj79, (byte) 0);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0342");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0343");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0344");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver67.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) 0.0f);
        java.lang.Object obj81 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = alejaStackTestDriver67.pop();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0345");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) (-1L));
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj65 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj68 = alejaStackTestDriver58.push((java.lang.Object) (-1.0f));
        java.lang.Object obj69 = alejaStackTestDriver58.pop();
        alejaStackTestDriver58.clear();
        java.lang.Object obj71 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj72 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (-1L) + "'", obj56, (-1L));
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (-1.0f) + "'", obj68, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (-1.0f) + "'", obj69, (-1.0f));
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0346");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj55 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver7.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) (-1L));
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass73 = alejaStackTestDriver59.getClass();
        java.lang.Object obj74 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver81.getClass();
        java.lang.Object obj85 = alejaStackTestDriver76.push((java.lang.Object) wildcardClass84);
        alejaStackTestDriver76.clear();
        java.lang.Object obj88 = alejaStackTestDriver76.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver76.getClass();
        java.lang.Object obj90 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver76);
        alejaStackTestDriver76.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (-1L) + "'", obj63, (-1L));
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 0 + "'", obj80, 0);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0.0f + "'", obj88, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0347");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) (-1L));
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver37.clear();
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj47 = alejaStackTestDriver6.push(obj46);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0348");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj63 = alejaStackTestDriver15.pop();
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0349");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) (-1L));
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver37.clear();
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj47 = alejaStackTestDriver6.push(obj46);
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0350");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        java.lang.Object obj19 = alejaStackTestDriver6.pop();
        java.lang.Object obj20 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1.0f) + "'", obj20, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0351");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj46 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver19.pop();
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0352");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) 100);
        java.lang.Object obj55 = alejaStackTestDriver15.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100 + "'", obj54, 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0353");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) (-1L));
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver36.pop();
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver29.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj74 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj75 = alejaStackTestDriver44.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Object obj80 = alejaStackTestDriver76.push((java.lang.Object) (-1L));
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Object obj86 = alejaStackTestDriver83.pop();
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj89 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver82);
        alejaStackTestDriver82.clear();
        alejaStackTestDriver82.clear();
        java.lang.Object obj92 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver82.getClass();
        java.lang.Object obj94 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (-1L) + "'", obj80, (-1L));
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0354");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver53.pop();
        java.lang.Object obj61 = alejaStackTestDriver47.push(obj60);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0355");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Object obj7 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass16);
        alejaStackTestDriver8.clear();
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) 0.0f);
        java.lang.Object obj22 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        java.lang.Object obj23 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        java.lang.Object obj31 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj33 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        alejaStackTestDriver38.clear();
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) 0.0f);
        java.lang.Object obj52 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver38.pop();
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver60.getClass();
        java.lang.Object obj64 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass63);
        alejaStackTestDriver55.clear();
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver68.pop();
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver78.getClass();
        java.lang.Object obj82 = alejaStackTestDriver73.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj83 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass81);
        java.lang.Object obj84 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj86 = alejaStackTestDriver68.push((java.lang.Object) true);
        java.lang.Object obj87 = alejaStackTestDriver68.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver88.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj95 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj97 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver68.clear();
        java.lang.Object obj99 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0.0f + "'", obj20, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0.0f + "'", obj50, 0.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0.0f + "'", obj67, 0.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 0 + "'", obj77, 0);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + true + "'", obj87, true);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0356");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = alejaStackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0357");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0358");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver29.getClass();
        java.lang.Object obj41 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj54 = alejaStackTestDriver43.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0359");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = alejaStackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0360");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) (-1L));
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj75 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj76 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1L) + "'", obj66, (-1L));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0361");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass48);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver31.getClass();
        java.lang.Object obj53 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 0 + "'", obj33, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0362");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass15);
        alejaStackTestDriver7.clear();
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver20.pop();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj36 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj38 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj39 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        java.lang.Object obj63 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass74);
        alejaStackTestDriver66.clear();
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver79.pop();
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Object obj88 = alejaStackTestDriver84.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver89.getClass();
        java.lang.Object obj93 = alejaStackTestDriver84.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj94 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass92);
        java.lang.Object obj95 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj96 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver79);
        alejaStackTestDriver48.clear();
        java.lang.Object obj98 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj99 = alejaStackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 0 + "'", obj70, 0);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0.0f + "'", obj78, 0.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0 + "'", obj88, 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0363");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 10.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver7.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj53 = alejaStackTestDriver0.push(obj52);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0364");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver27.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver15.getClass();
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) (-1L));
        java.lang.Object obj48 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver61.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver61.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj75 = alejaStackTestDriver43.pop();
        java.lang.Object obj76 = alejaStackTestDriver0.push(obj75);
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1.0f) + "'", obj71, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0365");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) (-1L));
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) (-1.0f));
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) 1L);
        alejaStackTestDriver30.clear();
        java.lang.Object obj40 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj42 = alejaStackTestDriver17.pop();
        java.lang.Object obj43 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10.0f + "'", obj10, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1L) + "'", obj15, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1.0f) + "'", obj27, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1L + "'", obj38, 1L);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0366");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj60 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj61 = alejaStackTestDriver30.pop();
        java.lang.Object obj62 = alejaStackTestDriver30.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 0);
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) 100);
        java.lang.Object obj70 = alejaStackTestDriver30.push(obj69);
        java.lang.Object obj71 = alejaStackTestDriver0.push(obj69);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0.0f + "'", obj62, 0.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0 + "'", obj67, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 100 + "'", obj69, 100);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100 + "'", obj71, 100);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0367");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) (-1L));
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) (-1.0f));
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) 1L);
        alejaStackTestDriver30.clear();
        java.lang.Object obj40 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj42 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10.0f + "'", obj10, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1L) + "'", obj15, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1.0f) + "'", obj27, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1L + "'", obj38, 1L);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0368");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) (-1L));
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj20 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj21 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver27.getClass();
        java.lang.Object obj31 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass30);
        alejaStackTestDriver22.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj52 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj53 = alejaStackTestDriver7.pop();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver7.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (-1L) + "'", obj11, (-1L));
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0 + "'", obj26, 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0369");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0370");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0371");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0372");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0373");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver48.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 0 + "'", obj53, (byte) 0);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0374");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver27.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver27.getClass();
        java.lang.Object obj39 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver15.getClass();
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) (-1L));
        java.lang.Object obj48 = alejaStackTestDriver43.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) (-1L));
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj68 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver61.clear();
        java.lang.Object obj71 = alejaStackTestDriver61.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver61.getClass();
        java.lang.Object obj73 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj75 = alejaStackTestDriver43.pop();
        java.lang.Object obj76 = alejaStackTestDriver0.push(obj75);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1L) + "'", obj47, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1L) + "'", obj48, (-1L));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1L) + "'", obj59, (-1L));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1.0f) + "'", obj71, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0375");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0376");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver16.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj62 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) (-1L));
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver70.pop();
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj76 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver69.clear();
        java.lang.Object obj78 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        java.lang.Object obj86 = alejaStackTestDriver80.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) (byte) 0);
        java.lang.Object obj91 = alejaStackTestDriver87.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver87.getClass();
        java.lang.Object obj93 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver31.push(obj93);
        java.lang.Object obj95 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (-1L) + "'", obj67, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 100 + "'", obj86, 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 0 + "'", obj89, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0377");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) (-1L));
        alejaStackTestDriver30.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1L) + "'", obj34, (-1L));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0378");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0379");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) (-1L));
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj28 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass39);
        alejaStackTestDriver31.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass57);
        java.lang.Object obj60 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj61 = alejaStackTestDriver21.push(obj60);
        java.lang.Object obj62 = alejaStackTestDriver0.push(obj61);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (-1L) + "'", obj19, (-1L));
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0 + "'", obj35, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0380");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Object obj31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.push(obj31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0381");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) (-1L));
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver43.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver66.getClass();
        java.lang.Object obj70 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj72 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj73 = alejaStackTestDriver33.push(obj72);
        java.lang.Object obj74 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (-1L) + "'", obj31, (-1L));
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0382");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) (-1L));
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj38 = alejaStackTestDriver24.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver39.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj70 = alejaStackTestDriver39.pop();
        java.lang.Object obj71 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        java.lang.Object obj78 = alejaStackTestDriver72.push((java.lang.Object) 100);
        java.lang.Object obj79 = alejaStackTestDriver39.push(obj78);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj84 = alejaStackTestDriver80.push((java.lang.Object) 0);
        java.lang.Object obj85 = alejaStackTestDriver39.push(obj84);
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Object obj87 = alejaStackTestDriver0.push(obj84);
        java.lang.Object obj88 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1L) + "'", obj28, (-1L));
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100 + "'", obj78, 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100 + "'", obj79, 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 0 + "'", obj84, 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 0 + "'", obj85, 0);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0 + "'", obj87, 0);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 0 + "'", obj88, 0);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0383");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0384");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver29.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0385");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0386");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) (-1L));
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver18.pop();
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj27 = alejaStackTestDriver17.push((java.lang.Object) (-1.0f));
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        java.lang.Object obj36 = alejaStackTestDriver30.push((java.lang.Object) 10.0f);
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) 1L);
        alejaStackTestDriver30.clear();
        java.lang.Object obj40 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj42 = alejaStackTestDriver17.pop();
        java.lang.Object obj43 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10.0f + "'", obj10, 10.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (-1L) + "'", obj15, (-1L));
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1.0f) + "'", obj27, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 10.0f + "'", obj36, 10.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1L + "'", obj38, 1L);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0.0f + "'", obj43, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0387");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0388");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0389");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj46 = alejaStackTestDriver6.push(obj45);
        java.lang.Object obj47 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0390");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        java.lang.Object obj47 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) 100);
        java.lang.Object obj55 = alejaStackTestDriver15.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0.0f + "'", obj47, 0.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 100 + "'", obj54, 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0391");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0392");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0393");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) 10.0f);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        java.lang.Object obj62 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0394");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0395");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100.0f + "'", obj31, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0396");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) 0);
        java.lang.Object obj14 = alejaStackTestDriver8.push((java.lang.Object) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push(obj14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (byte) 0);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 100L);
        java.lang.Object obj21 = alejaStackTestDriver16.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver22.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver27.getClass();
        java.lang.Object obj31 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass30);
        alejaStackTestDriver22.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj53 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj54 = alejaStackTestDriver35.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj63 = alejaStackTestDriver35.pop();
        java.lang.Object obj64 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj65 = alejaStackTestDriver0.push(obj64);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0 + "'", obj12, 0);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 100 + "'", obj14, 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 0 + "'", obj18, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 100L + "'", obj20, 100L);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 100L + "'", obj21, 100L);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0 + "'", obj26, 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0.0f + "'", obj34, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + true + "'", obj54, true);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0397");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver67.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) 0.0f);
        java.lang.Object obj81 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj82 = alejaStackTestDriver67.pop();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass83);
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass83);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) (short) 10);
        java.lang.Object obj90 = alejaStackTestDriver86.push((java.lang.Object) 0);
        java.lang.Object obj92 = alejaStackTestDriver86.push((java.lang.Object) 10.0f);
        java.lang.Object obj94 = alejaStackTestDriver86.push((java.lang.Object) 1L);
        java.lang.Object obj95 = alejaStackTestDriver86.pop();
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver86.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 0.0f + "'", obj79, 0.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (byte) 100 + "'", obj81, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 10 + "'", obj88, (short) 10);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 0 + "'", obj90, 0);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 10.0f + "'", obj92, 10.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 1L + "'", obj94, 1L);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + 1L + "'", obj95, 1L);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0398");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver28.getClass();
        java.lang.Object obj32 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver23.clear();
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) 0.0f);
        java.lang.Object obj37 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = alejaStackTestDriver23.pop();
        java.lang.Object obj39 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver63.getClass();
        java.lang.Object obj67 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj71 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj72 = alejaStackTestDriver53.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj81 = alejaStackTestDriver53.pop();
        java.lang.Object obj82 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj83 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0.0f + "'", obj52, 0.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0399");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0400");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0401");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0402");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        alejaStackTestDriver65.clear();
        java.lang.Object obj73 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0403");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj38);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        java.lang.Object obj41 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 0 + "'", obj41, (byte) 0);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0404");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass22 = alejaStackTestDriver19.getClass();
        java.lang.Object obj23 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver14.clear();
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj45 = alejaStackTestDriver27.push((java.lang.Object) true);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj58 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver47.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0 + "'", obj18, 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + true + "'", obj45, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0405");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver4.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0406");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0407");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver53.pop();
        java.lang.Object obj61 = alejaStackTestDriver47.push(obj60);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0408");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0409");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        java.lang.Object obj70 = alejaStackTestDriver64.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (byte) 0);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver71.getClass();
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver15.push(obj77);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj86 = alejaStackTestDriver84.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver84.getClass();
        java.lang.Object obj88 = alejaStackTestDriver79.push((java.lang.Object) wildcardClass87);
        alejaStackTestDriver79.clear();
        java.lang.Object obj91 = alejaStackTestDriver79.push((java.lang.Object) 0.0f);
        java.lang.Object obj93 = alejaStackTestDriver79.push((java.lang.Object) (byte) 100);
        java.lang.Object obj94 = alejaStackTestDriver79.pop();
        java.lang.Class<?> wildcardClass95 = obj94.getClass();
        java.lang.Object obj96 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass95);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 100 + "'", obj70, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (byte) 0 + "'", obj73, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 100L + "'", obj75, 100L);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 0 + "'", obj83, 0);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (short) 10 + "'", obj86, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 0.0f + "'", obj91, 0.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + (byte) 100 + "'", obj93, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (byte) 100 + "'", obj94, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Byte");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0410");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0411");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj30 = alejaStackTestDriver13.pop();
        java.lang.Object obj31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver13.push(obj31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0412");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) 100.0f);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100.0f + "'", obj30, 100.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100.0f + "'", obj31, 100.0f);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0413");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        java.lang.Object obj62 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 100L);
        alejaStackTestDriver63.clear();
        java.lang.Object obj69 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver8.push(obj69);
        java.lang.Object obj72 = alejaStackTestDriver8.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "hi!" + "'", obj62, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 0 + "'", obj65, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0414");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        java.lang.Object obj22 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj38 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj39 = alejaStackTestDriver1.push(obj38);
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0415");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) 0L);
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj26 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass24);
        java.lang.Object obj27 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver45.clear();
        java.lang.Object obj64 = alejaStackTestDriver45.push((java.lang.Object) "hi!");
        java.lang.Object obj65 = alejaStackTestDriver29.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        java.lang.Object obj68 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj71 = alejaStackTestDriver29.push((java.lang.Object) 100.0d);
        alejaStackTestDriver29.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 0L + "'", obj5, 0L);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 0L + "'", obj6, 0L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 0 + "'", obj10, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + "hi!" + "'", obj64, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + "hi!" + "'", obj65, "hi!");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 100.0d + "'", obj71, 100.0d);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0416");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver30.getClass();
        java.lang.Object obj34 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass33);
        alejaStackTestDriver25.clear();
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj54 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        alejaStackTestDriver38.clear();
        java.lang.Object obj57 = alejaStackTestDriver38.push((java.lang.Object) "hi!");
        java.lang.Object obj58 = alejaStackTestDriver22.push(obj57);
        java.lang.Object obj59 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj63 = alejaStackTestDriver22.push((java.lang.Object) 0.0d);
        java.lang.Object obj64 = alejaStackTestDriver22.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver22.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0.0f + "'", obj37, 0.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + "hi!" + "'", obj57, "hi!");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + "hi!" + "'", obj58, "hi!");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + "hi!" + "'", obj59, "hi!");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0d + "'", obj63, 0.0d);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0.0d + "'", obj64, 0.0d);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0417");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) 10.0f);
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        java.lang.Object obj60 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Object obj61 = alejaStackTestDriver46.pop();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass62);
        java.lang.Object obj64 = alejaStackTestDriver16.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver66);
        alejaStackTestDriver65.clear();
        java.lang.Object obj73 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj74 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0418");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver22.pop();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver32.getClass();
        java.lang.Object obj36 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj37 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass35);
        java.lang.Object obj38 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) "hi!");
        java.lang.Object obj42 = alejaStackTestDriver6.push(obj41);
        java.lang.Object obj43 = alejaStackTestDriver6.pop();
        java.lang.Object obj44 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj45 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj77 = alejaStackTestDriver59.push((java.lang.Object) true);
        java.lang.Object obj78 = alejaStackTestDriver59.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0 + "'", obj31, 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + "hi!" + "'", obj41, "hi!");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + "hi!" + "'", obj42, "hi!");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "hi!" + "'", obj43, "hi!");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0419");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) (-1L));
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj18 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj19 = alejaStackTestDriver5.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver43.getClass();
        java.lang.Object obj47 = alejaStackTestDriver38.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj49 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj50 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj51 = alejaStackTestDriver5.pop();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver5.getClass();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) 0);
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) 10.0f);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        alejaStackTestDriver64.clear();
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) 0.0f);
        java.lang.Object obj78 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Object obj79 = alejaStackTestDriver64.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver55.clear();
        java.lang.Object obj85 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (-1L) + "'", obj9, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0 + "'", obj42, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 10.0f + "'", obj61, 10.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0.0f + "'", obj76, 0.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (byte) 100 + "'", obj79, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) -1 + "'", obj83, (byte) -1);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0420");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver27.push((java.lang.Object) (-1L));
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj40 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver43.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver61.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver66.getClass();
        java.lang.Object obj70 = alejaStackTestDriver61.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj71 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass69);
        java.lang.Object obj72 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj73 = alejaStackTestDriver33.push(obj72);
        java.lang.Object obj74 = alejaStackTestDriver33.pop();
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (-1L) + "'", obj31, (-1L));
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0 + "'", obj65, 0);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0421");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0422");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj50 = alejaStackTestDriver31.push((java.lang.Object) false);
        java.lang.Object obj51 = alejaStackTestDriver31.pop();
        java.lang.Object obj52 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + false + "'", obj50, false);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + false + "'", obj51, false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0423");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj75 = alejaStackTestDriver58.pop();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0424");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver15.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0425");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        java.lang.Object obj20 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) 0);
        java.lang.Object obj29 = alejaStackTestDriver23.push((java.lang.Object) 10.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj31 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver38.push((java.lang.Object) (-1L));
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj51 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj52 = alejaStackTestDriver38.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver53.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver53.clear();
        java.lang.Object obj65 = alejaStackTestDriver53.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver66.pop();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver76.getClass();
        java.lang.Object obj80 = alejaStackTestDriver71.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj81 = alejaStackTestDriver66.push((java.lang.Object) wildcardClass79);
        java.lang.Object obj82 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj83 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj84 = alejaStackTestDriver53.pop();
        java.lang.Object obj85 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj86 = alejaStackTestDriver23.push(obj85);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj88 = alejaStackTestDriver23.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10.0f + "'", obj29, 10.0f);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (-1L) + "'", obj42, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 0 + "'", obj57, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 0.0f + "'", obj65, 0.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0426");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver65.getClass();
        java.lang.Object obj69 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass68);
        java.lang.Object obj70 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) (-1L));
        alejaStackTestDriver71.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver78.pop();
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj84 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj86 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver77);
        alejaStackTestDriver77.clear();
        java.lang.Object obj88 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj89 = alejaStackTestDriver0.push(obj88);
        java.lang.Object obj91 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj92 = alejaStackTestDriver0.pop();
        java.lang.Object obj93 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (-1L) + "'", obj75, (-1L));
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0427");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0428");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj38);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj76 = alejaStackTestDriver57.push((java.lang.Object) "hi!");
        java.lang.Object obj77 = alejaStackTestDriver41.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver83.push((java.lang.Object) 0);
        java.lang.Object obj89 = alejaStackTestDriver83.push((java.lang.Object) 10.0f);
        java.lang.Object obj91 = alejaStackTestDriver83.push((java.lang.Object) 1L);
        java.lang.Object obj92 = alejaStackTestDriver83.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver93 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj95 = alejaStackTestDriver93.push((java.lang.Object) (short) 10);
        java.lang.Object obj96 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        alejaStackTestDriver83.clear();
        alejaStackTestDriver83.clear();
        java.lang.Object obj99 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver83);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "hi!" + "'", obj76, "hi!");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "hi!" + "'", obj77, "hi!");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "hi!" + "'", obj78, "hi!");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0 + "'", obj87, 0);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 10.0f + "'", obj89, 10.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1L + "'", obj91, 1L);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1L + "'", obj92, 1L);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + (short) 10 + "'", obj96, (short) 10);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0429");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        java.lang.Object obj9 = alejaStackTestDriver3.push((java.lang.Object) 10.0f);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver12.clear();
        java.lang.Object obj24 = alejaStackTestDriver12.push((java.lang.Object) 0.0f);
        java.lang.Object obj26 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) (-1L));
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj45 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj76 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj77 = alejaStackTestDriver46.pop();
        java.lang.Object obj78 = alejaStackTestDriver0.push(obj77);
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0430");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0431");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        java.lang.Object obj28 = alejaStackTestDriver19.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push(obj28);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver52.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass60);
        java.lang.Object obj63 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        java.lang.Object obj66 = alejaStackTestDriver47.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass67);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10 + "'", obj31, 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + "hi!" + "'", obj66, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class java.lang.String");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class java.lang.String");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class java.lang.String");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0432");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (byte) 0);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Object obj27 = alejaStackTestDriver0.push(obj25);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 0 + "'", obj23, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 100L + "'", obj25, 100L);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100L + "'", obj27, 100L);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0433");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 0);
        java.lang.Object obj13 = alejaStackTestDriver7.push((java.lang.Object) 10.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Object obj30 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        java.lang.Object obj31 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = alejaStackTestDriver7.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver7.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver46.pop();
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj53 = alejaStackTestDriver0.push(obj52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver59.getClass();
        java.lang.Object obj63 = alejaStackTestDriver54.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver54.clear();
        java.lang.Object obj66 = alejaStackTestDriver54.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver72.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver77.getClass();
        java.lang.Object obj81 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj82 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass80);
        java.lang.Object obj83 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0 + "'", obj11, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 10.0f + "'", obj13, 10.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) -1 + "'", obj35, (byte) -1);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0.0f + "'", obj66, 0.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 0 + "'", obj76, 0);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0434");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj15 = alejaStackTestDriver11.push((java.lang.Object) 0);
        java.lang.Object obj17 = alejaStackTestDriver11.push((java.lang.Object) 10.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Object obj34 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj35 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = alejaStackTestDriver11.push((java.lang.Object) wildcardClass36);
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10.0f + "'", obj17, 10.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0435");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = alejaStackTestDriver32.push((java.lang.Object) 10);
        java.lang.Object obj49 = alejaStackTestDriver32.pop();
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver32.getClass();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj52 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 10 + "'", obj48, 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 10 + "'", obj49, 10);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0436");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver32.clear();
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver50.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver55.getClass();
        java.lang.Object obj59 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj60 = alejaStackTestDriver45.push((java.lang.Object) wildcardClass58);
        java.lang.Object obj61 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj62 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj63 = alejaStackTestDriver45.pop();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0.0f + "'", obj44, 0.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 0 + "'", obj54, 0);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0437");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        alejaStackTestDriver33.clear();
        java.lang.Object obj39 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver59.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver64.getClass();
        java.lang.Object obj68 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass67);
        alejaStackTestDriver59.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver72.pop();
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) (short) 10);
        java.lang.Object obj81 = alejaStackTestDriver77.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver82.getClass();
        java.lang.Object obj86 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj88 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj89 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        java.lang.Object obj94 = alejaStackTestDriver90.push((java.lang.Object) 0);
        java.lang.Object obj96 = alejaStackTestDriver90.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = alejaStackTestDriver41.push(obj96);
        java.lang.Object obj99 = alejaStackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0 + "'", obj63, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0.0f + "'", obj71, 0.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0 + "'", obj81, 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (short) 10 + "'", obj84, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 0 + "'", obj94, 0);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + 10.0f + "'", obj96, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertEquals("'" + obj98 + "' != '" + 10.0f + "'", obj98, 10.0f);
        org.junit.Assert.assertEquals("'" + obj99 + "' != '" + 10.0f + "'", obj99, 10.0f);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0438");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj31 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver13.pop();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Object obj34 = alejaStackTestDriver13.push(obj33);
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + true + "'", obj31, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0439");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        java.lang.Object obj9 = alejaStackTestDriver3.push((java.lang.Object) 10.0f);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver12.clear();
        java.lang.Object obj24 = alejaStackTestDriver12.push((java.lang.Object) 0.0f);
        java.lang.Object obj26 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0440");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj38 = alejaStackTestDriver23.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        java.lang.Object obj57 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver39.clear();
        java.lang.Object obj59 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        java.lang.Object obj66 = alejaStackTestDriver60.push((java.lang.Object) 10.0f);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Object obj83 = alejaStackTestDriver69.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = alejaStackTestDriver69.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver39.push(obj86);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver88.push((java.lang.Object) alejaStackTestDriver89);
        alejaStackTestDriver88.clear();
        java.lang.Object obj96 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj97 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj98 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj99 = alejaStackTestDriver20.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) -1 + "'", obj38, (short) -1);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0441");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (byte) 0);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0442");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) (-1L));
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver11.pop();
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver11);
        java.lang.Object obj17 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj18 = alejaStackTestDriver4.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass27);
        alejaStackTestDriver19.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj48 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj49 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver19);
        alejaStackTestDriver4.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj59 = alejaStackTestDriver52.pop();
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        java.lang.Object obj61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = alejaStackTestDriver0.push(obj61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (byte) 0 + "'", obj3, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (-1L) + "'", obj8, (-1L));
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0 + "'", obj41, 0);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0443");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0444");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj17 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver20.push((java.lang.Object) wildcardClass28);
        alejaStackTestDriver20.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver20.getClass();
        java.lang.Object obj34 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass33);
        java.lang.Object obj35 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0f) + "'", obj17, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0 + "'", obj24, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0445");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver29.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver34.getClass();
        java.lang.Object obj38 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver29.clear();
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj45 = alejaStackTestDriver42.pop();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj57 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass55);
        java.lang.Object obj58 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj59 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj60 = alejaStackTestDriver14.pop();
        java.lang.Object obj61 = alejaStackTestDriver0.push(obj60);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj75 = alejaStackTestDriver71.push((java.lang.Object) 0);
        java.lang.Object obj77 = alejaStackTestDriver71.push((java.lang.Object) 100);
        java.lang.Object obj78 = alejaStackTestDriver63.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver0.push(obj78);
        java.lang.Object obj80 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0 + "'", obj33, 0);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 0.0f + "'", obj41, 0.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (short) 10 + "'", obj73, (short) 10);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 0 + "'", obj75, 0);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 100 + "'", obj77, 100);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 100 + "'", obj78, 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 100 + "'", obj79, 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 100 + "'", obj80, 100);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0446");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        java.lang.Object obj16 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver22.getClass();
        java.lang.Object obj26 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver17.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        java.lang.Object obj31 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        java.lang.Object obj32 = alejaStackTestDriver17.pop();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) (-1L));
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj79 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj80 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) (byte) 0);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj85 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj86 = alejaStackTestDriver34.pop();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver34.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = alejaStackTestDriver34.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1L) + "'", obj38, (-1L));
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 0 + "'", obj83, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 0 + "'", obj84, (byte) 0);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0447");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0448");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        java.lang.Object obj39 = alejaStackTestDriver29.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver29.getClass();
        java.lang.Object obj41 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass40);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        java.lang.Object obj53 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj54 = alejaStackTestDriver43.pop();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0f) + "'", obj39, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0449");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver20.push((java.lang.Object) (-1L));
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj33 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver26.clear();
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver26.getClass();
        java.lang.Object obj38 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass37);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj51 = alejaStackTestDriver40.pop();
        java.lang.Object obj52 = alejaStackTestDriver40.pop();
        java.lang.Object obj53 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver6.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1L) + "'", obj24, (-1L));
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1.0f) + "'", obj36, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0450");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (byte) 0);
        java.lang.Object obj50 = alejaStackTestDriver47.pop();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 0 + "'", obj49, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 0 + "'", obj50, (byte) 0);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "hi!" + "'", obj53, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0451");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (byte) 0);
        java.lang.Object obj32 = alejaStackTestDriver28.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver28.getClass();
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 100 + "'", obj27, 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 0 + "'", obj30, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100L + "'", obj32, 100L);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0452");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj52 = alejaStackTestDriver34.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj61 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        alejaStackTestDriver0.clear();
        java.lang.Object obj64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver0.push(obj64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0453");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver1.pop();
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj12 = alejaStackTestDriver8.push((java.lang.Object) (-1L));
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver21.getClass();
        java.lang.Object obj25 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass24);
        alejaStackTestDriver16.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj32 = alejaStackTestDriver29.pop();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass42);
        java.lang.Object obj45 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass46);
        java.lang.Object obj48 = alejaStackTestDriver8.pop();
        java.lang.Object obj49 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver55.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver60.getClass();
        java.lang.Object obj64 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass63);
        java.lang.Object obj65 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) (short) 10);
        java.lang.Object obj70 = alejaStackTestDriver66.push((java.lang.Object) (-1L));
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver73.pop();
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj79 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver83.push((java.lang.Object) 0);
        alejaStackTestDriver83.clear();
        java.lang.Object obj89 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj90 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (short) 10 + "'", obj4, (short) 10);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (-1L) + "'", obj12, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0d + "'", obj15, 1.0d);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0.0f + "'", obj28, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0 + "'", obj59, 0);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (short) 10 + "'", obj68, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (-1L) + "'", obj70, (-1L));
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 0 + "'", obj87, 0);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0454");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0455");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj38 = alejaStackTestDriver23.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        java.lang.Object obj57 = alejaStackTestDriver39.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver39.clear();
        java.lang.Object obj59 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver60.push((java.lang.Object) 0);
        java.lang.Object obj66 = alejaStackTestDriver60.push((java.lang.Object) 10.0f);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Object obj83 = alejaStackTestDriver69.push((java.lang.Object) (byte) 100);
        java.lang.Object obj84 = alejaStackTestDriver69.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass85);
        java.lang.Object obj87 = alejaStackTestDriver39.push(obj86);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) (short) 10);
        java.lang.Object obj92 = alejaStackTestDriver89.pop();
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver88.push((java.lang.Object) alejaStackTestDriver89);
        alejaStackTestDriver88.clear();
        java.lang.Object obj96 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver88);
        java.lang.Object obj97 = alejaStackTestDriver0.push(obj96);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) -1 + "'", obj38, (short) -1);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0f) + "'", obj57, (-1.0f));
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 0 + "'", obj64, 0);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10.0f + "'", obj66, 10.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (short) 10 + "'", obj91, (short) 10);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0456");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        alejaStackTestDriver19.clear();
        java.lang.Object obj29 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj30 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (byte) 0);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj50 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass48);
        java.lang.Object obj51 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass48);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver31.getClass();
        java.lang.Object obj53 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver6.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 0 + "'", obj33, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 0 + "'", obj34, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0457");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0458");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        java.lang.Object obj72 = alejaStackTestDriver67.pop();
        alejaStackTestDriver67.clear();
        java.lang.Object obj74 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver67.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (-1L) + "'", obj72, (-1L));
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0459");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver32.getClass();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver42.push((java.lang.Object) (-1L));
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver49.pop();
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj55 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver48);
        alejaStackTestDriver48.clear();
        java.lang.Object obj58 = alejaStackTestDriver48.push((java.lang.Object) (-1.0f));
        java.lang.Object obj59 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        alejaStackTestDriver62.clear();
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver62.getClass();
        java.lang.Object obj76 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass75);
        alejaStackTestDriver48.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver48.getClass();
        java.lang.Object obj79 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass78);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0d + "'", obj39, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (-1L) + "'", obj46, (-1L));
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (-1.0f) + "'", obj58, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (-1.0f) + "'", obj59, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 0.0f + "'", obj74, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0460");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) (-1.0f));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj23 = alejaStackTestDriver19.push((java.lang.Object) 0);
        java.lang.Object obj25 = alejaStackTestDriver19.push((java.lang.Object) 10.0f);
        java.lang.Object obj27 = alejaStackTestDriver19.push((java.lang.Object) 1L);
        java.lang.Object obj28 = alejaStackTestDriver19.pop();
        java.lang.Object obj29 = alejaStackTestDriver0.push(obj28);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0f) + "'", obj18, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 10.0f + "'", obj25, 10.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1L + "'", obj27, 1L);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1L + "'", obj28, 1L);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1L + "'", obj29, 1L);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10 + "'", obj31, 10);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0461");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver16.pop();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver16.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver16.clear();
        java.lang.Object obj34 = alejaStackTestDriver16.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver16.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver43.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass51);
        alejaStackTestDriver43.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) 0.0f);
        java.lang.Object obj57 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = alejaStackTestDriver43.pop();
        java.lang.Object obj59 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver43.getClass();
        java.lang.Object obj62 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) -1 + "'", obj15, (short) -1);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 0 + "'", obj47, 0);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0.0f + "'", obj55, 0.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0462");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        java.lang.Object obj23 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0d + "'", obj23, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0463");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        java.lang.Object obj23 = alejaStackTestDriver17.push((java.lang.Object) 10.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver26.pop();
        alejaStackTestDriver26.clear();
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver32.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass55);
        alejaStackTestDriver47.clear();
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver60.pop();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass73 = alejaStackTestDriver70.getClass();
        java.lang.Object obj74 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = alejaStackTestDriver60.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj76 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj77 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj78 = alejaStackTestDriver47.pop();
        java.lang.Object obj79 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj80 = alejaStackTestDriver17.push(obj79);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 10.0f + "'", obj23, 10.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 0.0f + "'", obj59, 0.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0464");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) (-1L));
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        alejaStackTestDriver37.clear();
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) (-1.0f));
        java.lang.Object obj48 = alejaStackTestDriver37.pop();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver51.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver56.getClass();
        java.lang.Object obj60 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass59);
        alejaStackTestDriver51.clear();
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver51.getClass();
        java.lang.Object obj65 = alejaStackTestDriver37.push((java.lang.Object) wildcardClass64);
        alejaStackTestDriver37.clear();
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver37.getClass();
        java.lang.Object obj68 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (-1.0f) + "'", obj47, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (-1.0f) + "'", obj48, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 0 + "'", obj55, 0);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 0.0f + "'", obj63, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0465");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        alejaStackTestDriver32.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj37 = alejaStackTestDriver0.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0466");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0467");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj38);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver44.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver57.pop();
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver62.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver67.getClass();
        java.lang.Object obj71 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass70);
        java.lang.Object obj73 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        alejaStackTestDriver57.clear();
        java.lang.Object obj76 = alejaStackTestDriver57.push((java.lang.Object) "hi!");
        java.lang.Object obj77 = alejaStackTestDriver41.push(obj76);
        java.lang.Object obj78 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        alejaStackTestDriver41.clear();
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver41.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0.0f + "'", obj56, 0.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 0 + "'", obj66, 0);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + "hi!" + "'", obj76, "hi!");
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + "hi!" + "'", obj77, "hi!");
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + "hi!" + "'", obj78, "hi!");
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0468");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) (-1L));
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver45.push((java.lang.Object) (-1L));
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj58 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        alejaStackTestDriver51.clear();
        java.lang.Object obj61 = alejaStackTestDriver51.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver51.getClass();
        java.lang.Object obj63 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass62);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver39.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass65);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1L) + "'", obj43, (-1L));
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1L) + "'", obj49, (-1L));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1.0f) + "'", obj61, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0469");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver16.push((java.lang.Object) (-1L));
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj26 = alejaStackTestDriver23.pop();
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) (-1L));
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 1.0d);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver32.getClass();
        java.lang.Object obj41 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1L) + "'", obj20, (-1L));
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1L) + "'", obj36, (-1L));
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0d + "'", obj39, 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0470");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        java.lang.Object obj46 = alejaStackTestDriver15.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) (-1L));
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        alejaStackTestDriver53.clear();
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver68.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver73.getClass();
        java.lang.Object obj77 = alejaStackTestDriver68.push((java.lang.Object) wildcardClass76);
        java.lang.Object obj78 = alejaStackTestDriver63.push((java.lang.Object) wildcardClass76);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver79.push((java.lang.Object) (-1L));
        alejaStackTestDriver79.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) (short) 10);
        java.lang.Object obj89 = alejaStackTestDriver86.pop();
        alejaStackTestDriver86.clear();
        java.lang.Object obj91 = alejaStackTestDriver85.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj92 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver85.clear();
        java.lang.Object obj94 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver85);
        alejaStackTestDriver85.clear();
        java.lang.Object obj96 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver85);
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver53.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (-1L) + "'", obj51, (-1L));
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 10 + "'", obj57, (short) 10);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 0 + "'", obj72, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (-1L) + "'", obj83, (-1L));
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (short) 10 + "'", obj88, (short) 10);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (short) 10 + "'", obj89, (short) 10);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0471");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        java.lang.Object obj55 = alejaStackTestDriver49.push((java.lang.Object) 10.0f);
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = alejaStackTestDriver0.push(obj55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        java.lang.Object obj64 = alejaStackTestDriver58.push((java.lang.Object) 10.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        java.lang.Object obj75 = alejaStackTestDriver69.push((java.lang.Object) 10.0f);
        alejaStackTestDriver69.clear();
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj82 = alejaStackTestDriver78.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver83.getClass();
        java.lang.Object obj87 = alejaStackTestDriver78.push((java.lang.Object) wildcardClass86);
        alejaStackTestDriver78.clear();
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) 0.0f);
        java.lang.Object obj92 = alejaStackTestDriver78.push((java.lang.Object) (byte) 100);
        java.lang.Object obj93 = alejaStackTestDriver78.pop();
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        java.lang.Object obj95 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass94);
        java.lang.Object obj96 = alejaStackTestDriver69.pop();
        java.lang.Class<?> wildcardClass97 = obj96.getClass();
        java.lang.Object obj98 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass97);
        java.lang.Class<?> wildcardClass99 = alejaStackTestDriver58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 10.0f + "'", obj55, 10.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 10.0f + "'", obj57, 10.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 10.0f + "'", obj64, 10.0f);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 10.0f + "'", obj75, 10.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 10 + "'", obj80, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 0 + "'", obj82, 0);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 0.0f + "'", obj90, 0.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (byte) 100 + "'", obj92, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + (byte) 100 + "'", obj93, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0472");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver4.pop();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        java.lang.Object obj19 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver4.clear();
        java.lang.Object obj22 = alejaStackTestDriver4.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver4.clear();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Object obj25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(obj24);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0473");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) (-1L));
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver10.pop();
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj16 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj18 = alejaStackTestDriver3.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        alejaStackTestDriver19.clear();
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver19.clear();
        java.lang.Object obj39 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) 10.0f);
        alejaStackTestDriver40.clear();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        java.lang.Object obj63 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj64 = alejaStackTestDriver49.pop();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver19.push(obj66);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver69.pop();
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver69);
        alejaStackTestDriver68.clear();
        java.lang.Object obj76 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj77 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Object obj78 = alejaStackTestDriver0.pop();
        java.lang.Object obj79 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) (short) 10);
        java.lang.Object obj89 = alejaStackTestDriver85.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver90.getClass();
        java.lang.Object obj94 = alejaStackTestDriver85.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj95 = alejaStackTestDriver80.push((java.lang.Object) wildcardClass93);
        java.lang.Object obj96 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass93);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (-1L) + "'", obj7, (-1L));
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) -1 + "'", obj18, (short) -1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0f) + "'", obj37, (-1.0f));
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 10.0f + "'", obj46, 10.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 10 + "'", obj79, (short) 10);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 10 + "'", obj87, (short) 10);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 0 + "'", obj89, 0);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (short) 10 + "'", obj92, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0474");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 1L);
        java.lang.Object obj9 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1L + "'", obj8, 1L);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1L + "'", obj9, 1L);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 10.0f + "'", obj10, 10.0f);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0475");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0476");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver30.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver35.getClass();
        java.lang.Object obj39 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass38);
        alejaStackTestDriver30.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj46 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver48.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj58 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass56);
        java.lang.Object obj59 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        java.lang.Object obj62 = alejaStackTestDriver43.push((java.lang.Object) "hi!");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (byte) 0);
        java.lang.Object obj67 = alejaStackTestDriver63.push((java.lang.Object) 100L);
        alejaStackTestDriver63.clear();
        java.lang.Object obj69 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver8.push(obj69);
        java.lang.Object obj72 = alejaStackTestDriver8.pop();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 0 + "'", obj34, 0);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 0.0f + "'", obj42, 0.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0 + "'", obj52, 0);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + "hi!" + "'", obj62, "hi!");
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 0 + "'", obj65, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 100L + "'", obj67, 100L);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0477");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver8.pop();
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj17 = alejaStackTestDriver13.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver18.getClass();
        java.lang.Object obj22 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass21);
        java.lang.Object obj23 = alejaStackTestDriver8.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver8.clear();
        java.lang.Object obj26 = alejaStackTestDriver8.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0d + "'", obj7, 1.0d);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 0 + "'", obj17, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (-1.0f) + "'", obj26, (-1.0f));
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0478");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj17 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) (-1L));
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver25.pop();
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj34 = alejaStackTestDriver24.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver24.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 10 + "'", obj16, 10);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 10 + "'", obj17, 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1L) + "'", obj22, (-1L));
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (-1.0f) + "'", obj34, (-1.0f));
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0479");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver22.getClass();
        java.lang.Object obj26 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver17.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver35.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass43 = alejaStackTestDriver40.getClass();
        java.lang.Object obj44 = alejaStackTestDriver35.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj45 = alejaStackTestDriver30.push((java.lang.Object) wildcardClass43);
        java.lang.Object obj46 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver30.getClass();
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj49 = alejaStackTestDriver30.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0480");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0481");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) (-1L));
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj25 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver18.clear();
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver18.getClass();
        java.lang.Object obj30 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        java.lang.Object obj38 = alejaStackTestDriver32.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) 1L);
        java.lang.Object obj41 = alejaStackTestDriver32.pop();
        java.lang.Object obj42 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver45.pop();
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver51.pop();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj60 = alejaStackTestDriver56.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver61.getClass();
        java.lang.Object obj65 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass64);
        java.lang.Object obj66 = alejaStackTestDriver51.push((java.lang.Object) wildcardClass64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) (-1L));
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj82 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj83 = alejaStackTestDriver45.push(obj82);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass84);
        java.lang.Object obj86 = alejaStackTestDriver32.pop();
        java.lang.Object obj87 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver32);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1L) + "'", obj16, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (-1.0f) + "'", obj28, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 10.0f + "'", obj38, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1L + "'", obj40, 1L);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1L + "'", obj41, 1L);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 0 + "'", obj60, 0);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (-1L) + "'", obj71, (-1L));
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0482");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        java.lang.Object obj6 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (-1L) + "'", obj5, (-1L));
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0483");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0484");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver39.pop();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver44.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver49.getClass();
        java.lang.Object obj53 = alejaStackTestDriver44.push((java.lang.Object) wildcardClass52);
        java.lang.Object obj54 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass52);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) (-1L));
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj67 = alejaStackTestDriver64.pop();
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj70 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver63);
        alejaStackTestDriver63.clear();
        java.lang.Object obj73 = alejaStackTestDriver63.push((java.lang.Object) (-1.0f));
        java.lang.Object obj74 = alejaStackTestDriver63.pop();
        alejaStackTestDriver63.clear();
        java.lang.Object obj76 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj77 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver63);
        java.lang.Object obj78 = alejaStackTestDriver0.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 0 + "'", obj48, 0);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (-1L) + "'", obj61, (-1L));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + (-1.0f) + "'", obj73, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (-1.0f) + "'", obj74, (-1.0f));
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0485");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) (-1L));
        alejaStackTestDriver14.clear();
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 1.0d);
        java.lang.Object obj22 = alejaStackTestDriver0.push((java.lang.Object) 1.0d);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) (-1L));
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        java.lang.Object obj33 = alejaStackTestDriver30.pop();
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj36 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver29);
        alejaStackTestDriver29.clear();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        alejaStackTestDriver39.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj67 = alejaStackTestDriver52.push((java.lang.Object) wildcardClass65);
        java.lang.Object obj68 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj69 = alejaStackTestDriver29.push(obj68);
        java.lang.Object obj70 = alejaStackTestDriver0.push(obj68);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1L) + "'", obj18, (-1L));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0d + "'", obj21, 1.0d);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0d + "'", obj22, 1.0d);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (-1L) + "'", obj27, (-1L));
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0.0f + "'", obj51, 0.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0486");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver5.pop();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver10.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver15.getClass();
        java.lang.Object obj19 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass18);
        java.lang.Object obj20 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) (-1L));
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj34 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj36 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (-1L) + "'", obj25, (-1L));
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0487");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj13 = alejaStackTestDriver9.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver14.getClass();
        java.lang.Object obj18 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass17);
        alejaStackTestDriver9.clear();
        java.lang.Object obj21 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj24 = alejaStackTestDriver9.pop();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass25);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) (byte) -1);
        alejaStackTestDriver0.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        alejaStackTestDriver32.clear();
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 10.0f + "'", obj6, 10.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 0 + "'", obj13, 0);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) -1 + "'", obj28, (byte) -1);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0488");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        alejaStackTestDriver12.clear();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) (-1.0f));
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver12.getClass();
        java.lang.Object obj24 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver26.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver31.getClass();
        java.lang.Object obj35 = alejaStackTestDriver26.push((java.lang.Object) wildcardClass34);
        java.lang.Object obj36 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj37 = alejaStackTestDriver26.pop();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (-1.0f) + "'", obj22, (-1.0f));
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0 + "'", obj30, 0);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0489");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 100L);
        java.lang.Object obj5 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver11.getClass();
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) wildcardClass14);
        alejaStackTestDriver6.clear();
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj28 = alejaStackTestDriver24.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver29.getClass();
        java.lang.Object obj33 = alejaStackTestDriver24.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj34 = alejaStackTestDriver19.push((java.lang.Object) wildcardClass32);
        java.lang.Object obj35 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj37 = alejaStackTestDriver19.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver40.pop();
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj46 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver19.pop();
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj49 = alejaStackTestDriver19.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 100L + "'", obj4, 100L);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 100L + "'", obj5, 100L);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0 + "'", obj10, 0);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (short) 10 + "'", obj13, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0.0f + "'", obj18, 0.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0490");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Object obj16 = alejaStackTestDriver6.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver19.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver23.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver28.getClass();
        java.lang.Object obj32 = alejaStackTestDriver23.push((java.lang.Object) wildcardClass31);
        alejaStackTestDriver23.clear();
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) 0.0f);
        java.lang.Object obj37 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        java.lang.Object obj38 = alejaStackTestDriver23.pop();
        java.lang.Object obj39 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver40.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver45.getClass();
        java.lang.Object obj49 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass48);
        alejaStackTestDriver40.clear();
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver53.pop();
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver58.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver63.getClass();
        java.lang.Object obj67 = alejaStackTestDriver58.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj68 = alejaStackTestDriver53.push((java.lang.Object) wildcardClass66);
        java.lang.Object obj69 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj71 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj72 = alejaStackTestDriver53.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver74.pop();
        alejaStackTestDriver74.clear();
        java.lang.Object obj79 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj80 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj81 = alejaStackTestDriver53.pop();
        java.lang.Object obj82 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj83 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj84 = alejaStackTestDriver23.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (-1.0f) + "'", obj16, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0 + "'", obj27, 0);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 0.0f + "'", obj35, 0.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 10 + "'", obj42, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 0.0f + "'", obj52, 0.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 0 + "'", obj62, 0);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0491");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (byte) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) (-1L));
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver24.pop();
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj33 = alejaStackTestDriver23.push((java.lang.Object) (-1.0f));
        alejaStackTestDriver23.clear();
        java.lang.Object obj35 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver37.push((java.lang.Object) (-1L));
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver44.pop();
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj50 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver43.clear();
        java.lang.Object obj53 = alejaStackTestDriver43.push((java.lang.Object) (-1.0f));
        java.lang.Object obj54 = alejaStackTestDriver43.pop();
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj61 = alejaStackTestDriver57.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver62.getClass();
        java.lang.Object obj66 = alejaStackTestDriver57.push((java.lang.Object) wildcardClass65);
        alejaStackTestDriver57.clear();
        java.lang.Object obj69 = alejaStackTestDriver57.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass70 = alejaStackTestDriver57.getClass();
        java.lang.Object obj71 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass70);
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver73.push((java.lang.Object) (-1L));
        alejaStackTestDriver73.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj83 = alejaStackTestDriver80.pop();
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj86 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver79);
        alejaStackTestDriver79.clear();
        alejaStackTestDriver79.clear();
        java.lang.Object obj89 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj90 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver43);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (byte) 0 + "'", obj2, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1L) + "'", obj21, (-1L));
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0f) + "'", obj33, (-1.0f));
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1L) + "'", obj41, (-1L));
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1.0f) + "'", obj53, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (-1.0f) + "'", obj54, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0 + "'", obj61, 0);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0.0f + "'", obj69, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (-1L) + "'", obj77, (-1L));
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (short) 10 + "'", obj82, (short) 10);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0492");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0493");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver5.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver10.getClass();
        java.lang.Object obj14 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass13);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj22 = alejaStackTestDriver18.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver18.push((java.lang.Object) wildcardClass26);
        alejaStackTestDriver18.clear();
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        java.lang.Object obj40 = alejaStackTestDriver36.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver41.getClass();
        java.lang.Object obj45 = alejaStackTestDriver36.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass44);
        java.lang.Object obj47 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) (-1L));
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj59 = alejaStackTestDriver56.pop();
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj62 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Object obj65 = alejaStackTestDriver55.push((java.lang.Object) (-1.0f));
        java.lang.Object obj66 = alejaStackTestDriver55.pop();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj73 = alejaStackTestDriver69.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass77 = alejaStackTestDriver74.getClass();
        java.lang.Object obj78 = alejaStackTestDriver69.push((java.lang.Object) wildcardClass77);
        alejaStackTestDriver69.clear();
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver69.getClass();
        java.lang.Object obj83 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj85 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 0 + "'", obj9, 0);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 10 + "'", obj38, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 0 + "'", obj40, 0);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (-1L) + "'", obj53, (-1L));
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (short) 10 + "'", obj58, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (short) 10 + "'", obj59, (short) 10);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (-1.0f) + "'", obj65, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0f) + "'", obj66, (-1.0f));
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 0 + "'", obj73, 0);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 0.0f + "'", obj81, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0494");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver3.push((java.lang.Object) 0);
        java.lang.Object obj9 = alejaStackTestDriver3.push((java.lang.Object) 10.0f);
        alejaStackTestDriver3.clear();
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver12.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver17.getClass();
        java.lang.Object obj21 = alejaStackTestDriver12.push((java.lang.Object) wildcardClass20);
        alejaStackTestDriver12.clear();
        java.lang.Object obj24 = alejaStackTestDriver12.push((java.lang.Object) 0.0f);
        java.lang.Object obj26 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj27 = alejaStackTestDriver12.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver3.push((java.lang.Object) wildcardClass28);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver31.push((java.lang.Object) (-1L));
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Object obj41 = alejaStackTestDriver38.pop();
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj44 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj45 = alejaStackTestDriver31.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver46.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver46.push((java.lang.Object) wildcardClass54);
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj68 = alejaStackTestDriver64.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass72 = alejaStackTestDriver69.getClass();
        java.lang.Object obj73 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj74 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass72);
        java.lang.Object obj75 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj76 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj77 = alejaStackTestDriver46.pop();
        java.lang.Object obj78 = alejaStackTestDriver0.push(obj77);
        java.lang.Object obj79 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 0 + "'", obj7, 0);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0 + "'", obj16, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 0.0f + "'", obj24, 0.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class java.lang.Byte");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1L) + "'", obj35, (-1L));
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 0 + "'", obj50, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0.0f + "'", obj58, 0.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 10 + "'", obj66, (short) 10);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 0 + "'", obj68, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 10 + "'", obj71, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0495");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver6.push((java.lang.Object) (-1L));
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver13.pop();
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj19 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj20 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver21.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver21.clear();
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Object obj43 = alejaStackTestDriver39.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver39.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj49 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass47);
        java.lang.Object obj50 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver34);
        java.lang.Object obj51 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj52 = alejaStackTestDriver21.pop();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Object obj58 = alejaStackTestDriver54.push((java.lang.Object) 0);
        java.lang.Object obj60 = alejaStackTestDriver54.push((java.lang.Object) 10.0f);
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) 1L);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj69 = alejaStackTestDriver65.push((java.lang.Object) 0);
        java.lang.Object obj71 = alejaStackTestDriver65.push((java.lang.Object) 10.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver74.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver74.push((java.lang.Object) wildcardClass82);
        alejaStackTestDriver74.clear();
        java.lang.Object obj86 = alejaStackTestDriver74.push((java.lang.Object) 0.0f);
        java.lang.Object obj88 = alejaStackTestDriver74.push((java.lang.Object) (byte) 100);
        java.lang.Object obj89 = alejaStackTestDriver74.pop();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = alejaStackTestDriver65.push((java.lang.Object) wildcardClass90);
        java.lang.Object obj92 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj93 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 10 + "'", obj8, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1L) + "'", obj10, (-1L));
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 10 + "'", obj15, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 0 + "'", obj25, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 0 + "'", obj43, 0);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 0 + "'", obj58, 0);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 10.0f + "'", obj60, 10.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1L + "'", obj62, 1L);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 0 + "'", obj69, 0);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 10.0f + "'", obj71, 10.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + 0.0f + "'", obj86, 0.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + (byte) 100 + "'", obj89, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0496");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj3 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj8 = alejaStackTestDriver4.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver9.getClass();
        java.lang.Object obj13 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver4.clear();
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) 0.0f);
        java.lang.Object obj18 = alejaStackTestDriver4.push((java.lang.Object) (byte) 100);
        java.lang.Object obj19 = alejaStackTestDriver4.pop();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        java.lang.Object obj29 = alejaStackTestDriver25.push((java.lang.Object) 0);
        java.lang.Object obj31 = alejaStackTestDriver25.push((java.lang.Object) 10.0f);
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver34.push((java.lang.Object) wildcardClass42);
        alejaStackTestDriver34.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) 0.0f);
        java.lang.Object obj48 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        java.lang.Object obj49 = alejaStackTestDriver34.pop();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = alejaStackTestDriver25.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj52 = alejaStackTestDriver22.push((java.lang.Object) wildcardClass50);
        java.lang.Object obj53 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver22.clear();
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (short) 10 + "'", obj3, (short) 10);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (short) 10 + "'", obj6, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 0 + "'", obj8, 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 10 + "'", obj11, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 10 + "'", obj27, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0 + "'", obj29, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 10.0f + "'", obj31, 10.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 0 + "'", obj38, 0);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0.0f + "'", obj46, 0.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "class java.lang.Byte");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0497");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (byte) 0);
        java.lang.Object obj11 = alejaStackTestDriver7.push((java.lang.Object) 100L);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver7.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver14.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass22 = alejaStackTestDriver19.getClass();
        java.lang.Object obj23 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass22);
        alejaStackTestDriver14.clear();
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj30 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver32.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass40);
        java.lang.Object obj43 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj45 = alejaStackTestDriver27.push((java.lang.Object) true);
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver47.push((java.lang.Object) 0);
        java.lang.Object obj53 = alejaStackTestDriver47.push((java.lang.Object) 10.0f);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj58 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 100 + "'", obj6, 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (byte) 0 + "'", obj9, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 100L + "'", obj11, 100L);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 0 + "'", obj18, 0);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 0.0f + "'", obj26, 0.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (short) 10 + "'", obj29, (short) 10);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 0 + "'", obj36, 0);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 10 + "'", obj39, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + true + "'", obj45, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 0 + "'", obj51, 0);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 10.0f + "'", obj53, 10.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0498");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0499");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) (-1L));
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj10 = alejaStackTestDriver7.pop();
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver15.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver15.push((java.lang.Object) wildcardClass23);
        alejaStackTestDriver15.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj31 = alejaStackTestDriver28.pop();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) (short) 10);
        java.lang.Object obj37 = alejaStackTestDriver33.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver38.getClass();
        java.lang.Object obj42 = alejaStackTestDriver33.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj43 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass41);
        java.lang.Object obj44 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver15.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = alejaStackTestDriver15.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + (-1L) + "'", obj4, (-1L));
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (short) 10 + "'", obj10, (short) 10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0 + "'", obj19, 0);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 0.0f + "'", obj27, 0.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 10 + "'", obj31, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 0 + "'", obj37, 0);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_20_8000_0.test0500");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj4 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver5.getClass();
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass8);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        java.lang.Object obj16 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver17.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver22.getClass();
        java.lang.Object obj26 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass25);
        alejaStackTestDriver17.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) 0.0f);
        java.lang.Object obj31 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        java.lang.Object obj32 = alejaStackTestDriver17.pop();
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver34.push((java.lang.Object) (-1L));
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj44 = alejaStackTestDriver41.pop();
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver49.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver49.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver49.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        java.lang.Object obj65 = alejaStackTestDriver62.pop();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver67.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver72.getClass();
        java.lang.Object obj76 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) wildcardClass75);
        java.lang.Object obj78 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj79 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj80 = alejaStackTestDriver34.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) (byte) 0);
        java.lang.Object obj84 = alejaStackTestDriver81.pop();
        java.lang.Object obj85 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj86 = alejaStackTestDriver34.pop();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver34.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + (short) 10 + "'", obj2, (short) 10);
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 0 + "'", obj4, 0);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 0.0f + "'", obj12, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 0.0f + "'", obj16, 0.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0 + "'", obj21, 0);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 10 + "'", obj24, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 0.0f + "'", obj29, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (-1L) + "'", obj38, (-1L));
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (short) 10 + "'", obj43, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 0 + "'", obj53, 0);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 0 + "'", obj71, 0);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 0 + "'", obj83, (byte) 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 0 + "'", obj84, (byte) 0);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }
}

