package experiment.drivers.test;

import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Regression_AlejaStackTest_0_8000_0 {

    public static boolean debug = false;

    @Before
    public void setup() {
        System.setProperty("testId", java.time.Instant.now().toEpochMilli() + ":" + java.util.UUID.randomUUID().toString());
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0001");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0002");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        java.lang.Object obj3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.push(obj3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0003");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0004");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass4 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0005");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0006");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.push(obj6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0007");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0008");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0009");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0010");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0011");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0012");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0013");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0014");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0015");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0016");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0017");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0018");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0019");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0020");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0021");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) (-1.0f));
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (-1.0f) + "'", obj10, (-1.0f));
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0022");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0023");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0024");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0025");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Class<?> wildcardClass6 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0026");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0027");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0028");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver4.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0029");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0030");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0031");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0032");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.push(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0033");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0034");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0035");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0036");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0037");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0038");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0039");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0040");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0041");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0042");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0043");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0044");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0045");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj18 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0046");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0047");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0048");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0049");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0050");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver4.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 100 + "'", obj11, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0051");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0052");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0053");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0054");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0055");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0056");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0057");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0058");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) 1);
        java.lang.Object obj35 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) true);
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj57 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj58 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj59 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver80.push((java.lang.Object) (short) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj89 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj90 = alejaStackTestDriver60.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj89);
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1 + "'", obj34, 1);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1 + "'", obj35, 1);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + true + "'", obj55, true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 100 + "'", obj87, (short) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0059");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver4.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 100 + "'", obj11, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0060");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0061");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0062");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0063");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0064");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver52.push(obj73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0065");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0066");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0067");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0068");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0069");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0070");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj18 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass19 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0071");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0072");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) (short) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 100 + "'", obj27, (short) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0073");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver12.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj32 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) (short) 100);
        alejaStackTestDriver56.clear();
        java.lang.Object obj65 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver66.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        alejaStackTestDriver79.clear();
        java.lang.Object obj84 = alejaStackTestDriver79.push((java.lang.Object) true);
        java.lang.Object obj85 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj86 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver79);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        alejaStackTestDriver87.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver91 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj93 = alejaStackTestDriver91.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver91.getClass();
        java.lang.Object obj95 = alejaStackTestDriver87.push((java.lang.Object) alejaStackTestDriver91);
        java.lang.Object obj96 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj97 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj98 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj99 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver66);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 100 + "'", obj63, (short) 100);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + true + "'", obj84, true);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0074");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0075");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver4.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0076");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0077");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0078");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0079");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = alejaStackTestDriver90.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0080");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0081");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver19.clear();
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver19);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver35.getClass();
        java.lang.Object obj40 = alejaStackTestDriver27.push((java.lang.Object) wildcardClass39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj54 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj55 = alejaStackTestDriver14.push(obj54);
        java.lang.Object obj56 = alejaStackTestDriver5.push(obj55);
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0082");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0083");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver35.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0084");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0085");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0086");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0087");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        java.lang.Object obj57 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100.0f + "'", obj57, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0088");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0089");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0090");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        java.lang.Class<?> wildcardClass98 = alejaStackTestDriver90.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0091");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj33 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj34 = alejaStackTestDriver0.push(obj33);
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + true + "'", obj26, true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0092");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) true);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) 1);
        java.lang.Object obj17 = alejaStackTestDriver9.pop();
        java.lang.Object obj19 = alejaStackTestDriver9.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver20.pop();
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) 0.0f);
        java.lang.Object obj31 = alejaStackTestDriver20.pop();
        java.lang.Object obj32 = alejaStackTestDriver9.push(obj31);
        java.lang.Object obj33 = alejaStackTestDriver0.push(obj32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + true + "'", obj14, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1 + "'", obj17, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 0.0f + "'", obj19, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 0.0f + "'", obj30, 0.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 0.0f + "'", obj31, 0.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 0.0f + "'", obj32, 0.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 0.0f + "'", obj33, 0.0f);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0093");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver28.clear();
        java.lang.Object obj35 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = alejaStackTestDriver36.push(obj47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver58.clear();
        java.lang.Object obj65 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj66 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass67);
        java.lang.Object obj69 = alejaStackTestDriver13.push(obj68);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (short) 10 + "'", obj41, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0094");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver18.push(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0095");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj68 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver55);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = alejaStackTestDriver55.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0096");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0097");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0098");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0099");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0100");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj39 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver40.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) 100);
        java.lang.Object obj56 = alejaStackTestDriver25.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj85 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0101");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0102");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0103");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0104");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        java.lang.Class<?> wildcardClass8 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) -1 + "'", obj7, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0105");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj28 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0106");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        java.lang.Object obj23 = alejaStackTestDriver0.push((java.lang.Object) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 100 + "'", obj23, 100);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0107");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0108");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver4.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0109");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        alejaStackTestDriver3.clear();
        java.lang.Object obj8 = alejaStackTestDriver3.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver3.push(obj28);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + true + "'", obj8, true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0110");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Class<?> wildcardClass6 = obj5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0111");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0112");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass22 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0113");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0114");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0115");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj39 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver40.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) 100);
        java.lang.Object obj56 = alejaStackTestDriver25.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj85 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj87 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0116");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0117");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 1);
        java.lang.Object obj66 = alejaStackTestDriver50.push(obj65);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) true);
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj82 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver73);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver89.push((java.lang.Object) (byte) 100);
        java.lang.Object obj95 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver83.pop();
        java.lang.Object obj97 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + true + "'", obj88, true);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (byte) 100 + "'", obj94, (byte) 100);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0118");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) 1);
        java.lang.Object obj35 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) true);
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj57 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj58 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj59 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver80.push((java.lang.Object) (short) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj89 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj90 = alejaStackTestDriver60.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj89);
        java.lang.Class<?> wildcardClass92 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1 + "'", obj34, 1);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1 + "'", obj35, 1);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + true + "'", obj55, true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 100 + "'", obj87, (short) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0119");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = alejaStackTestDriver0.push(obj12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0120");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0121");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) true);
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + true + "'", obj27, true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0122");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0123");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0124");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = alejaStackTestDriver20.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0125");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver21.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0126");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0127");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj55 = alejaStackTestDriver23.pop();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0128");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0129");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver35.push(obj44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0130");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj46 = alejaStackTestDriver33.pop();
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver23.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0131");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj39 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver40.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) 100);
        java.lang.Object obj56 = alejaStackTestDriver25.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj85 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = alejaStackTestDriver77.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0132");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0133");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        java.lang.Object obj57 = alejaStackTestDriver13.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 100.0f + "'", obj57, 100.0f);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0134");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) (short) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 100 + "'", obj27, (short) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0135");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver14.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0136");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        java.lang.Class<?> wildcardClass19 = alejaStackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0137");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0138");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj39 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver40.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) 100);
        java.lang.Object obj56 = alejaStackTestDriver25.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj85 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj87 = alejaStackTestDriver13.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0139");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj20 = alejaStackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj30 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0140");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj18 = alejaStackTestDriver0.pop();
        java.lang.Object obj19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = alejaStackTestDriver0.push(obj19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0141");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        alejaStackTestDriver54.clear();
        java.lang.Class<?> wildcardClass91 = alejaStackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0142");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver52.push(obj73);
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0143");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = alejaStackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0144");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj22 = alejaStackTestDriver8.push((java.lang.Object) 0);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) true);
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver24.clear();
        java.lang.Object obj39 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + true + "'", obj35, true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0145");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver5.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0146");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0147");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj28 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj33 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver29);
        java.lang.Object obj34 = alejaStackTestDriver0.push(obj33);
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + true + "'", obj26, true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0148");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        java.lang.Class<?> wildcardClass98 = alejaStackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0149");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0150");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) (short) 100);
        alejaStackTestDriver64.clear();
        java.lang.Object obj73 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj74 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass84 = alejaStackTestDriver81.getClass();
        java.lang.Object obj85 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver88 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj90 = alejaStackTestDriver88.push((java.lang.Object) 1.0f);
        alejaStackTestDriver88.clear();
        java.lang.Object obj93 = alejaStackTestDriver88.push((java.lang.Object) (short) 10);
        java.lang.Object obj95 = alejaStackTestDriver88.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver88.getClass();
        java.lang.Object obj97 = alejaStackTestDriver77.push((java.lang.Object) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        java.lang.Object obj99 = alejaStackTestDriver64.push((java.lang.Object) wildcardClass98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 100 + "'", obj71, (short) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 10.0f + "'", obj76, 10.0f);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + 1.0f + "'", obj90, 1.0f);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + (short) 10 + "'", obj93, (short) 10);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 100 + "'", obj95, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(obj99);
        org.junit.Assert.assertEquals(obj99.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj99), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj99), "class java.lang.Class");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0151");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0152");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0153");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj55 = alejaStackTestDriver23.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0154");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver10.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0155");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver7.push((java.lang.Object) (short) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 100 + "'", obj14, (short) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 100 + "'", obj15, (short) 100);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0156");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver35.push(obj44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        alejaStackTestDriver82.clear();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver82.clear();
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj90 = alejaStackTestDriver64.push(obj89);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver91 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj93 = alejaStackTestDriver91.push((java.lang.Object) 1.0f);
        alejaStackTestDriver91.clear();
        java.lang.Object obj96 = alejaStackTestDriver91.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass97 = alejaStackTestDriver91.getClass();
        java.lang.Object obj98 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver91);
        java.lang.Object obj99 = alejaStackTestDriver0.push(obj98);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals("'" + obj93 + "' != '" + 1.0f + "'", obj93, 1.0f);
        org.junit.Assert.assertEquals("'" + obj96 + "' != '" + (byte) 100 + "'", obj96, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0157");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver5.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0158");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) true);
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver0.clear();
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.push(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + true + "'", obj27, true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0159");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 1);
        java.lang.Object obj20 = alejaStackTestDriver12.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push(obj20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + true + "'", obj17, true);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1 + "'", obj19, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1 + "'", obj20, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1 + "'", obj21, 1);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0160");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0161");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver10.getClass();
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) (short) -1);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver31.getClass();
        java.lang.Object obj64 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 100 + "'", obj9, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + true + "'", obj21, true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) -1 + "'", obj38, (short) -1);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0162");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0163");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver25.getClass();
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 100 + "'", obj24, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0164");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) (short) 100);
        java.lang.Object obj28 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver5.push(obj28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 100 + "'", obj27, (short) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 100 + "'", obj28, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 100 + "'", obj30, (short) 100);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0165");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0166");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver12.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        java.lang.Object obj59 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver35.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 100 + "'", obj19, (short) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0167");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0168");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100 + "'", obj32, 100);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0169");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj87 = alejaStackTestDriver21.pop();
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0170");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver12.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        java.lang.Object obj59 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver35.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 100 + "'", obj19, (short) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0171");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0172");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0173");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0174");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0175");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 1);
        java.lang.Object obj66 = alejaStackTestDriver50.push(obj65);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) true);
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj82 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver73);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver89.push((java.lang.Object) (byte) 100);
        java.lang.Object obj95 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver83.pop();
        java.lang.Object obj97 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        java.lang.Class<?> wildcardClass99 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + true + "'", obj88, true);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (byte) 100 + "'", obj94, (byte) 100);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0176");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 1);
        java.lang.Object obj66 = alejaStackTestDriver50.push(obj65);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) true);
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj82 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver73);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver89.push((java.lang.Object) (byte) 100);
        java.lang.Object obj95 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver83.pop();
        java.lang.Object obj97 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + true + "'", obj88, true);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (byte) 100 + "'", obj94, (byte) 100);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0177");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver41.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver68.getClass();
        java.lang.Object obj72 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        alejaStackTestDriver73.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver73.getClass();
        java.lang.Object obj81 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj82 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver56.push(obj84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10 + "'", obj63, 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0178");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0179");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0180");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = alejaStackTestDriver7.push(obj18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = alejaStackTestDriver27.push(obj36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj53 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj54 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0181");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj41 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj56 = alejaStackTestDriver42.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver57.push(obj68);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) 100);
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) 100);
        java.lang.Object obj74 = alejaStackTestDriver42.pop();
        java.lang.Object obj75 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj76 = alejaStackTestDriver11.pop();
        java.lang.Object obj77 = alejaStackTestDriver4.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + true + "'", obj47, true);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100 + "'", obj72, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100 + "'", obj73, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100 + "'", obj74, 100);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0182");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj28 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0183");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver56.push(obj67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver78.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj86 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Class<?> wildcardClass90 = alejaStackTestDriver33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 100 + "'", obj77, (short) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0184");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj58 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0185");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) true);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) 1);
        java.lang.Object obj19 = alejaStackTestDriver11.pop();
        java.lang.Object obj21 = alejaStackTestDriver11.push((java.lang.Object) 0.0f);
        java.lang.Object obj22 = alejaStackTestDriver11.pop();
        java.lang.Object obj23 = alejaStackTestDriver0.push(obj22);
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + true + "'", obj16, true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1 + "'", obj18, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1 + "'", obj19, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 0.0f + "'", obj21, 0.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0186");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        java.lang.Object obj48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver5.push(obj48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0187");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) true);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) 1);
        java.lang.Object obj65 = alejaStackTestDriver49.push(obj64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) true);
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj79 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver49.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + true + "'", obj62, true);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1 + "'", obj64, 1);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0188");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0189");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        alejaStackTestDriver51.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver56.clear();
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) (short) 100);
        alejaStackTestDriver64.clear();
        java.lang.Object obj73 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj74 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (short) 100 + "'", obj71, (short) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0190");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver52.push(obj73);
        alejaStackTestDriver52.clear();
        alejaStackTestDriver52.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0191");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = alejaStackTestDriver5.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0192");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0193");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0194");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0195");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0196");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver7.getClass();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        alejaStackTestDriver7.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0197");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0198");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0199");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0200");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0201");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) (short) 100);
        alejaStackTestDriver57.clear();
        java.lang.Object obj66 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj67 = alejaStackTestDriver32.push(obj66);
        java.lang.Class<?> wildcardClass68 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 100 + "'", obj64, (short) 100);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0202");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0203");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver32.clear();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0204");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push(obj24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (short) 10);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj43 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver5.push((java.lang.Object) wildcardClass44);
        alejaStackTestDriver5.clear();
        java.lang.Object obj47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = alejaStackTestDriver5.push(obj47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (short) 10 + "'", obj32, (short) 10);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 100 + "'", obj34, (short) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0205");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver41.getClass();
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0206");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) 100);
        java.lang.Object obj16 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100 + "'", obj16, 100);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0207");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0208");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) (short) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 100 + "'", obj27, (short) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0209");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0210");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) true);
        java.lang.Object obj68 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj69 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver62);
        alejaStackTestDriver62.clear();
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        alejaStackTestDriver79.clear();
        java.lang.Object obj84 = alejaStackTestDriver79.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver85 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj87 = alejaStackTestDriver85.push((java.lang.Object) 1.0f);
        alejaStackTestDriver85.clear();
        java.lang.Object obj90 = alejaStackTestDriver85.push((java.lang.Object) true);
        java.lang.Object obj91 = alejaStackTestDriver79.push((java.lang.Object) alejaStackTestDriver85);
        java.lang.Object obj92 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver85);
        java.lang.Object obj93 = alejaStackTestDriver62.push(obj92);
        java.lang.Object obj94 = alejaStackTestDriver20.push(obj92);
        java.lang.Class<?> wildcardClass95 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + true + "'", obj67, true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + (byte) 100 + "'", obj84, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + 1.0f + "'", obj87, 1.0f);
        org.junit.Assert.assertEquals("'" + obj90 + "' != '" + true + "'", obj90, true);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0211");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0212");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0213");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0214");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj46 = alejaStackTestDriver33.pop();
        java.lang.Object obj47 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + true + "'", obj38, true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0215");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj44 = alejaStackTestDriver13.push(obj43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0216");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj41 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj56 = alejaStackTestDriver42.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver57.push(obj68);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) 100);
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) 100);
        java.lang.Object obj74 = alejaStackTestDriver42.pop();
        java.lang.Object obj75 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj76 = alejaStackTestDriver11.pop();
        java.lang.Object obj77 = alejaStackTestDriver4.push(obj76);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + true + "'", obj47, true);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100 + "'", obj72, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100 + "'", obj73, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100 + "'", obj74, 100);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0217");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) 1.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver1.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver1.clear();
        java.lang.Object obj9 = alejaStackTestDriver1.push((java.lang.Object) 10.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0218");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) (short) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver58.push(obj69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver35.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver8.push(obj91);
        java.lang.Class<?> wildcardClass93 = obj91.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0219");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj58 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver29.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0220");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        alejaStackTestDriver54.clear();
        java.lang.Class<?> wildcardClass99 = alejaStackTestDriver54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0221");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Object obj84 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver67.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0222");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0223");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0224");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver9.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class java.lang.Float");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class java.lang.Float");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0225");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) true);
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj26 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = alejaStackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + true + "'", obj22, true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0226");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver24.push(obj33);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        java.lang.Object obj38 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0227");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver16.pop();
        java.lang.Object obj35 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        java.lang.Object obj39 = alejaStackTestDriver36.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = alejaStackTestDriver42.getClass();
        java.lang.Object obj46 = alejaStackTestDriver40.push((java.lang.Object) wildcardClass45);
        java.lang.Object obj47 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver48.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) true);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 1);
        java.lang.Object obj64 = alejaStackTestDriver48.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        alejaStackTestDriver71.clear();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) true);
        java.lang.Object obj77 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver71.clear();
        java.lang.Object obj80 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        alejaStackTestDriver87.clear();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) (byte) 100);
        java.lang.Object obj93 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver81.pop();
        java.lang.Object obj95 = alejaStackTestDriver71.push((java.lang.Object) alejaStackTestDriver81);
        alejaStackTestDriver71.clear();
        java.lang.Object obj97 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver36.clear();
        java.lang.Object obj99 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver36);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + false + "'", obj39, false);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 100 + "'", obj55, (short) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + true + "'", obj61, true);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1 + "'", obj63, 1);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1 + "'", obj64, 1);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + true + "'", obj76, true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (byte) 100 + "'", obj92, (byte) 100);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj99);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0228");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver13.push(obj41);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0229");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) (short) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 1);
        java.lang.Object obj60 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj62 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 100 + "'", obj47, (short) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + true + "'", obj57, true);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1 + "'", obj59, 1);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0230");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) 100);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0231");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver14.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0232");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj20 = alejaStackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0233");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0234");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        alejaStackTestDriver13.clear();
        java.lang.Object obj26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver13.push(obj26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0235");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) true);
        java.lang.Object obj23 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj24 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        java.lang.Object obj26 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + true + "'", obj22, true);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0236");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0237");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj58 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver29.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0238");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0239");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0240");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0241");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver56.push(obj67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver78.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj86 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj90 = alejaStackTestDriver33.pop();
        java.lang.Class<?> wildcardClass91 = alejaStackTestDriver33.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 100 + "'", obj77, (short) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0242");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0243");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0244");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0245");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10.0f + "'", obj8, 10.0f);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0246");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) true);
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj63 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj64 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver54.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + true + "'", obj51, true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0247");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver49);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        java.lang.Object obj64 = alejaStackTestDriver57.push((java.lang.Object) (short) 100);
        alejaStackTestDriver57.clear();
        java.lang.Object obj66 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj67 = alejaStackTestDriver32.push(obj66);
        alejaStackTestDriver32.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 100 + "'", obj64, (short) 100);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0248");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0249");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj87 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0250");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj51 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0251");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0252");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        alejaStackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0253");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        alejaStackTestDriver7.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver12.clear();
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (short) 10);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) (short) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj29 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 10 + "'", obj25, (short) 10);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (short) 100 + "'", obj27, (short) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0254");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0255");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0256");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = alejaStackTestDriver6.pop();
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0257");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = alejaStackTestDriver35.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0258");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) true);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 1);
        java.lang.Object obj23 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj47 = alejaStackTestDriver0.push(obj46);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + true + "'", obj20, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1 + "'", obj22, 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0259");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver24.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0260");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        java.lang.Class<?> wildcardClass98 = obj97.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0261");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver38.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0262");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj48 = alejaStackTestDriver20.pop();
        java.lang.Object obj49 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj62 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver50.getClass();
        java.lang.Object obj64 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver50.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + true + "'", obj55, true);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0263");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj48 = alejaStackTestDriver20.pop();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver20.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0264");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass13 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0265");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0266");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) (short) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver40.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 100 + "'", obj47, (short) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0267");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj34 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj44 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (short) 10);
        java.lang.Object obj55 = alejaStackTestDriver48.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) true);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 1);
        java.lang.Object obj64 = alejaStackTestDriver48.push(obj63);
        alejaStackTestDriver48.clear();
        java.lang.Class<?> wildcardClass66 = alejaStackTestDriver48.getClass();
        java.lang.Object obj67 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 10 + "'", obj53, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 100 + "'", obj55, (short) 100);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + true + "'", obj61, true);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1 + "'", obj63, 1);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1 + "'", obj64, 1);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0268");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) true);
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj63 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj64 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + true + "'", obj51, true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0269");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver10.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver10.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0270");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0271");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver67.getClass();
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 100 + "'", obj66, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Class");
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0272");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver25.getClass();
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 100 + "'", obj24, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0273");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0274");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0275");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        alejaStackTestDriver52.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0276");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) true);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj46 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj56 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj57 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        alejaStackTestDriver21.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + true + "'", obj44, true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0277");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj68 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0278");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) true);
        java.lang.Object obj46 = alejaStackTestDriver39.push((java.lang.Object) 1);
        java.lang.Object obj47 = alejaStackTestDriver31.push(obj46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = alejaStackTestDriver54.push(obj63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        alejaStackTestDriver68.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) true);
        java.lang.Object obj78 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj79 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj80 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Object obj81 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj82 = alejaStackTestDriver31.pop();
        java.lang.Object obj83 = alejaStackTestDriver0.push(obj82);
        java.lang.Object obj84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver0.push(obj84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) 100 + "'", obj38, (short) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + true + "'", obj44, true);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1 + "'", obj46, 1);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1 + "'", obj47, 1);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0279");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0280");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Object obj27 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Object obj28 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0281");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push(obj17);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0282");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10 + "'", obj8, 10);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0283");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj31 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver14.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0284");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver24.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0285");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0286");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = alejaStackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0287");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver2.getClass();
        java.lang.Object obj6 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj22 = alejaStackTestDriver8.push((java.lang.Object) 0);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) true);
        java.lang.Object obj36 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj37 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver30);
        alejaStackTestDriver24.clear();
        java.lang.Object obj39 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver8.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0 + "'", obj22, 0);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + true + "'", obj35, true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0288");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj58 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver29.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0289");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver39.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj75 = alejaStackTestDriver34.push(obj74);
        java.lang.Object obj76 = alejaStackTestDriver25.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver6.push(obj76);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0290");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj20 = alejaStackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj30 = alejaStackTestDriver17.pop();
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver17.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0291");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj45 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver46.push(obj57);
        java.lang.Object obj61 = alejaStackTestDriver46.push((java.lang.Object) 100);
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) 100);
        java.lang.Object obj63 = alejaStackTestDriver31.pop();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0 + "'", obj45, 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100 + "'", obj61, 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100 + "'", obj62, 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100 + "'", obj63, 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0292");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver12.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        java.lang.Object obj59 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver35.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = alejaStackTestDriver35.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 100 + "'", obj19, (short) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0293");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver23.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0294");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0295");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver90 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj92 = alejaStackTestDriver90.push((java.lang.Object) 1.0f);
        alejaStackTestDriver90.clear();
        java.lang.Object obj95 = alejaStackTestDriver90.push((java.lang.Object) (short) 10);
        alejaStackTestDriver90.clear();
        java.lang.Object obj97 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver90);
        alejaStackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj99 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + 1.0f + "'", obj92, 1.0f);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + (short) 10 + "'", obj95, (short) 10);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0296");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) (short) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 100 + "'", obj47, (short) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0297");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        java.lang.Object obj40 = alejaStackTestDriver25.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver13.push(obj40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 100 + "'", obj40, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0298");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        alejaStackTestDriver87.clear();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) (byte) 100);
        java.lang.Object obj93 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj95 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj96 = alejaStackTestDriver35.pop();
        alejaStackTestDriver35.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (byte) 100 + "'", obj92, (byte) 100);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0299");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver16.pop();
        java.lang.Object obj35 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0300");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 1);
        java.lang.Object obj20 = alejaStackTestDriver12.pop();
        java.lang.Object obj21 = alejaStackTestDriver0.push(obj20);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (short) 10);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (short) 10);
        java.lang.Object obj50 = alejaStackTestDriver43.push((java.lang.Object) (short) 100);
        alejaStackTestDriver43.clear();
        java.lang.Object obj52 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj53 = alejaStackTestDriver23.push(obj52);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver23.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + true + "'", obj17, true);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1 + "'", obj19, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1 + "'", obj20, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1 + "'", obj21, 1);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (short) 10 + "'", obj28, (short) 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 10 + "'", obj48, (short) 10);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 100 + "'", obj50, (short) 100);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0301");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0302");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver16.pop();
        java.lang.Object obj35 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0303");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        java.lang.Object obj17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = alejaStackTestDriver0.push(obj17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0304");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0305");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj26 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0306");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0307");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) 100);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0308");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) true);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 1);
        java.lang.Object obj23 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj47 = alejaStackTestDriver0.push(obj46);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + true + "'", obj20, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1 + "'", obj22, 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0309");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        java.lang.Object obj38 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj39 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver13.clear();
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10 + "'", obj20, 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0310");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        java.lang.Object obj40 = alejaStackTestDriver25.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver13.push(obj40);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 100 + "'", obj40, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0311");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver31.push(obj42);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) 100);
        java.lang.Object obj47 = alejaStackTestDriver21.push(obj46);
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100 + "'", obj46, 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100 + "'", obj47, 100);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0312");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Object obj84 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass85 = alejaStackTestDriver67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0313");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver41.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (byte) 100);
        java.lang.Object obj63 = alejaStackTestDriver56.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver68.getClass();
        java.lang.Object obj72 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (short) 10);
        alejaStackTestDriver73.clear();
        java.lang.Class<?> wildcardClass80 = alejaStackTestDriver73.getClass();
        java.lang.Object obj81 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj82 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver56);
        java.lang.Object obj84 = alejaStackTestDriver56.pop();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (byte) 100 + "'", obj61, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 10 + "'", obj63, 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 10 + "'", obj78, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0314");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        alejaStackTestDriver9.clear();
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver9.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        java.lang.Object obj18 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0315");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver32.clear();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver14.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver14.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0316");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) true);
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj51 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj56 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj57 = alejaStackTestDriver14.push(obj56);
        java.lang.Object obj58 = alejaStackTestDriver14.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + true + "'", obj49, true);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0317");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0318");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) (short) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver58.push(obj69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver35.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver8.push(obj91);
        java.lang.Object obj93 = alejaStackTestDriver8.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0319");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj44 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (short) 10);
        java.lang.Object obj52 = alejaStackTestDriver45.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver53.push((java.lang.Object) 1);
        java.lang.Object obj61 = alejaStackTestDriver45.push(obj60);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver68 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj70 = alejaStackTestDriver68.push((java.lang.Object) 1.0f);
        alejaStackTestDriver68.clear();
        java.lang.Object obj73 = alejaStackTestDriver68.push((java.lang.Object) true);
        java.lang.Object obj74 = alejaStackTestDriver62.push((java.lang.Object) alejaStackTestDriver68);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = alejaStackTestDriver68.push(obj77);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        alejaStackTestDriver86.clear();
        java.lang.Object obj91 = alejaStackTestDriver86.push((java.lang.Object) true);
        java.lang.Object obj92 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj93 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj94 = alejaStackTestDriver68.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj95 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver68);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver68.getClass();
        java.lang.Object obj97 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver68);
        alejaStackTestDriver68.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (short) 10 + "'", obj50, (short) 10);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 100 + "'", obj52, (short) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1 + "'", obj61, 1);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + 1.0f + "'", obj70, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + true + "'", obj73, true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + true + "'", obj91, true);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0320");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        java.lang.Class<?> wildcardClass18 = alejaStackTestDriver14.getClass();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0321");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass5 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0322");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) 1.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver1.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver1.clear();
        java.lang.Object obj9 = alejaStackTestDriver1.push((java.lang.Object) 10.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0323");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0324");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) 1);
        java.lang.Object obj20 = alejaStackTestDriver12.pop();
        java.lang.Object obj22 = alejaStackTestDriver12.push((java.lang.Object) 0.0f);
        java.lang.Object obj23 = alejaStackTestDriver12.pop();
        alejaStackTestDriver12.clear();
        java.lang.Object obj25 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver12.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + true + "'", obj17, true);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1 + "'", obj19, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1 + "'", obj20, 1);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 0.0f + "'", obj22, 0.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0.0f + "'", obj23, 0.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0325");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = alejaStackTestDriver31.push(obj42);
        java.lang.Object obj46 = alejaStackTestDriver31.push((java.lang.Object) 100);
        java.lang.Object obj47 = alejaStackTestDriver21.push(obj46);
        java.lang.Object obj48 = alejaStackTestDriver21.pop();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 100 + "'", obj46, 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 100 + "'", obj47, 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 100 + "'", obj48, 100);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0326");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        alejaStackTestDriver87.clear();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) (byte) 100);
        java.lang.Object obj93 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj95 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Class<?> wildcardClass96 = alejaStackTestDriver35.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (byte) 100 + "'", obj92, (byte) 100);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0327");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) true);
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + true + "'", obj27, true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0328");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (short) 10);
        java.lang.Object obj14 = alejaStackTestDriver7.push((java.lang.Object) (short) 100);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (short) 10 + "'", obj12, (short) 10);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 100 + "'", obj14, (short) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (short) 100 + "'", obj15, (short) 100);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0329");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0330");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver24.push(obj33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) true);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj50 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver24.getClass();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + true + "'", obj47, true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0331");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj51 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver64.getClass();
        java.lang.Object obj68 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        alejaStackTestDriver69.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver69.getClass();
        java.lang.Object obj77 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj78 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver60.getClass();
        java.lang.Object obj80 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj81 = alejaStackTestDriver60.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 10 + "'", obj59, 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0332");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver32.clear();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj63 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0333");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj28 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj44 = alejaStackTestDriver30.push((java.lang.Object) 0);
        java.lang.Object obj45 = alejaStackTestDriver30.pop();
        java.lang.Object obj46 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + true + "'", obj35, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 0 + "'", obj44, 0);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0 + "'", obj45, 0);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0334");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver41.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver56.push((java.lang.Object) wildcardClass61);
        alejaStackTestDriver56.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj78 = alejaStackTestDriver64.push((java.lang.Object) 0);
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver80.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        alejaStackTestDriver82.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        alejaStackTestDriver86.clear();
        java.lang.Object obj91 = alejaStackTestDriver86.push((java.lang.Object) true);
        java.lang.Object obj92 = alejaStackTestDriver82.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj93 = alejaStackTestDriver80.push((java.lang.Object) alejaStackTestDriver86);
        alejaStackTestDriver80.clear();
        java.lang.Object obj95 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj96 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj97 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj98 = alejaStackTestDriver64.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 0 + "'", obj78, 0);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + true + "'", obj91, true);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0335");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj78 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = alejaStackTestDriver47.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 100 + "'", obj78, (short) 100);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0336");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) true);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 1);
        java.lang.Object obj23 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj47 = alejaStackTestDriver0.push(obj46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) true);
        java.lang.Object obj55 = alejaStackTestDriver48.push((java.lang.Object) 1);
        java.lang.Object obj56 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) (short) -1);
        java.lang.Object obj66 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj83 = alejaStackTestDriver48.pop();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + true + "'", obj20, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1 + "'", obj22, 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1 + "'", obj55, 1);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1 + "'", obj56, 1);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) -1 + "'", obj65, (short) -1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0337");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver84.clear();
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0338");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        java.lang.Object obj49 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver54.getClass();
        java.lang.Object obj58 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver54.getClass();
        java.lang.Object obj60 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0339");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) true);
        java.lang.Object obj28 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        alejaStackTestDriver16.clear();
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj58);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) 100);
        java.lang.Object obj63 = alejaStackTestDriver32.push((java.lang.Object) 100);
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver32.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + true + "'", obj27, true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100 + "'", obj62, 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100 + "'", obj63, 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0340");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver13.push(obj41);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0341");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        java.lang.Object obj37 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0342");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Object obj84 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        alejaStackTestDriver67.clear();
        java.lang.Class<?> wildcardClass86 = alejaStackTestDriver67.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0343");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj31 = alejaStackTestDriver0.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0344");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0345");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver24.clear();
        java.lang.Object obj31 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver24.clear();
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0346");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver8.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0347");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) (short) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver52.push((java.lang.Object) 1);
        java.lang.Object obj60 = alejaStackTestDriver52.pop();
        alejaStackTestDriver52.clear();
        java.lang.Object obj62 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj63 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 100 + "'", obj47, (short) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + true + "'", obj57, true);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1 + "'", obj59, 1);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1 + "'", obj60, 1);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0348");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver48.clear();
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver48);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver56 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj58 = alejaStackTestDriver56.push((java.lang.Object) 1.0f);
        alejaStackTestDriver56.clear();
        java.lang.Object obj61 = alejaStackTestDriver56.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver56.push(obj67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (short) 10);
        java.lang.Object obj77 = alejaStackTestDriver70.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver78.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver78.clear();
        java.lang.Object obj85 = alejaStackTestDriver70.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj86 = alejaStackTestDriver56.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = alejaStackTestDriver48.push((java.lang.Object) wildcardClass87);
        java.lang.Object obj89 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + 1.0f + "'", obj58, 1.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + (short) 10 + "'", obj61, (short) 10);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (short) 10 + "'", obj75, (short) 10);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 100 + "'", obj77, (short) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (byte) 100 + "'", obj83, (byte) 100);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0349");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        java.lang.Object obj11 = alejaStackTestDriver4.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver4.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver4.getClass();
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (short) 100 + "'", obj11, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0350");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj31 = alejaStackTestDriver14.pop();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver38.clear();
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver38);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        java.lang.Object obj53 = alejaStackTestDriver46.push((java.lang.Object) (short) 100);
        alejaStackTestDriver46.clear();
        java.lang.Object obj55 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver46);
        alejaStackTestDriver46.clear();
        alejaStackTestDriver46.clear();
        java.lang.Object obj58 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver46.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (short) 100 + "'", obj53, (short) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0351");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj51 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver35.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0352");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) (short) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver58.push(obj69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver35.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver8.push(obj91);
        alejaStackTestDriver8.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0353");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        java.lang.Object obj38 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj39 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver13.clear();
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj72 = alejaStackTestDriver46.push(obj71);
        java.lang.Object obj73 = alejaStackTestDriver42.push(obj72);
        alejaStackTestDriver42.clear();
        java.lang.Object obj75 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10 + "'", obj20, 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + true + "'", obj51, true);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0354");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass22 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0355");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Class<?> wildcardClass34 = alejaStackTestDriver23.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0356");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0357");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0358");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        alejaStackTestDriver13.clear();
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0359");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Object obj33 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj34 = alejaStackTestDriver0.pop();
        java.lang.Object obj35 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) true);
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver49);
        alejaStackTestDriver36.clear();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver36.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + true + "'", obj54, true);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0360");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        alejaStackTestDriver3.clear();
        java.lang.Object obj8 = alejaStackTestDriver3.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver3.push(obj28);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + true + "'", obj8, true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0361");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0362");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        alejaStackTestDriver3.clear();
        java.lang.Object obj8 = alejaStackTestDriver3.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver3.push(obj28);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + true + "'", obj8, true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0363");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver22.getClass();
        java.lang.Object obj27 = alejaStackTestDriver14.push((java.lang.Object) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver14.getClass();
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj30 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0364");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0365");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver7.getClass();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0366");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj58 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver29.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0367");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0368");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        java.lang.Object obj24 = alejaStackTestDriver13.push((java.lang.Object) (short) -1);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj39 = alejaStackTestDriver25.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = alejaStackTestDriver40.push(obj51);
        java.lang.Object obj55 = alejaStackTestDriver40.push((java.lang.Object) 100);
        java.lang.Object obj56 = alejaStackTestDriver25.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        java.lang.Object obj67 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        java.lang.Object obj82 = alejaStackTestDriver77.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver77.clear();
        java.lang.Object obj84 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj85 = alejaStackTestDriver57.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj86 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver77);
        java.lang.Object obj87 = alejaStackTestDriver13.pop();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) -1 + "'", obj24, (short) -1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 0 + "'", obj39, 0);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 100 + "'", obj55, 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100 + "'", obj56, 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + (byte) 100 + "'", obj82, (byte) 100);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0369");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0370");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver26.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) true);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj46 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver51.getClass();
        java.lang.Object obj55 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj56 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj57 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + true + "'", obj44, true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0371");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        alejaStackTestDriver3.clear();
        java.lang.Object obj8 = alejaStackTestDriver3.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver3.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) true);
        java.lang.Object obj22 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj23 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver28.getClass();
        java.lang.Object obj32 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj33 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver34.clear();
        java.lang.Object obj42 = alejaStackTestDriver34.push((java.lang.Object) 10.0f);
        java.lang.Object obj43 = alejaStackTestDriver3.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver44.getClass();
        java.lang.Object obj58 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (byte) 100);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver71);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        alejaStackTestDriver76.clear();
        java.lang.Object obj81 = alejaStackTestDriver76.push((java.lang.Object) (short) 10);
        alejaStackTestDriver76.clear();
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver76.getClass();
        java.lang.Object obj84 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver76);
        java.lang.Object obj85 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj86 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver59);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver59.getClass();
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (byte) 100 + "'", obj8, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + true + "'", obj21, true);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 10.0f + "'", obj42, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 10.0f + "'", obj43, 10.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + true + "'", obj49, true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 10 + "'", obj66, 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + (short) 10 + "'", obj81, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0372");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0373");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj34 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj44 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Class<?> wildcardClass48 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0374");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        java.lang.Object obj32 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver25);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver39.clear();
        java.lang.Object obj46 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj75 = alejaStackTestDriver34.push(obj74);
        java.lang.Object obj76 = alejaStackTestDriver25.push(obj75);
        java.lang.Object obj77 = alejaStackTestDriver6.push(obj76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0375");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj20 = alejaStackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0376");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) true);
        java.lang.Object obj45 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver39);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = alejaStackTestDriver39.push(obj48);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver39.getClass();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + true + "'", obj44, true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0377");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) 1);
        java.lang.Object obj66 = alejaStackTestDriver50.push(obj65);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) true);
        java.lang.Object obj79 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        alejaStackTestDriver73.clear();
        java.lang.Object obj82 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver73);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver89 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj91 = alejaStackTestDriver89.push((java.lang.Object) 1.0f);
        alejaStackTestDriver89.clear();
        java.lang.Object obj94 = alejaStackTestDriver89.push((java.lang.Object) (byte) 100);
        java.lang.Object obj95 = alejaStackTestDriver83.push((java.lang.Object) alejaStackTestDriver89);
        java.lang.Object obj96 = alejaStackTestDriver83.pop();
        java.lang.Object obj97 = alejaStackTestDriver73.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj98 = alejaStackTestDriver0.push(obj97);
        java.lang.Class<?> wildcardClass99 = obj98.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1 + "'", obj65, 1);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + true + "'", obj88, true);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 1.0f + "'", obj91, 1.0f);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + (byte) 100 + "'", obj94, (byte) 100);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0378");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0379");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj34 = alejaStackTestDriver27.push((java.lang.Object) 1);
        java.lang.Object obj35 = alejaStackTestDriver27.pop();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) true);
        java.lang.Object obj56 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj57 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj58 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj59 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver37);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (short) 10);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (short) 10);
        java.lang.Object obj87 = alejaStackTestDriver80.push((java.lang.Object) (short) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj89 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj90 = alejaStackTestDriver60.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj89);
        java.lang.Class<?> wildcardClass92 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1 + "'", obj34, 1);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1 + "'", obj35, 1);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + true + "'", obj55, true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) 10 + "'", obj65, (short) 10);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 10 + "'", obj85, (short) 10);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (short) 100 + "'", obj87, (short) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0380");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj87 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0381");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver41.getClass();
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0382");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0383");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver41.getClass();
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(obj50);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0384");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        java.lang.Object obj42 = alejaStackTestDriver37.push((java.lang.Object) (byte) 100);
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj45 = alejaStackTestDriver31.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = alejaStackTestDriver46.push(obj57);
        java.lang.Object obj61 = alejaStackTestDriver46.push((java.lang.Object) 100);
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) 100);
        java.lang.Object obj63 = alejaStackTestDriver31.pop();
        java.lang.Object obj64 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = alejaStackTestDriver31.push(obj65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 0 + "'", obj45, 0);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 10 + "'", obj51, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 100 + "'", obj61, 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100 + "'", obj62, 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100 + "'", obj63, 100);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0385");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) 1.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver1.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver1.clear();
        java.lang.Object obj9 = alejaStackTestDriver1.push((java.lang.Object) 10.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0386");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver10.getClass();
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 100 + "'", obj9, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + true + "'", obj21, true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0387");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) (short) 100);
        alejaStackTestDriver28.clear();
        java.lang.Object obj37 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver51.push(obj62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver65.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver73.clear();
        java.lang.Object obj80 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj81 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver28.push(obj83);
        java.lang.Object obj85 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver28);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 100 + "'", obj35, (short) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 100 + "'", obj72, (short) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0388");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) 1.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver1.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver1.clear();
        java.lang.Object obj9 = alejaStackTestDriver1.push((java.lang.Object) 10.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = alejaStackTestDriver1.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0389");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver1 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj3 = alejaStackTestDriver1.push((java.lang.Object) 1.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj6 = alejaStackTestDriver1.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver1.clear();
        java.lang.Object obj9 = alejaStackTestDriver1.push((java.lang.Object) 10.0f);
        alejaStackTestDriver1.clear();
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + 1.0f + "'", obj3, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + (byte) 100 + "'", obj6, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 10.0f + "'", obj9, 10.0f);
        org.junit.Assert.assertNotNull(obj11);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0390");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver52.push(obj73);
        alejaStackTestDriver52.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver52.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0391");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver21.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj41 = alejaStackTestDriver0.push(obj40);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0392");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver71.getClass();
        java.lang.Object obj75 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj76 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver71.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0393");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj21 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver27.clear();
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        java.lang.Object obj42 = alejaStackTestDriver35.push((java.lang.Object) (short) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        alejaStackTestDriver45.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver50.clear();
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver50);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = alejaStackTestDriver58.push(obj69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver80 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj82 = alejaStackTestDriver80.push((java.lang.Object) 1.0f);
        alejaStackTestDriver80.clear();
        java.lang.Object obj85 = alejaStackTestDriver80.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver80.clear();
        java.lang.Object obj87 = alejaStackTestDriver72.push((java.lang.Object) alejaStackTestDriver80);
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Object obj90 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass89);
        java.lang.Object obj91 = alejaStackTestDriver35.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver8.push(obj91);
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (short) 100 + "'", obj42, (short) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (short) 10 + "'", obj63, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + (byte) 100 + "'", obj71, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertEquals("'" + obj82 + "' != '" + 1.0f + "'", obj82, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (byte) 100 + "'", obj85, (byte) 100);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0394");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver35.push(obj44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        alejaStackTestDriver65.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver70.clear();
        java.lang.Object obj77 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver70);
        alejaStackTestDriver70.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver70.getClass();
        java.lang.Object obj80 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver70.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0395");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) true);
        java.lang.Object obj34 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver28);
        java.lang.Object obj35 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass43 = alejaStackTestDriver40.getClass();
        java.lang.Object obj44 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj45 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver36);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Object obj48 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + true + "'", obj33, true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0396");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0397");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj57 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (byte) 100);
        java.lang.Object obj75 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver76 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj78 = alejaStackTestDriver76.push((java.lang.Object) 1.0f);
        alejaStackTestDriver76.clear();
        alejaStackTestDriver76.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver81.clear();
        java.lang.Object obj88 = alejaStackTestDriver76.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj89 = alejaStackTestDriver63.push(obj88);
        java.lang.Object obj90 = alejaStackTestDriver59.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver0.push(obj90);
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + true + "'", obj68, true);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (byte) 100 + "'", obj74, (byte) 100);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + 1.0f + "'", obj78, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + (byte) 100 + "'", obj86, (byte) 100);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0398");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver4.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver6.getClass();
        java.lang.Object obj10 = alejaStackTestDriver4.push((java.lang.Object) wildcardClass9);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (short) 10);
        java.lang.Object obj19 = alejaStackTestDriver12.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj27 = alejaStackTestDriver20.push((java.lang.Object) 1);
        java.lang.Object obj28 = alejaStackTestDriver12.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        java.lang.Object obj44 = alejaStackTestDriver12.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        java.lang.Object obj57 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver51);
        java.lang.Object obj58 = alejaStackTestDriver45.pop();
        java.lang.Object obj59 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver35.clear();
        java.lang.Object obj61 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = alejaStackTestDriver35.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) 10 + "'", obj17, (short) 10);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 100 + "'", obj19, (short) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1 + "'", obj27, 1);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj61);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0399");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj9 = alejaStackTestDriver0.push((java.lang.Object) 100.0d);
        java.lang.Object obj11 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (byte) 100);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (short) 10);
        alejaStackTestDriver30.clear();
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver30.getClass();
        java.lang.Object obj38 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver30);
        java.lang.Object obj39 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver21);
        alejaStackTestDriver13.clear();
        java.lang.Object obj41 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 100.0d + "'", obj9, 100.0d);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + false + "'", obj11, false);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (byte) 100 + "'", obj18, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 10 + "'", obj20, 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 10 + "'", obj35, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj41);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0400");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0401");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver36.getClass();
        java.lang.Object obj41 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver50.getClass();
        java.lang.Object obj55 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver28.getClass();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) true);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) 1);
        java.lang.Object obj67 = alejaStackTestDriver59.pop();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) true);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) -1);
        java.lang.Object obj77 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver69);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver83.clear();
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver83.clear();
        java.lang.Object obj92 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver83);
        java.lang.Object obj93 = alejaStackTestDriver0.push(obj92);
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 100 + "'", obj35, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 100 + "'", obj49, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + true + "'", obj64, true);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1 + "'", obj66, 1);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1 + "'", obj67, 1);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + true + "'", obj74, true);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) -1 + "'", obj76, (short) -1);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(obj93);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0402");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass47 = alejaStackTestDriver44.getClass();
        java.lang.Object obj48 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver49.getClass();
        java.lang.Object obj57 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj58 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj83 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj84 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj85 = alejaStackTestDriver32.pop();
        alejaStackTestDriver32.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10 + "'", obj39, 10);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0403");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj86 = alejaStackTestDriver81.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver87 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj89 = alejaStackTestDriver87.push((java.lang.Object) 1.0f);
        alejaStackTestDriver87.clear();
        java.lang.Object obj92 = alejaStackTestDriver87.push((java.lang.Object) (byte) 100);
        java.lang.Object obj93 = alejaStackTestDriver81.push((java.lang.Object) alejaStackTestDriver87);
        java.lang.Object obj94 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj95 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj96 = alejaStackTestDriver35.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj97 = alejaStackTestDriver35.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertEquals("'" + obj86 + "' != '" + true + "'", obj86, true);
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + 1.0f + "'", obj89, 1.0f);
        org.junit.Assert.assertEquals("'" + obj92 + "' != '" + (byte) 100 + "'", obj92, (byte) 100);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0404");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) true);
        java.lang.Object obj52 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver46);
        java.lang.Object obj53 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass61 = alejaStackTestDriver58.getClass();
        java.lang.Object obj62 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj63 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj64 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + true + "'", obj51, true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0405");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0406");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0407");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass15 = alejaStackTestDriver12.getClass();
        java.lang.Object obj16 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass24 = alejaStackTestDriver17.getClass();
        java.lang.Object obj25 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Object obj26 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        alejaStackTestDriver27.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (short) 10);
        java.lang.Object obj47 = alejaStackTestDriver40.push((java.lang.Object) (short) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver40.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (short) 10 + "'", obj45, (short) 10);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 100 + "'", obj47, (short) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0408");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver7.clear();
        java.lang.Class<?> wildcardClass9 = alejaStackTestDriver7.getClass();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver7);
        java.lang.Class<?> wildcardClass11 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0409");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver26.getClass();
        java.lang.Object obj30 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (short) 10);
        alejaStackTestDriver31.clear();
        java.lang.Class<?> wildcardClass38 = alejaStackTestDriver31.getClass();
        java.lang.Object obj39 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj40 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        java.lang.Object obj47 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        java.lang.Object obj48 = alejaStackTestDriver14.pop();
        java.lang.Object obj49 = alejaStackTestDriver14.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) (short) 10);
        java.lang.Object obj57 = alejaStackTestDriver50.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        java.lang.Class<?> wildcardClass62 = alejaStackTestDriver58.getClass();
        java.lang.Object obj63 = alejaStackTestDriver50.push((java.lang.Object) wildcardClass62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj77 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj78 = alejaStackTestDriver50.pop();
        alejaStackTestDriver50.clear();
        java.lang.Object obj80 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj81 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 10 + "'", obj21, 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 10 + "'", obj36, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (byte) 100 + "'", obj47, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (short) 10 + "'", obj55, (short) 10);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (short) 100 + "'", obj57, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0410");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver16.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver36.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj62 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj63 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        alejaStackTestDriver82.clear();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver82.clear();
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj90 = alejaStackTestDriver64.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver36.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver0.push(obj91);
        java.lang.Class<?> wildcardClass93 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0411");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver34.push((java.lang.Object) 1);
        java.lang.Object obj42 = alejaStackTestDriver34.pop();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) true);
        java.lang.Object obj63 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj64 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver57);
        java.lang.Object obj65 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        alejaStackTestDriver66.clear();
        java.lang.Object obj71 = alejaStackTestDriver66.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        java.lang.Object obj78 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj79 = alejaStackTestDriver66.pop();
        java.lang.Object obj80 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver66.getClass();
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver66);
        java.lang.Class<?> wildcardClass83 = alejaStackTestDriver66.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100 + "'", obj32, 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + true + "'", obj39, true);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1 + "'", obj41, 1);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1 + "'", obj42, 1);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + true + "'", obj62, true);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0412");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        java.lang.Object obj28 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0413");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        java.lang.Object obj15 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass29 = alejaStackTestDriver25.getClass();
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = alejaStackTestDriver32.push(obj43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        java.lang.Object obj51 = alejaStackTestDriver46.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) true);
        java.lang.Object obj58 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = alejaStackTestDriver52.push(obj61);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver64.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver66 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj68 = alejaStackTestDriver66.push((java.lang.Object) 1.0f);
        alejaStackTestDriver66.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) true);
        java.lang.Object obj76 = alejaStackTestDriver66.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj77 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        java.lang.Object obj78 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj79 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj80 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Object obj83 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 0 + "'", obj15, 0);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 100 + "'", obj24, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (byte) 100 + "'", obj51, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + true + "'", obj57, true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + 1.0f + "'", obj68, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + true + "'", obj75, true);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj83);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0414");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        java.lang.Object obj32 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver33.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Object obj42 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = alejaStackTestDriver33.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0415");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0416");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver36.getClass();
        java.lang.Object obj41 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) (short) 10);
        java.lang.Object obj49 = alejaStackTestDriver42.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        alejaStackTestDriver50.clear();
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver50.getClass();
        java.lang.Object obj55 = alejaStackTestDriver42.push((java.lang.Object) wildcardClass54);
        java.lang.Object obj56 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = alejaStackTestDriver28.getClass();
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 100 + "'", obj35, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + (short) 10 + "'", obj47, (short) 10);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 100 + "'", obj49, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0417");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        alejaStackTestDriver24.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver29.clear();
        java.lang.Object obj36 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass40 = alejaStackTestDriver37.getClass();
        java.lang.Object obj41 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver37);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver13.push(obj41);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0418");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass49 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0419");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0420");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj28 = alejaStackTestDriver14.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = alejaStackTestDriver29.push(obj40);
        java.lang.Object obj44 = alejaStackTestDriver29.push((java.lang.Object) 100);
        java.lang.Object obj45 = alejaStackTestDriver14.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver46 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj48 = alejaStackTestDriver46.push((java.lang.Object) 1.0f);
        alejaStackTestDriver46.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        java.lang.Object obj55 = alejaStackTestDriver50.push((java.lang.Object) true);
        java.lang.Object obj56 = alejaStackTestDriver46.push((java.lang.Object) alejaStackTestDriver50);
        java.lang.Object obj57 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver63.clear();
        java.lang.Object obj70 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver63);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        alejaStackTestDriver71.clear();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) (short) 10);
        java.lang.Object obj78 = alejaStackTestDriver71.push((java.lang.Object) (short) 100);
        alejaStackTestDriver71.clear();
        java.lang.Object obj80 = alejaStackTestDriver63.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj81 = alejaStackTestDriver46.push(obj80);
        java.lang.Object obj82 = alejaStackTestDriver0.push(obj80);
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 0 + "'", obj28, 0);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + (byte) 100 + "'", obj42, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 100 + "'", obj44, 100);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 100 + "'", obj45, 100);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + 1.0f + "'", obj48, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + true + "'", obj55, true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 10 + "'", obj76, (short) 10);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (short) 100 + "'", obj78, (short) 100);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0421");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100 + "'", obj32, 100);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0422");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj87 = alejaStackTestDriver21.pop();
        alejaStackTestDriver21.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = alejaStackTestDriver21.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0423");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        alejaStackTestDriver32.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0424");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (short) 10);
        java.lang.Object obj24 = alejaStackTestDriver17.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) true);
        java.lang.Object obj32 = alejaStackTestDriver25.push((java.lang.Object) 1);
        java.lang.Object obj33 = alejaStackTestDriver17.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) true);
        java.lang.Object obj46 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj47 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver40);
        alejaStackTestDriver40.clear();
        java.lang.Object obj49 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver17.getClass();
        java.lang.Object obj51 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (short) 10 + "'", obj22, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (short) 100 + "'", obj24, (short) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + true + "'", obj30, true);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1 + "'", obj32, 1);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1 + "'", obj33, 1);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + true + "'", obj45, true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0425");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Class<?> wildcardClass87 = alejaStackTestDriver21.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0426");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        alejaStackTestDriver39.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass55 = alejaStackTestDriver52.getClass();
        java.lang.Object obj56 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = alejaStackTestDriver28.push((java.lang.Object) wildcardClass57);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) true);
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj80 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver73);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver81 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj83 = alejaStackTestDriver81.push((java.lang.Object) 1.0f);
        alejaStackTestDriver81.clear();
        java.lang.Object obj85 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver81);
        java.lang.Object obj86 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj87 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Class<?> wildcardClass88 = alejaStackTestDriver60.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (byte) 100 + "'", obj49, (byte) 100);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + true + "'", obj78, true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 1.0f + "'", obj83, 1.0f);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0427");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver21.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj41 = alejaStackTestDriver0.push(obj40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0428");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (short) 10);
        java.lang.Object obj16 = alejaStackTestDriver9.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        java.lang.Class<?> wildcardClass21 = alejaStackTestDriver17.getClass();
        java.lang.Object obj22 = alejaStackTestDriver9.push((java.lang.Object) wildcardClass21);
        alejaStackTestDriver9.clear();
        alejaStackTestDriver9.clear();
        java.lang.Object obj25 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver32);
        alejaStackTestDriver32.clear();
        java.lang.Object obj40 = alejaStackTestDriver9.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver32.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 10 + "'", obj8, 10);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (short) 10 + "'", obj14, (short) 10);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 100 + "'", obj16, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0429");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0430");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver52.clear();
        java.lang.Object obj59 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver52);
        java.lang.Object obj60 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver52);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver52.push(obj73);
        alejaStackTestDriver52.clear();
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver52.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0431");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj48 = alejaStackTestDriver20.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        java.lang.Object obj61 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver62.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) (short) 10);
        java.lang.Object obj76 = alejaStackTestDriver69.push((java.lang.Object) (short) 100);
        java.lang.Object obj77 = alejaStackTestDriver62.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = alejaStackTestDriver54.push(obj77);
        java.lang.Object obj80 = alejaStackTestDriver20.push(obj77);
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 10 + "'", obj74, (short) 10);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + (short) 100 + "'", obj76, (short) 100);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 100 + "'", obj77, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (short) 100 + "'", obj80, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0432");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        java.lang.Object obj37 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver31);
        java.lang.Object obj38 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver31);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        alejaStackTestDriver49.clear();
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver49.getClass();
        java.lang.Object obj54 = alejaStackTestDriver41.push((java.lang.Object) wildcardClass53);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver61);
        java.lang.Object obj68 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj69 = alejaStackTestDriver31.push(obj68);
        java.lang.Object obj70 = alejaStackTestDriver0.push(obj68);
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = alejaStackTestDriver0.push(obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 100 + "'", obj48, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + true + "'", obj60, true);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0433");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver35.push(obj44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        java.lang.Object obj71 = alejaStackTestDriver64.push((java.lang.Object) 1);
        java.lang.Object obj72 = alejaStackTestDriver64.pop();
        java.lang.Object obj73 = alejaStackTestDriver0.push(obj72);
        java.lang.Class<?> wildcardClass74 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1 + "'", obj71, 1);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1 + "'", obj72, 1);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1 + "'", obj73, 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0434");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (short) 10);
        java.lang.Object obj18 = alejaStackTestDriver11.push((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass19 = alejaStackTestDriver11.getClass();
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass19);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) 10 + "'", obj16, (short) 10);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 100 + "'", obj18, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0435");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        java.lang.Object obj27 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        alejaStackTestDriver29.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        java.lang.Object obj48 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (short) 10);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) (short) 100);
        alejaStackTestDriver49.clear();
        java.lang.Object obj58 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver29.push(obj58);
        java.lang.Object obj60 = alejaStackTestDriver0.push(obj59);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 10 + "'", obj54, (short) 10);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 100 + "'", obj56, (short) 100);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (byte) 100 + "'", obj67, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "class java.lang.Byte");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "class java.lang.Byte");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0436");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) 0.0f);
        java.lang.Object obj11 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) true);
        java.lang.Object obj28 = alejaStackTestDriver21.push((java.lang.Object) 1);
        java.lang.Object obj29 = alejaStackTestDriver13.push(obj28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver36.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj62 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj63 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Class<?> wildcardClass64 = alejaStackTestDriver13.getClass();
        java.lang.Object obj65 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 0.0f + "'", obj10, 0.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 0.0f + "'", obj11, 0.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + true + "'", obj26, true);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1 + "'", obj28, 1);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1 + "'", obj29, 1);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0437");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        java.lang.Object obj18 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        alejaStackTestDriver10.clear();
        java.lang.Class<?> wildcardClass20 = alejaStackTestDriver10.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0438");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) -1);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass10 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) -1 + "'", obj7, (short) -1);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0439");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0440");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Object obj29 = alejaStackTestDriver16.push(obj27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = alejaStackTestDriver36.push(obj45);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver50 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj52 = alejaStackTestDriver50.push((java.lang.Object) 1.0f);
        alejaStackTestDriver50.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver50.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj62 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj63 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Object obj76 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver70);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver77 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj79 = alejaStackTestDriver77.push((java.lang.Object) 1.0f);
        alejaStackTestDriver77.clear();
        alejaStackTestDriver77.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver82 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj84 = alejaStackTestDriver82.push((java.lang.Object) 1.0f);
        alejaStackTestDriver82.clear();
        java.lang.Object obj87 = alejaStackTestDriver82.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver82.clear();
        java.lang.Object obj89 = alejaStackTestDriver77.push((java.lang.Object) alejaStackTestDriver82);
        java.lang.Object obj90 = alejaStackTestDriver64.push(obj89);
        java.lang.Object obj91 = alejaStackTestDriver36.push(obj90);
        java.lang.Object obj92 = alejaStackTestDriver0.push(obj91);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 10 + "'", obj21, (short) 10);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + (byte) 100 + "'", obj29, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 1.0f + "'", obj52, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + 1.0f + "'", obj79, 1.0f);
        org.junit.Assert.assertEquals("'" + obj84 + "' != '" + 1.0f + "'", obj84, 1.0f);
        org.junit.Assert.assertEquals("'" + obj87 + "' != '" + (byte) 100 + "'", obj87, (byte) 100);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0441");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0442");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver32.clear();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj63 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver55);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver70 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj72 = alejaStackTestDriver70.push((java.lang.Object) 1.0f);
        alejaStackTestDriver70.clear();
        java.lang.Object obj75 = alejaStackTestDriver70.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = alejaStackTestDriver64.push(obj75);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        java.lang.Object obj83 = alejaStackTestDriver78.push((java.lang.Object) (short) 10);
        java.lang.Object obj85 = alejaStackTestDriver78.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver86 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj88 = alejaStackTestDriver86.push((java.lang.Object) 1.0f);
        alejaStackTestDriver86.clear();
        java.lang.Object obj91 = alejaStackTestDriver86.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver86.clear();
        java.lang.Object obj93 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver86);
        java.lang.Object obj94 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj95 = alejaStackTestDriver78.pop();
        java.lang.Object obj96 = alejaStackTestDriver14.push(obj95);
        java.lang.Class<?> wildcardClass97 = obj95.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (short) 10 + "'", obj69, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 1.0f + "'", obj72, 1.0f);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + (byte) 100 + "'", obj75, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + (short) 10 + "'", obj83, (short) 10);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + (short) 100 + "'", obj85, (short) 100);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + 1.0f + "'", obj88, 1.0f);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + (byte) 100 + "'", obj91, (byte) 100);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0443");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj33 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        java.lang.Object obj39 = alejaStackTestDriver34.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) true);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj54 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj57 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj58 = alejaStackTestDriver6.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        alejaStackTestDriver59.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver64.clear();
        java.lang.Object obj71 = alejaStackTestDriver59.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (short) 10);
        java.lang.Object obj79 = alejaStackTestDriver72.push((java.lang.Object) (short) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver64.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver64.clear();
        java.lang.Object obj83 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (byte) 100 + "'", obj39, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + (byte) 100 + "'", obj69, (byte) 100);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (short) 10 + "'", obj77, (short) 10);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + (short) 100 + "'", obj79, (short) 100);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0444");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver83.clear();
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj93 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver78.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0445");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver83.clear();
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj93 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass94 = alejaStackTestDriver47.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0446");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver3 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj5 = alejaStackTestDriver3.push((java.lang.Object) 1.0f);
        alejaStackTestDriver3.clear();
        java.lang.Object obj8 = alejaStackTestDriver3.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver9 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj11 = alejaStackTestDriver9.push((java.lang.Object) 1.0f);
        alejaStackTestDriver9.clear();
        java.lang.Object obj14 = alejaStackTestDriver9.push((java.lang.Object) (byte) 100);
        java.lang.Object obj15 = alejaStackTestDriver3.push((java.lang.Object) alejaStackTestDriver9);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver3.push(obj28);
        java.lang.Object obj30 = alejaStackTestDriver0.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) 1);
        java.lang.Object obj39 = alejaStackTestDriver31.pop();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver41.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj61 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver0.push(obj64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + 1.0f + "'", obj5, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + true + "'", obj8, true);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + 1.0f + "'", obj11, 1.0f);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + (byte) 100 + "'", obj14, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1 + "'", obj38, 1);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1 + "'", obj39, 1);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (byte) 100 + "'", obj46, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0447");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) true);
        java.lang.Object obj20 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = alejaStackTestDriver14.push(obj23);
        alejaStackTestDriver14.clear();
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver33.clear();
        java.lang.Object obj40 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver33);
        alejaStackTestDriver33.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        alejaStackTestDriver63.clear();
        java.lang.Class<?> wildcardClass67 = alejaStackTestDriver63.getClass();
        java.lang.Object obj68 = alejaStackTestDriver55.push((java.lang.Object) wildcardClass67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver69 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj71 = alejaStackTestDriver69.push((java.lang.Object) 1.0f);
        alejaStackTestDriver69.clear();
        java.lang.Object obj74 = alejaStackTestDriver69.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        java.lang.Object obj80 = alejaStackTestDriver75.push((java.lang.Object) (byte) 100);
        java.lang.Object obj81 = alejaStackTestDriver69.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj82 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver69);
        java.lang.Object obj83 = alejaStackTestDriver42.push(obj82);
        java.lang.Object obj84 = alejaStackTestDriver33.push(obj83);
        java.lang.Object obj85 = alejaStackTestDriver14.push(obj84);
        alejaStackTestDriver14.clear();
        java.lang.Object obj87 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + true + "'", obj19, true);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + 1.0f + "'", obj71, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + true + "'", obj74, true);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + (byte) 100 + "'", obj80, (byte) 100);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0448");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) true);
        java.lang.Object obj26 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = alejaStackTestDriver20.push(obj29);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        alejaStackTestDriver34.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver34.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver20);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + true + "'", obj25, true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0449");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver29.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver37.getClass();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj57 = alejaStackTestDriver16.push(obj56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj59 = alejaStackTestDriver16.pop();
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + true + "'", obj48, true);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0450");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0451");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver41.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj56 = alejaStackTestDriver41.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0452");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0453");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        java.lang.Object obj17 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver18.push((java.lang.Object) (short) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj27 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj58 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj73 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver18.clear();
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 100 + "'", obj25, (short) 100);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0454");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Object obj16 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        alejaStackTestDriver17.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver4.push(obj29);
        java.lang.Object obj31 = alejaStackTestDriver0.push(obj30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver32.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push(obj58);
        java.lang.Object obj62 = alejaStackTestDriver47.push((java.lang.Object) 100);
        java.lang.Object obj63 = alejaStackTestDriver32.push((java.lang.Object) 100);
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver32.getClass();
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = alejaStackTestDriver32.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 0 + "'", obj46, 0);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + (byte) 100 + "'", obj58, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 100 + "'", obj62, 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 100 + "'", obj63, 100);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0455");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver8.clear();
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver8);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass23 = alejaStackTestDriver20.getClass();
        java.lang.Object obj24 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (short) 10);
        alejaStackTestDriver25.clear();
        java.lang.Class<?> wildcardClass32 = alejaStackTestDriver25.getClass();
        java.lang.Object obj33 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj34 = alejaStackTestDriver16.pop();
        java.lang.Object obj35 = alejaStackTestDriver8.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver16.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (short) 10 + "'", obj30, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0456");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        java.lang.Object obj15 = alejaStackTestDriver0.push((java.lang.Object) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        alejaStackTestDriver16.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver21.clear();
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (short) 10);
        java.lang.Object obj36 = alejaStackTestDriver29.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        alejaStackTestDriver37.clear();
        java.lang.Class<?> wildcardClass41 = alejaStackTestDriver37.getClass();
        java.lang.Object obj42 = alejaStackTestDriver29.push((java.lang.Object) wildcardClass41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj56 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Object obj57 = alejaStackTestDriver16.push(obj56);
        java.lang.Object obj58 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver16);
        alejaStackTestDriver16.clear();
        java.lang.Object obj61 = alejaStackTestDriver16.push((java.lang.Object) 0.0f);
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (short) 10 + "'", obj34, (short) 10);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (short) 100 + "'", obj36, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + true + "'", obj48, true);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 0.0f + "'", obj61, 0.0f);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0457");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver12 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj14 = alejaStackTestDriver12.push((java.lang.Object) 1.0f);
        alejaStackTestDriver12.clear();
        java.lang.Object obj17 = alejaStackTestDriver12.push((java.lang.Object) (byte) 100);
        java.lang.Object obj18 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver12);
        java.lang.Object obj20 = alejaStackTestDriver6.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver21.push(obj32);
        java.lang.Object obj36 = alejaStackTestDriver21.push((java.lang.Object) 100);
        java.lang.Object obj37 = alejaStackTestDriver6.push((java.lang.Object) 100);
        java.lang.Object obj38 = alejaStackTestDriver6.pop();
        java.lang.Object obj39 = alejaStackTestDriver0.push(obj38);
        java.lang.Object obj40 = alejaStackTestDriver0.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) (short) 10);
        java.lang.Object obj48 = alejaStackTestDriver41.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) true);
        java.lang.Object obj56 = alejaStackTestDriver49.push((java.lang.Object) 1);
        java.lang.Object obj57 = alejaStackTestDriver41.push(obj56);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver64 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj66 = alejaStackTestDriver64.push((java.lang.Object) 1.0f);
        alejaStackTestDriver64.clear();
        java.lang.Object obj69 = alejaStackTestDriver64.push((java.lang.Object) true);
        java.lang.Object obj70 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver64);
        java.lang.Object obj71 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver64);
        alejaStackTestDriver64.clear();
        java.lang.Object obj73 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver64);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver74 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj76 = alejaStackTestDriver74.push((java.lang.Object) 1.0f);
        alejaStackTestDriver74.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass81 = alejaStackTestDriver78.getClass();
        java.lang.Object obj82 = alejaStackTestDriver74.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Object obj83 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver74);
        java.lang.Object obj84 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 1.0f + "'", obj14, 1.0f);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 0 + "'", obj20, 0);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (short) 10 + "'", obj26, (short) 10);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 100 + "'", obj36, 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 100 + "'", obj37, 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 100 + "'", obj38, 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 100 + "'", obj39, 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 100 + "'", obj40, 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + (short) 10 + "'", obj46, (short) 10);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (short) 100 + "'", obj48, (short) 100);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + true + "'", obj54, true);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1 + "'", obj56, 1);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1 + "'", obj57, 1);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + 1.0f + "'", obj66, 1.0f);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + true + "'", obj69, true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0458");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj14 = alejaStackTestDriver0.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        java.lang.Object obj30 = alejaStackTestDriver15.push((java.lang.Object) 100);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) 100);
        java.lang.Object obj32 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass35 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj14 + "' != '" + 0 + "'", obj14, 0);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 100 + "'", obj30, 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 100 + "'", obj31, 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 100 + "'", obj32, 100);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0459");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver10.getClass();
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver31.push((java.lang.Object) (short) -1);
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver40.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = alejaStackTestDriver31.push((java.lang.Object) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = alejaStackTestDriver31.getClass();
        java.lang.Object obj64 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = alejaStackTestDriver31.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 100 + "'", obj9, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + true + "'", obj21, true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (short) -1 + "'", obj38, (short) -1);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(obj64);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0460");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        alejaStackTestDriver21.clear();
        java.lang.Class<?> wildcardClass25 = alejaStackTestDriver21.getClass();
        java.lang.Object obj26 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver33 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj35 = alejaStackTestDriver33.push((java.lang.Object) 1.0f);
        alejaStackTestDriver33.clear();
        java.lang.Object obj38 = alejaStackTestDriver33.push((java.lang.Object) (byte) 100);
        java.lang.Object obj39 = alejaStackTestDriver27.push((java.lang.Object) alejaStackTestDriver33);
        java.lang.Object obj40 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj41 = alejaStackTestDriver0.push(obj40);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        java.lang.Object obj57 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj58 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + (byte) 100 + "'", obj38, (byte) 100);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0461");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = alejaStackTestDriver47.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0462");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        java.lang.Object obj39 = alejaStackTestDriver32.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver40 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj42 = alejaStackTestDriver40.push((java.lang.Object) 1.0f);
        alejaStackTestDriver40.clear();
        java.lang.Object obj45 = alejaStackTestDriver40.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver40.clear();
        java.lang.Object obj47 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver40);
        java.lang.Object obj48 = alejaStackTestDriver0.push(obj47);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (short) 100 + "'", obj39, (short) 100);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + 1.0f + "'", obj42, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (byte) 100 + "'", obj45, (byte) 100);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0463");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj15 = alejaStackTestDriver6.push((java.lang.Object) 100);
        java.lang.Object obj16 = alejaStackTestDriver6.pop();
        java.lang.Class<?> wildcardClass17 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 100 + "'", obj15, 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 100 + "'", obj16, 100);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0464");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver16.clear();
        java.lang.Object obj23 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver16);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver24.getClass();
        java.lang.Object obj28 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass29);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (byte) 100 + "'", obj21, (byte) 100);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0465");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver27.getClass();
        java.lang.Object obj31 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver32.getClass();
        java.lang.Object obj40 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj41 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj42 = alejaStackTestDriver0.push(obj41);
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10 + "'", obj22, 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0466");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0467");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        java.lang.Object obj65 = alejaStackTestDriver60.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver60.clear();
        java.lang.Object obj67 = alejaStackTestDriver55.push((java.lang.Object) alejaStackTestDriver60);
        java.lang.Object obj68 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver13.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (byte) 100 + "'", obj65, (byte) 100);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0468");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj20 = alejaStackTestDriver17.push((java.lang.Object) false);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass26 = alejaStackTestDriver23.getClass();
        java.lang.Object obj27 = alejaStackTestDriver21.push((java.lang.Object) wildcardClass26);
        java.lang.Object obj28 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver21);
        java.lang.Object obj29 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver35.clear();
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver30.clear();
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) (byte) 100);
        java.lang.Object obj52 = alejaStackTestDriver45.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass60 = alejaStackTestDriver57.getClass();
        java.lang.Object obj61 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver57);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver62 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj64 = alejaStackTestDriver62.push((java.lang.Object) 1.0f);
        alejaStackTestDriver62.clear();
        java.lang.Object obj67 = alejaStackTestDriver62.push((java.lang.Object) (short) 10);
        alejaStackTestDriver62.clear();
        java.lang.Class<?> wildcardClass69 = alejaStackTestDriver62.getClass();
        java.lang.Object obj70 = alejaStackTestDriver53.push((java.lang.Object) alejaStackTestDriver62);
        java.lang.Object obj71 = alejaStackTestDriver45.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj72 = alejaStackTestDriver30.push(obj71);
        java.lang.Object obj73 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = alejaStackTestDriver30.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + false + "'", obj20, false);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (byte) 100 + "'", obj50, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 10 + "'", obj52, 10);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + 1.0f + "'", obj64, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + (short) 10 + "'", obj67, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0469");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (byte) 100);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass30 = alejaStackTestDriver27.getClass();
        java.lang.Object obj31 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (short) 10);
        alejaStackTestDriver32.clear();
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver32.getClass();
        java.lang.Object obj40 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj41 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj42 = alejaStackTestDriver0.push(obj41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (byte) 100 + "'", obj20, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 10 + "'", obj22, 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (short) 10 + "'", obj37, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0470");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) true);
        java.lang.Object obj22 = alejaStackTestDriver15.push((java.lang.Object) 1);
        java.lang.Object obj23 = alejaStackTestDriver15.pop();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        alejaStackTestDriver25.clear();
        java.lang.Object obj30 = alejaStackTestDriver25.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver25.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) true);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver25.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj46 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj47 = alejaStackTestDriver0.push(obj46);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) true);
        java.lang.Object obj55 = alejaStackTestDriver48.push((java.lang.Object) 1);
        java.lang.Object obj56 = alejaStackTestDriver48.pop();
        alejaStackTestDriver48.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj65 = alejaStackTestDriver58.push((java.lang.Object) (short) -1);
        java.lang.Object obj66 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver72 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj74 = alejaStackTestDriver72.push((java.lang.Object) 1.0f);
        alejaStackTestDriver72.clear();
        java.lang.Object obj77 = alejaStackTestDriver72.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver72.clear();
        java.lang.Object obj79 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver72);
        alejaStackTestDriver72.clear();
        java.lang.Object obj81 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver72);
        java.lang.Object obj82 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + true + "'", obj20, true);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1 + "'", obj22, 1);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1 + "'", obj23, 1);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (byte) 100 + "'", obj30, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + true + "'", obj43, true);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + true + "'", obj53, true);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1 + "'", obj55, 1);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1 + "'", obj56, 1);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + (short) -1 + "'", obj65, (short) -1);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1.0f + "'", obj74, 1.0f);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + (byte) 100 + "'", obj77, (byte) 100);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0471");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj42 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass50 = alejaStackTestDriver47.getClass();
        java.lang.Object obj51 = alejaStackTestDriver43.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj52 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver43);
        java.lang.Class<?> wildcardClass53 = alejaStackTestDriver22.getClass();
        java.lang.Object obj54 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass53);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "class experiment.drivers.AlejaStackTestDriver");
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0472");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver18.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj32 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver18);
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        alejaStackTestDriver6.clear();
        java.lang.Class<?> wildcardClass36 = alejaStackTestDriver6.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0473");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver6.push(obj15);
        java.lang.Object obj18 = alejaStackTestDriver6.pop();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0474");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass7 = alejaStackTestDriver4.getClass();
        java.lang.Object obj8 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0475");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 10);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) true);
        java.lang.Object obj17 = alejaStackTestDriver10.push((java.lang.Object) (short) -1);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj28 = alejaStackTestDriver26.push((java.lang.Object) 1.0f);
        alejaStackTestDriver26.clear();
        java.lang.Object obj31 = alejaStackTestDriver26.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        java.lang.Object obj38 = alejaStackTestDriver26.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Object obj39 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver32);
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = alejaStackTestDriver10.push((java.lang.Object) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = alejaStackTestDriver0.push(obj41);
        java.lang.Class<?> wildcardClass44 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 10 + "'", obj7, 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + true + "'", obj15, true);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (short) -1 + "'", obj17, (short) -1);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (byte) 100 + "'", obj24, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + 1.0f + "'", obj28, 1.0f);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (byte) 100 + "'", obj31, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0476");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) true);
        java.lang.Object obj12 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver6);
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        alejaStackTestDriver6.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        alejaStackTestDriver15.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver20 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj22 = alejaStackTestDriver20.push((java.lang.Object) 1.0f);
        alejaStackTestDriver20.clear();
        java.lang.Object obj25 = alejaStackTestDriver20.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver20.clear();
        java.lang.Object obj27 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver20);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (short) 10);
        java.lang.Object obj35 = alejaStackTestDriver28.push((java.lang.Object) (short) 100);
        alejaStackTestDriver28.clear();
        java.lang.Object obj37 = alejaStackTestDriver20.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver43 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj45 = alejaStackTestDriver43.push((java.lang.Object) 1.0f);
        alejaStackTestDriver43.clear();
        java.lang.Object obj48 = alejaStackTestDriver43.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver43.clear();
        java.lang.Object obj50 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver43);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver51 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj53 = alejaStackTestDriver51.push((java.lang.Object) 1.0f);
        alejaStackTestDriver51.clear();
        java.lang.Object obj56 = alejaStackTestDriver51.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = alejaStackTestDriver51.push(obj62);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (short) 10);
        java.lang.Object obj72 = alejaStackTestDriver65.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver73 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj75 = alejaStackTestDriver73.push((java.lang.Object) 1.0f);
        alejaStackTestDriver73.clear();
        java.lang.Object obj78 = alejaStackTestDriver73.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver73.clear();
        java.lang.Object obj80 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver73);
        java.lang.Object obj81 = alejaStackTestDriver51.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = alejaStackTestDriver43.push((java.lang.Object) wildcardClass82);
        java.lang.Object obj84 = alejaStackTestDriver28.push(obj83);
        java.lang.Object obj85 = alejaStackTestDriver6.push((java.lang.Object) alejaStackTestDriver28);
        alejaStackTestDriver6.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = alejaStackTestDriver6.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + true + "'", obj11, true);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + 1.0f + "'", obj22, 1.0f);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (byte) 100 + "'", obj25, (byte) 100);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (short) 10 + "'", obj33, (short) 10);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (short) 100 + "'", obj35, (short) 100);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + 1.0f + "'", obj45, 1.0f);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + (byte) 100 + "'", obj48, (byte) 100);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + 1.0f + "'", obj53, 1.0f);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (short) 10 + "'", obj56, (short) 10);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (byte) 100 + "'", obj62, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (byte) 100 + "'", obj64, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (short) 10 + "'", obj70, (short) 10);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 100 + "'", obj72, (short) 100);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj78 + "' != '" + (byte) 100 + "'", obj78, (byte) 100);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj85);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0477");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        java.lang.Object obj80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = alejaStackTestDriver47.push(obj80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0478");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver2 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj4 = alejaStackTestDriver2.push((java.lang.Object) 1.0f);
        alejaStackTestDriver2.clear();
        java.lang.Object obj7 = alejaStackTestDriver2.push((java.lang.Object) (short) 10);
        java.lang.Object obj9 = alejaStackTestDriver2.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        alejaStackTestDriver10.clear();
        java.lang.Class<?> wildcardClass14 = alejaStackTestDriver10.getClass();
        java.lang.Object obj15 = alejaStackTestDriver2.push((java.lang.Object) wildcardClass14);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver16 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj18 = alejaStackTestDriver16.push((java.lang.Object) 1.0f);
        alejaStackTestDriver16.clear();
        java.lang.Object obj21 = alejaStackTestDriver16.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj28 = alejaStackTestDriver16.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj29 = alejaStackTestDriver2.push((java.lang.Object) alejaStackTestDriver16);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver2);
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        org.junit.Assert.assertEquals("'" + obj4 + "' != '" + 1.0f + "'", obj4, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 10 + "'", obj7, (short) 10);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 100 + "'", obj9, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + 1.0f + "'", obj18, 1.0f);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + true + "'", obj21, true);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0479");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + (short) 100 + "'", obj8, (short) 100);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0480");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        alejaStackTestDriver31.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver36.clear();
        java.lang.Object obj43 = alejaStackTestDriver31.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        java.lang.Object obj49 = alejaStackTestDriver44.push((java.lang.Object) (short) 10);
        java.lang.Object obj51 = alejaStackTestDriver44.push((java.lang.Object) (short) 100);
        alejaStackTestDriver44.clear();
        java.lang.Object obj53 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver54.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver67);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj77 = alejaStackTestDriver75.push((java.lang.Object) 1.0f);
        alejaStackTestDriver75.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver79 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj81 = alejaStackTestDriver79.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass82 = alejaStackTestDriver79.getClass();
        java.lang.Object obj83 = alejaStackTestDriver75.push((java.lang.Object) alejaStackTestDriver79);
        java.lang.Object obj84 = alejaStackTestDriver54.push((java.lang.Object) alejaStackTestDriver75);
        java.lang.Object obj85 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj86 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver54);
        java.lang.Object obj88 = alejaStackTestDriver54.push((java.lang.Object) "hi!");
        java.lang.Object obj89 = alejaStackTestDriver54.pop();
        java.lang.Object obj91 = alejaStackTestDriver54.push((java.lang.Object) 100L);
        alejaStackTestDriver54.clear();
        alejaStackTestDriver54.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = alejaStackTestDriver54.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (byte) 100 + "'", obj41, (byte) 100);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (short) 10 + "'", obj49, (short) 10);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + (short) 100 + "'", obj51, (short) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + (byte) 100 + "'", obj59, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (byte) 100 + "'", obj66, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 1.0f + "'", obj77, 1.0f);
        org.junit.Assert.assertEquals("'" + obj81 + "' != '" + 1.0f + "'", obj81, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + "hi!" + "'", obj88, "hi!");
        org.junit.Assert.assertEquals("'" + obj89 + "' != '" + "hi!" + "'", obj89, "hi!");
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 100L + "'", obj91, 100L);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0481");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        java.lang.Object obj27 = alejaStackTestDriver0.pop();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0482");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = alejaStackTestDriver22.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver34.getClass();
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver39.getClass();
        java.lang.Object obj47 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj48 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = alejaStackTestDriver22.pop();
        java.lang.Object obj57 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        alejaStackTestDriver71.clear();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) true);
        java.lang.Object obj77 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver58.clear();
        java.lang.Object obj80 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = alejaStackTestDriver0.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10 + "'", obj29, 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + true + "'", obj76, true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0483");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver59 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj61 = alejaStackTestDriver59.push((java.lang.Object) 1.0f);
        alejaStackTestDriver59.clear();
        java.lang.Object obj64 = alejaStackTestDriver59.push((java.lang.Object) (short) 10);
        java.lang.Object obj66 = alejaStackTestDriver59.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        java.lang.Class<?> wildcardClass71 = alejaStackTestDriver67.getClass();
        java.lang.Object obj72 = alejaStackTestDriver59.push((java.lang.Object) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = alejaStackTestDriver13.push((java.lang.Object) wildcardClass73);
        java.lang.Object obj75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = alejaStackTestDriver13.push(obj75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
        org.junit.Assert.assertEquals("'" + obj61 + "' != '" + 1.0f + "'", obj61, 1.0f);
        org.junit.Assert.assertEquals("'" + obj64 + "' != '" + (short) 10 + "'", obj64, (short) 10);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (short) 100 + "'", obj66, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "class java.lang.Class");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "class java.lang.Class");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0484");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver78 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj80 = alejaStackTestDriver78.push((java.lang.Object) 1.0f);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver83 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj85 = alejaStackTestDriver83.push((java.lang.Object) 1.0f);
        alejaStackTestDriver83.clear();
        java.lang.Object obj88 = alejaStackTestDriver83.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver83.clear();
        java.lang.Object obj90 = alejaStackTestDriver78.push((java.lang.Object) alejaStackTestDriver83);
        alejaStackTestDriver78.clear();
        alejaStackTestDriver78.clear();
        java.lang.Object obj93 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver78);
        java.lang.Class<?> wildcardClass94 = obj93.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals("'" + obj80 + "' != '" + 1.0f + "'", obj80, 1.0f);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + 1.0f + "'", obj85, 1.0f);
        org.junit.Assert.assertEquals("'" + obj88 + "' != '" + (byte) 100 + "'", obj88, (byte) 100);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0485");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass16 = alejaStackTestDriver13.getClass();
        java.lang.Object obj17 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver19 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj21 = alejaStackTestDriver19.push((java.lang.Object) 1.0f);
        alejaStackTestDriver19.clear();
        java.lang.Object obj24 = alejaStackTestDriver19.push((java.lang.Object) true);
        alejaStackTestDriver19.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver26 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver26.clear();
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver26.getClass();
        java.lang.Object obj29 = alejaStackTestDriver19.push((java.lang.Object) alejaStackTestDriver26);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver19);
        java.lang.Class<?> wildcardClass31 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + 1.0f + "'", obj21, 1.0f);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + true + "'", obj24, true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0486");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver15 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj17 = alejaStackTestDriver15.push((java.lang.Object) 1.0f);
        alejaStackTestDriver15.clear();
        java.lang.Object obj20 = alejaStackTestDriver15.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = alejaStackTestDriver15.push(obj26);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver29 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj31 = alejaStackTestDriver29.push((java.lang.Object) 1.0f);
        alejaStackTestDriver29.clear();
        java.lang.Object obj34 = alejaStackTestDriver29.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) true);
        java.lang.Object obj41 = alejaStackTestDriver29.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = alejaStackTestDriver35.push(obj44);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver47.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        alejaStackTestDriver53.clear();
        java.lang.Object obj58 = alejaStackTestDriver53.push((java.lang.Object) true);
        java.lang.Object obj59 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj61 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Object obj62 = alejaStackTestDriver15.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj63 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver15);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + 1.0f + "'", obj17, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 10 + "'", obj20, (short) 10);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + 1.0f + "'", obj31, 1.0f);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + (byte) 100 + "'", obj34, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertEquals("'" + obj58 + "' != '" + true + "'", obj58, true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0487");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        alejaStackTestDriver8.clear();
        java.lang.Class<?> wildcardClass12 = alejaStackTestDriver8.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push((java.lang.Object) wildcardClass12);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver17.clear();
        java.lang.Object obj19 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver17);
        alejaStackTestDriver17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = alejaStackTestDriver17.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0488");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) true);
        java.lang.Object obj10 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver4);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver11 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj13 = alejaStackTestDriver11.push((java.lang.Object) 1.0f);
        alejaStackTestDriver11.clear();
        java.lang.Object obj16 = alejaStackTestDriver11.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver11.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj31 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass39 = alejaStackTestDriver36.getClass();
        java.lang.Object obj40 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj41 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj56 = alejaStackTestDriver42.push((java.lang.Object) 0);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver57 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj59 = alejaStackTestDriver57.push((java.lang.Object) 1.0f);
        alejaStackTestDriver57.clear();
        java.lang.Object obj62 = alejaStackTestDriver57.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver63 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj65 = alejaStackTestDriver63.push((java.lang.Object) 1.0f);
        alejaStackTestDriver63.clear();
        java.lang.Object obj68 = alejaStackTestDriver63.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = alejaStackTestDriver57.push(obj68);
        java.lang.Object obj72 = alejaStackTestDriver57.push((java.lang.Object) 100);
        java.lang.Object obj73 = alejaStackTestDriver42.push((java.lang.Object) 100);
        java.lang.Object obj74 = alejaStackTestDriver42.pop();
        java.lang.Object obj75 = alejaStackTestDriver11.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj76 = alejaStackTestDriver11.pop();
        java.lang.Object obj77 = alejaStackTestDriver4.push(obj76);
        java.lang.Object obj78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = alejaStackTestDriver4.push(obj78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + true + "'", obj9, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + 1.0f + "'", obj13, 1.0f);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (byte) 100 + "'", obj16, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + true + "'", obj47, true);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 0 + "'", obj56, 0);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + 1.0f + "'", obj59, 1.0f);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 10 + "'", obj62, (short) 10);
        org.junit.Assert.assertEquals("'" + obj65 + "' != '" + 1.0f + "'", obj65, 1.0f);
        org.junit.Assert.assertEquals("'" + obj68 + "' != '" + (byte) 100 + "'", obj68, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + 100 + "'", obj72, 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 100 + "'", obj73, 100);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 100 + "'", obj74, 100);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0489");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass33 = alejaStackTestDriver27.getClass();
        java.lang.Object obj34 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (short) 10);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        alejaStackTestDriver42.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver47.clear();
        java.lang.Object obj54 = alejaStackTestDriver42.push((java.lang.Object) alejaStackTestDriver47);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (short) 10);
        java.lang.Object obj62 = alejaStackTestDriver55.push((java.lang.Object) (short) 100);
        alejaStackTestDriver55.clear();
        java.lang.Object obj64 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver55);
        java.lang.Object obj65 = alejaStackTestDriver35.push(obj64);
        java.lang.Object obj66 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) true);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) 1);
        java.lang.Object obj75 = alejaStackTestDriver67.pop();
        java.lang.Object obj76 = alejaStackTestDriver35.push(obj75);
        alejaStackTestDriver35.clear();
        java.lang.Class<?> wildcardClass78 = alejaStackTestDriver35.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (byte) 100 + "'", obj32, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (short) 10 + "'", obj40, (short) 10);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (short) 10 + "'", obj60, (short) 10);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (short) 100 + "'", obj62, (short) 100);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + true + "'", obj72, true);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + 1 + "'", obj74, 1);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1 + "'", obj75, 1);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1 + "'", obj76, 1);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0490");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver6);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        alejaStackTestDriver13.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj25 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Object obj26 = alejaStackTestDriver0.push(obj25);
        java.lang.Class<?> wildcardClass27 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0491");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj29 = alejaStackTestDriver22.push((java.lang.Object) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver34 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj36 = alejaStackTestDriver34.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass37 = alejaStackTestDriver34.getClass();
        java.lang.Object obj38 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver34);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (short) 10);
        alejaStackTestDriver39.clear();
        java.lang.Class<?> wildcardClass46 = alejaStackTestDriver39.getClass();
        java.lang.Object obj47 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj48 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver30);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        java.lang.Object obj54 = alejaStackTestDriver49.push((java.lang.Object) (byte) 100);
        java.lang.Object obj55 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        java.lang.Object obj56 = alejaStackTestDriver22.pop();
        java.lang.Object obj57 = alejaStackTestDriver22.pop();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver58.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver71 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj73 = alejaStackTestDriver71.push((java.lang.Object) 1.0f);
        alejaStackTestDriver71.clear();
        java.lang.Object obj76 = alejaStackTestDriver71.push((java.lang.Object) true);
        java.lang.Object obj77 = alejaStackTestDriver65.push((java.lang.Object) alejaStackTestDriver71);
        java.lang.Object obj78 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver71);
        alejaStackTestDriver58.clear();
        java.lang.Object obj80 = alejaStackTestDriver22.push((java.lang.Object) alejaStackTestDriver58);
        java.lang.Object obj81 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = alejaStackTestDriver58.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 10 + "'", obj29, 10);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + 1.0f + "'", obj36, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (short) 10 + "'", obj44, (short) 10);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (byte) 100 + "'", obj54, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + (byte) 100 + "'", obj55, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + (byte) 100 + "'", obj56, (byte) 100);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + (byte) 100 + "'", obj63, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj73 + "' != '" + 1.0f + "'", obj73, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + true + "'", obj76, true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0492");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) (short) 10);
        java.lang.Object obj20 = alejaStackTestDriver13.push((java.lang.Object) (short) 100);
        alejaStackTestDriver13.clear();
        java.lang.Object obj22 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        alejaStackTestDriver30.clear();
        java.lang.Object obj35 = alejaStackTestDriver30.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj38 = alejaStackTestDriver36.push((java.lang.Object) 1.0f);
        alejaStackTestDriver36.clear();
        java.lang.Object obj41 = alejaStackTestDriver36.push((java.lang.Object) true);
        java.lang.Object obj42 = alejaStackTestDriver30.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj43 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver36);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver44 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj46 = alejaStackTestDriver44.push((java.lang.Object) 1.0f);
        alejaStackTestDriver44.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass51 = alejaStackTestDriver48.getClass();
        java.lang.Object obj52 = alejaStackTestDriver44.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Object obj53 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver44);
        java.lang.Object obj54 = alejaStackTestDriver13.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj56 = alejaStackTestDriver13.push((java.lang.Object) 100.0f);
        alejaStackTestDriver13.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = alejaStackTestDriver13.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (short) 10 + "'", obj18, (short) 10);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (short) 100 + "'", obj20, (short) 100);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + (byte) 100 + "'", obj28, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (byte) 100 + "'", obj35, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj38 + "' != '" + 1.0f + "'", obj38, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + true + "'", obj41, true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + 1.0f + "'", obj46, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 100.0f + "'", obj56, 100.0f);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0493");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        java.lang.Object obj10 = alejaStackTestDriver5.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver5.clear();
        java.lang.Object obj12 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver5);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        java.lang.Object obj26 = alejaStackTestDriver21.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver27 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj29 = alejaStackTestDriver27.push((java.lang.Object) 1.0f);
        alejaStackTestDriver27.clear();
        java.lang.Object obj32 = alejaStackTestDriver27.push((java.lang.Object) true);
        java.lang.Object obj33 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver27);
        java.lang.Object obj34 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver27);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass42 = alejaStackTestDriver39.getClass();
        java.lang.Object obj43 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver39);
        java.lang.Object obj44 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver35);
        alejaStackTestDriver35.clear();
        alejaStackTestDriver35.clear();
        java.lang.Object obj47 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver35);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver48 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj50 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj53 = alejaStackTestDriver48.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver54 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj56 = alejaStackTestDriver54.push((java.lang.Object) 1.0f);
        alejaStackTestDriver54.clear();
        java.lang.Object obj59 = alejaStackTestDriver54.push((java.lang.Object) true);
        java.lang.Object obj60 = alejaStackTestDriver48.push((java.lang.Object) alejaStackTestDriver54);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj75 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        java.lang.Object obj76 = alejaStackTestDriver48.push((java.lang.Object) 1.0f);
        alejaStackTestDriver48.clear();
        java.lang.Object obj78 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver48);
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver48.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + (byte) 100 + "'", obj10, (byte) 100);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (byte) 100 + "'", obj19, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + (byte) 100 + "'", obj26, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + 1.0f + "'", obj29, 1.0f);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + true + "'", obj32, true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + 1.0f + "'", obj50, 1.0f);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + (byte) 100 + "'", obj53, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj56 + "' != '" + 1.0f + "'", obj56, 1.0f);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + 1.0f + "'", obj75, 1.0f);
        org.junit.Assert.assertEquals("'" + obj76 + "' != '" + 1.0f + "'", obj76, 1.0f);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0494");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver7 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj9 = alejaStackTestDriver7.push((java.lang.Object) 1.0f);
        alejaStackTestDriver7.clear();
        java.lang.Object obj12 = alejaStackTestDriver7.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver13 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj15 = alejaStackTestDriver13.push((java.lang.Object) 1.0f);
        alejaStackTestDriver13.clear();
        java.lang.Object obj18 = alejaStackTestDriver13.push((java.lang.Object) true);
        java.lang.Object obj19 = alejaStackTestDriver7.push((java.lang.Object) alejaStackTestDriver13);
        java.lang.Object obj20 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver13);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver21 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj23 = alejaStackTestDriver21.push((java.lang.Object) 1.0f);
        alejaStackTestDriver21.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver25 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj27 = alejaStackTestDriver25.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass28 = alejaStackTestDriver25.getClass();
        java.lang.Object obj29 = alejaStackTestDriver21.push((java.lang.Object) alejaStackTestDriver25);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver21);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        alejaStackTestDriver31.clear();
        java.lang.Object obj36 = alejaStackTestDriver31.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver31.clear();
        java.lang.Object obj39 = alejaStackTestDriver31.push((java.lang.Object) 10.0f);
        java.lang.Object obj40 = alejaStackTestDriver0.push((java.lang.Object) 10.0f);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (byte) 100);
        java.lang.Object obj53 = alejaStackTestDriver41.push((java.lang.Object) alejaStackTestDriver47);
        java.lang.Class<?> wildcardClass54 = alejaStackTestDriver41.getClass();
        java.lang.Object obj55 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj56 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        java.lang.Class<?> wildcardClass58 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (byte) 100 + "'", obj5, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + 1.0f + "'", obj9, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + (byte) 100 + "'", obj12, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1.0f + "'", obj15, 1.0f);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 1.0f + "'", obj23, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + 1.0f + "'", obj27, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (byte) 100 + "'", obj36, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 10.0f + "'", obj39, 10.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 10.0f + "'", obj40, 10.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (byte) 100 + "'", obj52, (byte) 100);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0495");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver84.clear();
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver84.clear();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0496");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver4 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj6 = alejaStackTestDriver4.push((java.lang.Object) 1.0f);
        alejaStackTestDriver4.clear();
        java.lang.Object obj9 = alejaStackTestDriver4.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = alejaStackTestDriver4.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver24 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj26 = alejaStackTestDriver24.push((java.lang.Object) 1.0f);
        alejaStackTestDriver24.clear();
        java.lang.Object obj29 = alejaStackTestDriver24.push((java.lang.Object) true);
        java.lang.Object obj30 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver24);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver31 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj33 = alejaStackTestDriver31.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Object obj35 = alejaStackTestDriver24.push(obj33);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver36 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver36.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver42 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj44 = alejaStackTestDriver42.push((java.lang.Object) 1.0f);
        alejaStackTestDriver42.clear();
        java.lang.Object obj47 = alejaStackTestDriver42.push((java.lang.Object) true);
        java.lang.Object obj48 = alejaStackTestDriver38.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj49 = alejaStackTestDriver36.push((java.lang.Object) alejaStackTestDriver42);
        java.lang.Object obj50 = alejaStackTestDriver24.push((java.lang.Object) alejaStackTestDriver36);
        java.lang.Object obj51 = alejaStackTestDriver4.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Class<?> wildcardClass52 = alejaStackTestDriver24.getClass();
        java.lang.Object obj53 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver24);
        java.lang.Object obj54 = alejaStackTestDriver24.pop();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj6 + "' != '" + 1.0f + "'", obj6, 1.0f);
        org.junit.Assert.assertEquals("'" + obj9 + "' != '" + (short) 10 + "'", obj9, (short) 10);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (byte) 100 + "'", obj17, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (byte) 100 + "'", obj23, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 1.0f + "'", obj26, 1.0f);
        org.junit.Assert.assertEquals("'" + obj29 + "' != '" + true + "'", obj29, true);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + 1.0f + "'", obj33, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + 1.0f + "'", obj35, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + 1.0f + "'", obj44, 1.0f);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + true + "'", obj47, true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0497");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver6 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj8 = alejaStackTestDriver6.push((java.lang.Object) 1.0f);
        alejaStackTestDriver6.clear();
        java.lang.Object obj11 = alejaStackTestDriver6.push((java.lang.Object) (byte) 100);
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Object obj13 = alejaStackTestDriver0.push(obj11);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver14 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj16 = alejaStackTestDriver14.push((java.lang.Object) 1.0f);
        alejaStackTestDriver14.clear();
        java.lang.Object obj19 = alejaStackTestDriver14.push((java.lang.Object) (short) 10);
        java.lang.Object obj21 = alejaStackTestDriver14.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver22 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj24 = alejaStackTestDriver22.push((java.lang.Object) 1.0f);
        alejaStackTestDriver22.clear();
        java.lang.Object obj27 = alejaStackTestDriver22.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver22.clear();
        java.lang.Object obj29 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver22);
        java.lang.Object obj30 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver14);
        alejaStackTestDriver14.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver32.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver39 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj41 = alejaStackTestDriver39.push((java.lang.Object) 1.0f);
        alejaStackTestDriver39.clear();
        java.lang.Object obj44 = alejaStackTestDriver39.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver45 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj47 = alejaStackTestDriver45.push((java.lang.Object) 1.0f);
        alejaStackTestDriver45.clear();
        java.lang.Object obj50 = alejaStackTestDriver45.push((java.lang.Object) true);
        java.lang.Object obj51 = alejaStackTestDriver39.push((java.lang.Object) alejaStackTestDriver45);
        java.lang.Object obj52 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver45);
        alejaStackTestDriver32.clear();
        java.lang.Object obj54 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj57 = alejaStackTestDriver55.push((java.lang.Object) 1.0f);
        alejaStackTestDriver55.clear();
        java.lang.Object obj60 = alejaStackTestDriver55.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Object obj63 = alejaStackTestDriver14.push((java.lang.Object) alejaStackTestDriver55);
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass65 = alejaStackTestDriver55.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1.0f + "'", obj8, 1.0f);
        org.junit.Assert.assertEquals("'" + obj11 + "' != '" + (byte) 100 + "'", obj11, (byte) 100);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (byte) 100 + "'", obj13, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1.0f + "'", obj16, 1.0f);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + (short) 10 + "'", obj19, (short) 10);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (short) 100 + "'", obj21, (short) 100);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + 1.0f + "'", obj24, 1.0f);
        org.junit.Assert.assertEquals("'" + obj27 + "' != '" + (byte) 100 + "'", obj27, (byte) 100);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (byte) 100 + "'", obj37, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + 1.0f + "'", obj41, 1.0f);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + (byte) 100 + "'", obj44, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 1.0f + "'", obj47, 1.0f);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + true + "'", obj50, true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + 1.0f + "'", obj57, 1.0f);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (byte) 100 + "'", obj60, (byte) 100);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0498");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) (short) 10);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver8 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj10 = alejaStackTestDriver8.push((java.lang.Object) 1.0f);
        alejaStackTestDriver8.clear();
        java.lang.Object obj13 = alejaStackTestDriver8.push((java.lang.Object) true);
        java.lang.Object obj15 = alejaStackTestDriver8.push((java.lang.Object) 1);
        java.lang.Object obj16 = alejaStackTestDriver0.push(obj15);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver30 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj32 = alejaStackTestDriver30.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Object obj34 = alejaStackTestDriver23.push(obj32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver35.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver37 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj39 = alejaStackTestDriver37.push((java.lang.Object) 1.0f);
        alejaStackTestDriver37.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver37.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj49 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver35);
        java.lang.Object obj50 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver23);
        alejaStackTestDriver23.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver52 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj54 = alejaStackTestDriver52.push((java.lang.Object) 1.0f);
        alejaStackTestDriver52.clear();
        java.lang.Object obj57 = alejaStackTestDriver52.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver58 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj60 = alejaStackTestDriver58.push((java.lang.Object) 1.0f);
        alejaStackTestDriver58.clear();
        java.lang.Object obj63 = alejaStackTestDriver58.push((java.lang.Object) true);
        java.lang.Object obj64 = alejaStackTestDriver52.push((java.lang.Object) alejaStackTestDriver58);
        alejaStackTestDriver58.clear();
        java.lang.Object obj66 = alejaStackTestDriver23.push((java.lang.Object) alejaStackTestDriver58);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (short) 10);
        java.lang.Object obj74 = alejaStackTestDriver67.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver75 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        alejaStackTestDriver75.clear();
        java.lang.Class<?> wildcardClass79 = alejaStackTestDriver75.getClass();
        java.lang.Object obj80 = alejaStackTestDriver67.push((java.lang.Object) wildcardClass79);
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        alejaStackTestDriver67.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver84 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver84.clear();
        java.lang.Object obj86 = alejaStackTestDriver67.push((java.lang.Object) alejaStackTestDriver84);
        alejaStackTestDriver84.clear();
        java.lang.Object obj88 = alejaStackTestDriver58.push((java.lang.Object) alejaStackTestDriver84);
        java.lang.Class<?> wildcardClass89 = alejaStackTestDriver58.getClass();
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + (short) 10 + "'", obj5, (short) 10);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + (short) 100 + "'", obj7, (short) 100);
        org.junit.Assert.assertEquals("'" + obj10 + "' != '" + 1.0f + "'", obj10, 1.0f);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + true + "'", obj13, true);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + 1 + "'", obj15, 1);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + 1 + "'", obj16, 1);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + 1.0f + "'", obj32, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + 1.0f + "'", obj39, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 1.0f + "'", obj54, 1.0f);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (byte) 100 + "'", obj57, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + 1.0f + "'", obj60, 1.0f);
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + true + "'", obj63, true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (short) 10 + "'", obj72, (short) 10);
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + (short) 100 + "'", obj74, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0499");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver0.clear();
        java.lang.Object obj3 = alejaStackTestDriver0.push((java.lang.Object) false);
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver5 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj7 = alejaStackTestDriver5.push((java.lang.Object) 1.0f);
        alejaStackTestDriver5.clear();
        alejaStackTestDriver5.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        java.lang.Object obj17 = alejaStackTestDriver5.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver18 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj20 = alejaStackTestDriver18.push((java.lang.Object) 1.0f);
        alejaStackTestDriver18.clear();
        java.lang.Object obj23 = alejaStackTestDriver18.push((java.lang.Object) (short) 10);
        java.lang.Object obj25 = alejaStackTestDriver18.push((java.lang.Object) (short) 100);
        alejaStackTestDriver18.clear();
        java.lang.Object obj27 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver18);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver28 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj30 = alejaStackTestDriver28.push((java.lang.Object) 1.0f);
        alejaStackTestDriver28.clear();
        java.lang.Object obj33 = alejaStackTestDriver28.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver28.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver35 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj37 = alejaStackTestDriver35.push((java.lang.Object) 1.0f);
        alejaStackTestDriver35.clear();
        java.lang.Object obj40 = alejaStackTestDriver35.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver41 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj43 = alejaStackTestDriver41.push((java.lang.Object) 1.0f);
        alejaStackTestDriver41.clear();
        java.lang.Object obj46 = alejaStackTestDriver41.push((java.lang.Object) true);
        java.lang.Object obj47 = alejaStackTestDriver35.push((java.lang.Object) alejaStackTestDriver41);
        java.lang.Object obj48 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver41);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver49 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj51 = alejaStackTestDriver49.push((java.lang.Object) 1.0f);
        alejaStackTestDriver49.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver53 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj55 = alejaStackTestDriver53.push((java.lang.Object) 1.0f);
        java.lang.Class<?> wildcardClass56 = alejaStackTestDriver53.getClass();
        java.lang.Object obj57 = alejaStackTestDriver49.push((java.lang.Object) alejaStackTestDriver53);
        java.lang.Object obj58 = alejaStackTestDriver28.push((java.lang.Object) alejaStackTestDriver49);
        java.lang.Object obj59 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver28);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver60 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj62 = alejaStackTestDriver60.push((java.lang.Object) 1.0f);
        alejaStackTestDriver60.clear();
        alejaStackTestDriver60.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver65 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj67 = alejaStackTestDriver65.push((java.lang.Object) 1.0f);
        alejaStackTestDriver65.clear();
        java.lang.Object obj70 = alejaStackTestDriver65.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver65.clear();
        java.lang.Object obj72 = alejaStackTestDriver60.push((java.lang.Object) alejaStackTestDriver65);
        java.lang.Object obj73 = alejaStackTestDriver18.push((java.lang.Object) alejaStackTestDriver60);
        alejaStackTestDriver18.clear();
        java.lang.Object obj75 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver18);
        java.lang.Class<?> wildcardClass76 = alejaStackTestDriver0.getClass();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + false + "'", obj3, false);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1.0f + "'", obj7, 1.0f);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + 1.0f + "'", obj20, 1.0f);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (short) 10 + "'", obj23, (short) 10);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + (short) 100 + "'", obj25, (short) 100);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + 1.0f + "'", obj30, 1.0f);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (byte) 100 + "'", obj33, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + 1.0f + "'", obj37, 1.0f);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + (byte) 100 + "'", obj40, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + 1.0f + "'", obj43, 1.0f);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + 1.0f + "'", obj51, 1.0f);
        org.junit.Assert.assertEquals("'" + obj55 + "' != '" + 1.0f + "'", obj55, 1.0f);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 1.0f + "'", obj62, 1.0f);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 1.0f + "'", obj67, 1.0f);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + (byte) 100 + "'", obj70, (byte) 100);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "Regression_AlejaStackTest_0_8000_0.test0500");
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver0 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj2 = alejaStackTestDriver0.push((java.lang.Object) 1.0f);
        alejaStackTestDriver0.clear();
        java.lang.Object obj5 = alejaStackTestDriver0.push((java.lang.Object) true);
        java.lang.Object obj7 = alejaStackTestDriver0.push((java.lang.Object) 1);
        java.lang.Object obj8 = alejaStackTestDriver0.pop();
        alejaStackTestDriver0.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver10 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj12 = alejaStackTestDriver10.push((java.lang.Object) 1.0f);
        alejaStackTestDriver10.clear();
        java.lang.Object obj15 = alejaStackTestDriver10.push((java.lang.Object) (byte) 100);
        alejaStackTestDriver10.clear();
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver17 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj19 = alejaStackTestDriver17.push((java.lang.Object) 1.0f);
        alejaStackTestDriver17.clear();
        java.lang.Object obj22 = alejaStackTestDriver17.push((java.lang.Object) (byte) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver23 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj25 = alejaStackTestDriver23.push((java.lang.Object) 1.0f);
        alejaStackTestDriver23.clear();
        java.lang.Object obj28 = alejaStackTestDriver23.push((java.lang.Object) true);
        java.lang.Object obj29 = alejaStackTestDriver17.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj30 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver23);
        java.lang.Object obj31 = alejaStackTestDriver0.push((java.lang.Object) alejaStackTestDriver10);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver32 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj34 = alejaStackTestDriver32.push((java.lang.Object) 1.0f);
        alejaStackTestDriver32.clear();
        java.lang.Object obj37 = alejaStackTestDriver32.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver38 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj40 = alejaStackTestDriver38.push((java.lang.Object) 1.0f);
        alejaStackTestDriver38.clear();
        java.lang.Object obj43 = alejaStackTestDriver38.push((java.lang.Object) (byte) 100);
        java.lang.Object obj44 = alejaStackTestDriver32.push((java.lang.Object) alejaStackTestDriver38);
        java.lang.Object obj45 = alejaStackTestDriver32.pop();
        java.lang.Object obj46 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver32);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver47 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj49 = alejaStackTestDriver47.push((java.lang.Object) 1.0f);
        alejaStackTestDriver47.clear();
        java.lang.Object obj52 = alejaStackTestDriver47.push((java.lang.Object) (short) 10);
        java.lang.Object obj54 = alejaStackTestDriver47.push((java.lang.Object) (short) 100);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver55 = new experiment.drivers.AlejaStackTestDriver();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        alejaStackTestDriver55.clear();
        java.lang.Class<?> wildcardClass59 = alejaStackTestDriver55.getClass();
        java.lang.Object obj60 = alejaStackTestDriver47.push((java.lang.Object) wildcardClass59);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver61 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj63 = alejaStackTestDriver61.push((java.lang.Object) 1.0f);
        alejaStackTestDriver61.clear();
        java.lang.Object obj66 = alejaStackTestDriver61.push((java.lang.Object) true);
        experiment.drivers.AlejaStackTestDriver alejaStackTestDriver67 = new experiment.drivers.AlejaStackTestDriver();
        java.lang.Object obj69 = alejaStackTestDriver67.push((java.lang.Object) 1.0f);
        alejaStackTestDriver67.clear();
        java.lang.Object obj72 = alejaStackTestDriver67.push((java.lang.Object) (byte) 100);
        java.lang.Object obj73 = alejaStackTestDriver61.push((java.lang.Object) alejaStackTestDriver67);
        java.lang.Object obj74 = alejaStackTestDriver47.push((java.lang.Object) alejaStackTestDriver61);
        alejaStackTestDriver47.clear();
        java.lang.Object obj76 = alejaStackTestDriver10.push((java.lang.Object) alejaStackTestDriver47);
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        alejaStackTestDriver47.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = alejaStackTestDriver47.pop();
            org.junit.Assert.fail("Expected exception of type experiment.util.EmptyStackException; message: null");
        } catch (experiment.util.EmptyStackException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + obj2 + "' != '" + 1.0f + "'", obj2, 1.0f);
        org.junit.Assert.assertEquals("'" + obj5 + "' != '" + true + "'", obj5, true);
        org.junit.Assert.assertEquals("'" + obj7 + "' != '" + 1 + "'", obj7, 1);
        org.junit.Assert.assertEquals("'" + obj8 + "' != '" + 1 + "'", obj8, 1);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + 1.0f + "'", obj12, 1.0f);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + (byte) 100 + "'", obj15, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj19 + "' != '" + 1.0f + "'", obj19, 1.0f);
        org.junit.Assert.assertEquals("'" + obj22 + "' != '" + (byte) 100 + "'", obj22, (byte) 100);
        org.junit.Assert.assertEquals("'" + obj25 + "' != '" + 1.0f + "'", obj25, 1.0f);
        org.junit.Assert.assertEquals("'" + obj28 + "' != '" + true + "'", obj28, true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals("'" + obj34 + "' != '" + 1.0f + "'", obj34, 1.0f);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + true + "'", obj37, true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + 1.0f + "'", obj40, 1.0f);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (byte) 100 + "'", obj43, (byte) 100);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + 1.0f + "'", obj49, 1.0f);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (short) 10 + "'", obj52, (short) 10);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + (short) 100 + "'", obj54, (short) 100);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "class experiment.drivers.AlejaStackTestDriver");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + 1.0f + "'", obj63, 1.0f);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + true + "'", obj66, true);
        org.junit.Assert.assertEquals("'" + obj69 + "' != '" + 1.0f + "'", obj69, 1.0f);
        org.junit.Assert.assertEquals("'" + obj72 + "' != '" + (byte) 100 + "'", obj72, (byte) 100);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNotNull(obj76);
    }
}

